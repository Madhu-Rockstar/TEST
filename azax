var id_current_prior = 0;
var currentyear_total = 0;
var lastyear_total = 0;
var currentyear_complete = 0;
var lastyear_complete = 0;
var graph_PracticesName = 0;
var last_year = false;

var serverRoot = '';
var $tooltip = $('#tooltip');
var clientX = 0;
$tooltip.hide();
var $text = $('#tooltiptext');
var NetworkORPracticeFilter = 'NetworkLevel';
var FacilityNameInsti = '';
var PatientNameInsti = '';
var SpecialtyProf = '';
var ClaimPhyProf = '';
var servicefundPMPMBool = false;

$('.image_widget_clock').ready(function () {
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0');
    var yyyy = today.getFullYear();
    today = mm + '/' + dd + '/' + yyyy;

    $("#claimsDetailsCreateDate").attr({ "title": today });
    $("#benchmarkReportCreateDate").attr({ "title": today });
    $("#topExpendituresCreateDate").attr({ "title": today });
    $("#savingsLossesCreateDate").attr({ "title": today });
    $("#farCreateDate").attr({ "title": today });
    $("#diseaseRegistryCreateDate").attr({ "title": today });
    $("#currentVsPriorCreateDate").attr({ "title": today });
    $("#patientCensusCreateDate").attr({ "title": today });
    $("#hchnPatientsByProviderCreateDate").attr({ "title": today });
    $("#labUtilizationCreateDate").attr({ "title": today });
});

displayTooltip = function (text, left, top, valtext) {
    $text.html(text + ' - ' + '<strong>$' + valtext.toFixed(2) + '</strong>');
    $tooltip.show();
    $tooltip.css('left', parseInt(left) + 24 + 'px');
    $tooltip.css('top', parseInt(top) + 15 + 'px');
};
var timer;
function hideTooltip(e) {
    clearTimeout(timer);
};
function getDeRiskPhysician(PhysicianId) {
    window.location.href = serverRoot+ "/DeRisk/DeRisk/Index?PhysicianId=" + PhysicianId ; 
}


function getCaregapsPhysician(PhysicianId) {
    window.location.href = serverRoot + "/CareGaps/CareGaps/Index?PhysicianId=" + PhysicianId;
}

function colvis_inner_button() {
    datatab_width = $('#' + datatable_id).innerWidth();
    datagraph_width = $('#' + datatable_graph).innerWidth();
    datamodal_width = $('.modal_width').innerWidth();
    if (datagraph_width != undefined) {
        if ((datatab_width != datagraph_width)) {
            $('#' + datatable_graph).highcharts().setSize(datatab_width);
            $('.far_width_popup').css('width', datatab_width);
            $('#' + datatable_id + '_wrapper').css('width', datatab_width);
        }
    } else {
        if (datamodal_width < datatab_width) {
            $('#' + datatable_id + '_wrapper').css('width', datatab_width);
        }
    };
}  

//datatable colvisbutton scroll
var datatable_id;
var datatable_graph;
var tab_summary_id;
function colvis_scroll() {
    var Top = $('.dt-button-collection').offset().top;
    var eTop = Top - $(window).scrollTop();
    var down = windowheight - eTop;
    $('.dt-button-collection').css('height', '');
    var colvis_div_height = $('.dt-button-collection').innerHeight();
    if (colvis_div_height > down) {
        $('.dt-button-collection').css('height', (colvis_div_height / 2));
    } else {
        $('.dt-button-collection').css('height', '');
    }
}
function resizereportchart() {
    var reportdivwidth = $(".modal-report-lg-width").innerWidth();
    $(".chart-report-lg-width").css("width", reportdivwidth - 50);

};

function ExportPrint(tablename, graphname, TotalRecords) {
    //
    $(".loader").show();
    $('#' + tablename + '').DataTable().page.len(TotalRecords).draw();
    var tabledata = document.getElementById(tablename);
    tabledata.border = 1;

    //if we use scrollx=true for table we dont get headers so below code is added
    // if ($("div").hasClass('dataTables_scrollBody')) {
    $('#' + tablename + '_wrapper').each(function () {
        if ($(this).parent().find('.dataTables_scrollBody').length) {
            var totalrows = tabledata.rows[0].cells.length;
            var header = tabledata.createTHead();
            var row = header.insertRow(0);
            var createheader = "";
            var i;
            var dividlist = [];

            $("th div").each(function () {
                dividlist.push(this.innerHTML);
            });

            for (i = 0; i < totalrows; i++) {
                createheader = createheader + "<th>" + dividlist[i] + "</th>";
            }
            row.innerHTML = "<tr>" + createheader + "</tr>";
        }
    });
    // }
    //End
    $('#ui_divprint').html(tabledata.outerHTML);

    //To Remove first column data for every row
    var htmlToPrint = '' +
        '<style type="text/css">   @media print {table td:first-child {display:none}table th:first-child {display:none}}' +
        '</style>';
    htmlToPrint += document.getElementById('ui_divprint').innerHTML;
    //End

    var frame = "";
    if (graphname != "") {
        frame = document.getElementById(graphname).outerHTML + "<br/><br/>" + htmlToPrint;
    } else {
        frame = htmlToPrint;
    }
    //frame.border = 1;
    var prtwin = window.open('', 'PrintGridViewData', 'left=100,top=100,height=1000,tollbar=0,scrollbars=1,status=0,resizable=1');
    prtwin.document.write(frame);
    prtwin.document.close();
    prtwin.focus();
    prtwin.print();
    prtwin.close();
    setTimeout(function () {

        tabledata.border = 0;

        $('#' + tablename + '').DataTable().page.len(10).draw();
        $(".loader").fadeOut("slow");
        win.close();
    }, 50);
}
//End

//Export data to PDF Starts Here

function ConvertGraphtoBase(WidgetType, tablename, Graph, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, Ph_id, Pr_id, yeartype, ByMonthORPraOrPhyDataFilter, servicefundFilters, ByMonthORLocationDataFilter, servicefundPMPMBool, PatientId, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month) {


    if (Graph != "") {
        var target = $('#' + Graph + '');
        var wrapper = document.getElementById(Graph);
        var svg = wrapper.querySelector("svg");

        if (typeof window.XMLSerializer != "undefined") {
            var svgData = (new XMLSerializer()).serializeToString(svg);
        } else if (typeof svg.xml != "undefined") {
            var svgData = svg.xml;
        }

        var canvas = document.createElement("canvas");
        var svgSize = svg.getBoundingClientRect();
        canvas.width = svgSize.width;
        canvas.height = svgSize.height;
        var ctx = canvas.getContext("2d");

        var img = document.createElement("img");
        img.setAttribute("src", "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgData))));
        //alert("data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgData))));

        var val = "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgData)));
        img.onload = function () {
            ctx.drawImage(img, 0, 0);

            ExporttoPDF(canvas.toDataURL(), tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, WidgetType, Ph_id, Pr_id, yeartype, ByMonthORPraOrPhyDataFilter, servicefundFilters, ByMonthORLocationDataFilter, servicefundPMPMBool, PatientId, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month);

        };
    } else {
        var val = "data:image/svg+xml;base64,";
        ExporttoPDF(val, tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, WidgetType, Ph_id, Pr_id, yeartype, ByMonthORPraOrPhyDataFilter, servicefundFilters, ByMonthORLocationDataFilter, servicefundPMPMBool, PatientId, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month);
    }
}

function ExporttoPDF(val, Tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, WidgetType, Ph_id, Pr_id, yeartype, ByMonthORPraOrPhyDataFilter, servicefundFilters, ByMonthORLocationDataFilter, servicefundPMPMBool, PatientId, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month) {


    $(".loader").show();
    // var RegionId = null;
    var table = $('#' + Tablename + '').DataTable();
    var columns = "";
    if (WidgetType == "currentvsprior") {
        columns = (ConditionCode == "AWV" || ConditionCode == "FLUSHOTS") ? oTable.FieldName : oTable;
    } else {
        columns = oTable.aoColumns;
    }

    var allData = "";
    if (WidgetType == "currentvsprior") {
        for (var i = 0; i < columns.length; i++) {
            allData = allData + ":" + columns[i].data + "#" + columns[i].title;


        }
    } else {
        for (var i = 0; i < columns.length; i++) {
            if (oTable.aoColumns[i].data != "HCPCSCodeDescription" && oTable.aoColumns[i].data != "ICDCodeDescription" && oTable.aoColumns[i].data != "HCCCodeDescription" && oTable.aoColumns[i].data != "Id" && oTable.aoColumns[i].data != "ClaimPhysicianId") {
                allData = allData + ":" + oTable.aoColumns[i].data + "#" + oTable.aoColumns[i].title;

            }
        }
    }
    var dividlist = [];
    //if we use scrollx=true for table we dont get headers so below code is added
    // var dividlist = [];
    $('#' + Tablename + '_wrapper').each(function () {
        if ($(this).parent().find('.dataTables_scrollBody').length) {


            $("th div").each(function () {
                dividlist.push(this.innerHTML);
            });


        } else {
            $('#' + Tablename + ' > thead > tr > th').each(function () {
                dividlist.push($(this).text())
            })
        }
    });



    var columnlist = [];
    var columnHeaderList = [];
    var allData_split = allData.split(":");
    for (var j = 1; j < allData_split.length; j++) {

        var Temp1 = allData_split[j].split("#");

        for (var k = 0; k <= dividlist.length; k++) {
            if (dividlist[k] == Temp1[1]) {
                columnHeaderList.push(Temp1[1]);
                columnlist.push(Temp1[0]);
            }
        }
    }


    var RemoveDuplicatecolumns = removeDuplicates(columnlist);
    var RemoveDuplicatecolumnsHeaders = removeDuplicates(columnHeaderList);
    var reporttype = "";

    if (WidgetType == "Reports" || WidgetType.toUpperCase() == "CURRENTVSPRIOR") {
        reporttype = $("#hdnReportType").val()
    } else {
        reporttype = ConditionCode;
    }
    if (WidgetType == "ClaimDetails") {
        export_datayear = Fromyear;
    }
    if (WidgetType == "topExp") {
        phys_id = Ph_id;
        prac_id = Pr_id;
    } else {
        phys_id = physicianId;
        prac_id = practiceId;
    }

    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/Export',
        data: JSON.stringify({
            TopExpenditureRowid: TopExpenditurePatientRowid, TypeOfWidget: WidgetType, Reportname: reporttype, PracticeId: prac_id,
            PhysicianId: phys_id, regionId: RegionId, Year: export_datayear, Graphbase: val, ToYear: Toyear, ColumnValues: RemoveDuplicatecolumns,
            ReportTitle: detailtitle, ColumnHeaders: RemoveDuplicatecolumnsHeaders, ClaimTypes: ClaimTypes, stringyear: yeartype,
            UASFilter: ByMonthORPraOrPhyDataFilter, servicefundFilters: servicefundFilters, SettleMonthFilter: ByMonthORLocationDataFilter, servicefundPMPM: servicefundPMPMBool,
            PatientId: PatientId, SpecialityType: SpecialityType, Secpopup: Secpopup, RowPhysicianid: RowPhysicianid, FacilityId: FacilityId, Month: Month
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {

            if (data != null) {
                var url = serverRoot + '/Insights/Insights/DownloadDocument?documentId=' + data;
                window.open(url);
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");

            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

function ExportToExcel(WidgetType, tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, ClaimtypeName, Ph_id, Pr_id, Id, PatientId, PatientName, ByMonthORPraOrPhyDataFilter, servicefundFilters, ByMonthORLocationDataFilter, servicefundPMPMBool, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month) {
    debugger;
    $(".loader").show();
    var Toyear1 = Toyear;
    var YearStatus = Toyear;
    var table = $('#' + tablename).DataTable();
    var order = table.order();
    var SearchText = table.search();
    var SortDirection = order[0][1];
    columns = table.settings()[0].aoColumns;
    var SortColumnName = columns[order[0][0]].data;
    var allData = "";
    var iscompleted = $("#hdnIsCompleted").val();
    for (var i = 0; i < columns.length; i++) {


        if (columns[i].data != "HCPCSCodeDescription" && columns[i].data != "ICDCodeDescription" && columns[i].data != "HCCCodeDescription" && columns[i].data != "Id" && columns[i].data != "ClaimPhysicianId") {
            allData = allData + ":" + columns[i].data + "#" + columns[i].title;
        }
    }
    var PaginationParams = {
        SearchText: SearchText,
        Order: SortDirection,
        SortColumn: SortColumnName,
        PageSize: 0,
        Draw: 0,
        StartIndex: 0
    };
    var dividlist = [];
    //if we use scrollx=true for table we dont get headers so below code is added
    $('#' + tablename + '_wrapper').each(function () {
        if ($(this).parent().find('.dataTables_scrollBody').length) {


            $('#' + tablename + ' > thead > tr > th div').each(function () {
                dividlist.push(this.innerHTML);
            });

        } else {
            $('#' + tablename + ' > thead > tr > th').each(function () {
                dividlist.push($(this).text());
            });
        }
    });


    var columnlist = [];
    var columnHeaderList = [];
    var allData_split = allData.split(":");
    for (var j = 1; j < allData_split.length; j++) {

        var Temp1 = allData_split[j].split("#");

        for (var k = 0; k <= dividlist.length; k++) {
            if (dividlist[k] == Temp1[1]) {
                columnHeaderList.push(Temp1[1]);
                if (Temp1[0].trim() != "")
                    columnlist.push(Temp1[0]);
            }
        }
    }


    var RemoveDuplicatecolumns = removeDuplicates(columnlist);
    var reporttype = "";
    var phys_id = "";
    var prac_id = "";
    if (WidgetType == "Reports") {
        reporttype = $("#hdnReportType").val();
    } else if (WidgetType.toUpperCase() == "CURRENTVSPRIOR") {
        reporttype = $("#hdnReportType").val();
        export_datayear = Fromyear;
    } else {
        reporttype = ConditionCode;
    }

    if (WidgetType == "TopExpenditureDetails") {


        export_datayear = null;
    }
    if (WidgetType == "topExp") {
        phys_id = Ph_id;
        prac_id = Pr_id;
        export_datayear = Toyear;
        ClaimTypes = undefined;

    } else {
        phys_id = Ph_id;
        prac_id = Pr_id;
    }

    if (WidgetType == "TopExpenditureDetails") {
        export_datayear = null
    }
    if ($("#FARlast_year").is(':checked') && WidgetType == "topExp") {
        var from = Fromyear;
        var to = Toyear;
        export_datayear = to;
        Toyear = from;

    }

    var currentDate = new Date();
    var currentYear = 1;

    if ($("#FARlast_year").is(':checked')) {
        export_datayear = currentYear - 1;
        Toyear = export_datayear;
    }
    else {
        export_datayear = currentYear;
        Toyear = export_datayear;
    }
    if (WidgetType.toUpperCase() == "CURRENTVSPRIOR" && tablename == "Currentvsprior") {
        export_datayear = 0;
        Toyear = YearStatus;
        detailtitle = WidgetType.toUpperCase() + "  " + 'AWV';

    }
    if (WidgetType.toUpperCase() == "CURRENTVSPRIOR" && tablename == "kpi-tables") {
        export_datayear = Fromyear;
        detailtitle = WidgetType.toUpperCase() + "  " + 'KPI';

    }
    if (WidgetType.toUpperCase() == "CURRENTVSPRIOR" && tablename == "spend-tables") {
        export_datayear = Fromyear;
        detailtitle = WidgetType.toUpperCase() + "  " + 'SPEND';

    }
    if (WidgetType.toUpperCase() == "CURRENTVSPRIOR" && tablename == "CurrentvspriorFLU") {
        export_datayear = 0;
        Toyear = YearStatus;
        detailtitle = WidgetType.toUpperCase() + "  " + 'FLOU SHOTS';

    }
    if (WidgetType == "ClaimDetails" && Fromyear != "undefined") {
        export_datayear = Fromyear;
        Toyear = Toyear1;
        detailtitle = "ClaimDetails";
    }

    var model = {
        PaginationParams: PaginationParams,
        TopExpenditureRowid: TopExpenditurePatientRowid,
        TypeOfWidget: WidgetType,
        Reportname: reporttype,
        PracticeId: prac_id,
        PhysicianId: phys_id,
        regionId: RegionId,
        Year: export_datayear,
        ToYear: Toyear,
        ColumnValues: RemoveDuplicatecolumns ?.join(','),
        ReportTitle: detailtitle,
        ColumnHeaders: columnHeaderList ?.join(','),
        ClaimTypes: ClaimTypes,
        ClaimTypeString: (ClaimTypes == null || ClaimTypes == "") ? "" : ClaimTypes ?.join(','),
        ClaimtypeName: ClaimtypeName,
        ConditionCode: ConditionCode,
        PatientId: PatientId,
        Id: Id,
        PatientName: PatientName,
        IsAssignable: isAssignable,
        UASFilter: ByMonthORPraOrPhyDataFilter,
        servicefundFilters: servicefundFilters,
        SettleMonthFilter: ByMonthORLocationDataFilter,
        servicefundPMPM: servicefundPMPMBool,
        Month: Month,
        IsCompleted: iscompleted,
        SearchText: SearchText,
        Order: SortDirection,
        SortColumn: SortColumnName
    };
    debugger;
    $.ajax({
        type: "GET",
        async: true,
        url: serverRoot + '/Insights/Insights/DownloadReportsData',
        data: model,
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {
            if (data.patientList != "") {
                window.location = serverRoot + "/Common/DownloadFile";
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");

            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}

function ExportToExcelClaimSearch(WidgetType, tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, ClaimtypeName, Ph_id, Pr_id, Id, PatientId, PatientName, ByMonthORPraOrPhyDataFilter, servicefundFilters, ByMonthORLocationDataFilter, servicefundPMPMBool, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month) {

    $(".loader").show();
    var Toyear1 = Toyear;
    var table = $('#' + tablename).DataTable();
    var order = table.order();
    var SearchText = table.search();
    var SortDirection = order[0][1];
    columns = table.settings()[0].aoColumns;
    var SortColumnName = columns[order[0][0]].data;
    var allData = "";
    var iscompleted = $("#hdnIsCompleted").val();
    for (var i = 0; i < columns.length; i++) {


        if (columns[i].data != "HCPCSCodeDescription" && columns[i].data != "ICDCodeDescription" && columns[i].data != "HCCCodeDescription" && columns[i].data != "Id" && columns[i].data != "ClaimPhysicianId") {
            allData = allData + ":" + columns[i].data + "#" + columns[i].title;
        }
    }
    var PaginationParams = {
        SearchText: SearchText,
        Order: SortDirection,
        SortColumn: SortColumnName,
        PageSize: 0,
        Draw: 0,
        StartIndex: 0
    };
    var dividlist = [];
    //if we use scrollx=true for table we dont get headers so below code is added
    $('#' + tablename + '_wrapper').each(function () {
        if ($(this).parent().find('.dataTables_scrollBody').length) {


            $('#' + tablename + ' > thead > tr > th div').each(function () {
                dividlist.push(this.innerHTML);
            });

        } else {
            $('#' + tablename + ' > thead > tr > th').each(function () {
                dividlist.push($(this).text());
            });
        }
    });


    var columnlist = [];
    var columnHeaderList = [];
    var allData_split = allData.split(":");
    for (var j = 1; j < allData_split.length; j++) {

        var Temp1 = allData_split[j].split("#");

        for (var k = 0; k <= dividlist.length; k++) {
            if (dividlist[k] == Temp1[1]) {
                columnHeaderList.push(Temp1[1]);
                if (Temp1[0].trim() != "")
                    columnlist.push(Temp1[0]);
            }
        }
    }


    var RemoveDuplicatecolumns = removeDuplicates(columnlist);
    var reporttype = "";
    var phys_id = "";
    var prac_id = "";
    if (WidgetType == "Reports") {
        reporttype = $("#hdnReportType").val();
    } else if (WidgetType.toUpperCase() == "CURRENTVSPRIOR") {
        reporttype = $("#hdnReportType").val();
        export_datayear = Fromyear;
    } else {
        reporttype = ConditionCode;
    }

    if (WidgetType == "TopExpenditureDetails") {


        export_datayear = null;
    }
    if (WidgetType == "topExp") {
        phys_id = Ph_id;
        prac_id = Pr_id;
        export_datayear = Toyear;
        ClaimTypes = undefined;

    } else {
        phys_id = Ph_id;
        prac_id = Pr_id;
    }

    if (WidgetType == "TopExpenditureDetails") {
        export_datayear = null
    }
    if ($("#FARlast_year").is(':checked') && WidgetType == "topExp") {
        var from = Fromyear;
        var to = Toyear;
        export_datayear = to;
        Toyear = from;

    }

    var currentDate = new Date();
    var currentYear = 1;

    if ($("#FARlast_year").is(':checked')) {
        export_datayear = currentYear - 1;
        Toyear = export_datayear;
    }
    else {
        export_datayear = currentYear;
        Toyear = export_datayear;
    }
    if (WidgetType.toUpperCase() == "CURRENTVSPRIOR" && reporttype.toUpperCase() == "AWV") {
        export_datayear = Fromyear;
    }
    if (WidgetType == "ClaimDetails" && Fromyear != "undefined") {
        export_datayear = Fromyear;
        Toyear = Toyear1;
        detailtitle = "ClaimDetails";
    }

    var model = {
        PaginationParams: PaginationParams,
        TopExpenditureRowid: TopExpenditurePatientRowid,
        TypeOfWidget: WidgetType,
        Reportname: reporttype,
        PracticeId: prac_id,
        PhysicianId: phys_id,
        regionId: RegionId,
        Year: export_datayear,
        ToYear: Toyear,
        ColumnValues: RemoveDuplicatecolumns ?.join(','),
        ReportTitle: detailtitle,
        ColumnHeaders: columnHeaderList ?.join(','),
        ClaimTypes: ClaimTypes,
        ClaimTypeString: (ClaimTypes == null || ClaimTypes == "") ? "" : ClaimTypes ?.join(','),
        ClaimtypeName: ClaimtypeName,
        ConditionCode: ConditionCode,
        PatientId: PatientId,
        Id: Id,
        PatientName: PatientName,
        IsAssignable: isAssignable,
        UASFilter: ByMonthORPraOrPhyDataFilter,
        servicefundFilters: servicefundFilters,
        SettleMonthFilter: ByMonthORLocationDataFilter,
        servicefundPMPM: servicefundPMPMBool,
        Month: Month,
        IsCompleted: iscompleted,
        SearchText: SearchText,
        Order: SortDirection,
        SortColumn: SortColumnName
    };

    $.ajax({
        type: "GET",
        async: true,
        url: serverRoot + '/Insights/Insights/DownloadClaimsReportsData',
        data: model,
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {
            if (data.patientList != "") {
                window.location = serverRoot + "/Common/DownloadFile";
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");

            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}

function removeDuplicates(arr) {
    let unique_array = [];
    for (let i = 0; i < arr.length; i++) {
        if (unique_array.indexOf(arr[i]) == -1) {
            unique_array.push(arr[i]);
        }
    }
    return unique_array;
}
//END
//Export claimsdashboard data to PDF Starts Here

function Convertpdf(tablename, Graph, ClaimtypeName) {

    if (Graph != "") {
        var target = $('#' + Graph + '');
        var wrapper = document.getElementById(Graph);
        var svg = wrapper.querySelector("svg");

        if (typeof window.XMLSerializer != "undefined") {
            var svgData = (new XMLSerializer()).serializeToString(svg);
        } else if (typeof svg.xml != "undefined") {
            var svgData = svg.xml;
        }

        var canvas = document.createElement("canvas");
        var svgSize = svg.getBoundingClientRect();
        canvas.width = svgSize.width;
        canvas.height = svgSize.height;
        var ctx = canvas.getContext("2d");

        var img = document.createElement("img");
        img.setAttribute("src", "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgData))));

        var val = "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgData)));
        img.onload = function () {
            ctx.drawImage(img, 0, 0);
            ExporttoClaimsPDF(canvas.toDataURL(), tablename);
        };
    } else {
        var val = "data:image/svg+xml;base64,";
        ExporttoClaimsPDF(val, tablename, ClaimtypeName);
    }
}

function ExporttoClaimsPDF(val, Tablename, ClaimtypeName) {

    $(".loader").show();
    var table = $('#' + Tablename + '').DataTable();
    var columns = oTable.aoColumns;
    var allData = "";
    for (var i = 1; i < columns.length; i++) {
        allData = allData + ":" + oTable.aoColumns[i].data + "#" + oTable.aoColumns[i].title;
    }
    var dividlist = [];
    //if we use scrollx=true for table we dont get headers so below code is added
    var dividlist = [];
    $('#' + Tablename + '_wrapper').each(function () {
        if ($(this).parent().find('.dataTables_scrollBody').length) {
            $("th div").each(function () {
                dividlist.push(this.innerHTML);
            });
        } else {
            $('#' + Tablename + ' > thead > tr > th').each(function () {
                dividlist.push($(this).text())
            })
        }
    });

    var columnlist = [];
    var columnHeaderList = [];
    var allData_split = allData.split(":");
    for (var j = 1; j < allData_split.length; j++) {

        var Temp1 = allData_split[j].split("#");

        for (var k = 0; k <= dividlist.length; k++) {
            if (dividlist[k] == Temp1[1]) {
                columnHeaderList.push(Temp1[1]);
                columnlist.push(Temp1[0]);
            }
        }
    }
    var fromDate;
    var toDate;

    //mm/dd/yyyy format
    if ($("#last_year").is(':checked')) {
        fromDate = 1 + "/" + 1 + "/" + '0000';
        toDate = 12 + "/" + 31 + "/" + '0000';
    }
    else if ($("#year_to_date").is(':checked')) {
        fromDate = 1 + "/" + 1 + "/" + '0001';
        toDate = 12 + "/" + 31 + "/" + '0001';
    }
    var claimtypes;
    switch (ClaimtypeName) {
    
        case 'INPATIENT':
            claimtypes = new Array("3", "4");
            break;
        case 'OUTPATIENT':
            claimtypes = new Array("6");
            break;
        case 'DME':
            claimtypes = new Array("11", "12", "13", "14");
            break;
        case 'HOSPICE':
            claimtypes = new Array("2");
            break;
        case 'HHA':
            claimtypes = new Array("1");
            break;
        case 'SNF':
            claimtypes = new Array("5", "15");
            break;
        case 'PHARMACY':
            claimtypes = new Array("19");
            break;
    }


    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/ClaimsDashboardExport',
        data: JSON.stringify({
            Graphbase: val, ColumnValues: columnlist, ReportTitle: detailtitle, ColumnHeaders: columnHeaderList, FromDate: fromDate,
            ClaimType: claimtypes, ToDate: toDate, ClaimtypeName: ClaimtypeName,
            Id: null,
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {

        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");

            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

//END



$(window).resize(resizereportchart);


var startDate = new Date();

$('#FromDate').datepicker({
    autoclose: true,
    minViewMode: 1,
    format: 'mm/yyyy'
}).on('changeDate', function (selected) {
    if (typeof (selected.date) != typeof (undefined)) {
        startDate = new Date(selected.date.valueOf());
        startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
    }
    $('#ToDate').datepicker('setStartDate', startDate);
});

var FromEndDate = new Date();

$('#ToDate').datepicker({
    autoclose: true,
    minViewMode: 1,
    format: 'mm/yyyy'
}).on('changeDate', function (selected) {
    if (typeof (selected.date) != typeof (undefined)) {
        FromEndDate = new Date(selected.date.valueOf());
        FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
    }
    $('#FromDate').datepicker('setEndDate', FromEndDate);
});

$(window).on('load', function () {
    $(".loader").fadeOut("slow");
    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        "currency-pre": function (a) {
            a = (a === "-") ? 0 : a.toString().replace(/[^\d\-\.]/g, "");
            return parseFloat(a);
        },
        "currency-asc": function (a, b) {
            return a - b;
        },
        "currency-desc": function (a, b) {
            return b - a;
        }
    });

})

//FAR list dividing equally code starts

var farArray = new Array(),
    $farList = $('ul.freek-report');

//Create array of all posts in lists
$farList.find('li').each(function () {
    farArray.push($(this).html());
})

//Split the array at this point. The original array is altered.
var firstList = farArray.splice(0, Math.round(farArray.length / 2)),
    secondList = farArray,
    ListHTML = '';

function createHTML(list) {
    ListHTML = '';
    for (var i = 0; i < list.length; i++) {
        ListHTML += '<li>' + list[i] + '</li>'
    };
}

//Generate HTML for first list
createHTML(firstList);
$farList.html(ListHTML);

//Generate HTML for second list
createHTML(secondList);
//Create new list after original one
$farList.after('<ul class="freek-report col-sm-6"></ul>').next().html(ListHTML);

var detailtitle = "";

//FAR list dividing equally code ends

//claims detail hover effect tooltip
var tooltips = document.querySelectorAll('.tooltip_claim .tooltip_div');

window.onmousemove = function (e) {
    clientX = e.clientX;
    var x = (e.clientX + 20) + 'px',
        y = (e.clientY + 20) + 'px';
    for (var i = 0; i < tooltips.length; i++) {
        tooltips[i].style.top = y;
        tooltips[i].style.left = x;
    }
};
//claims detail hover effect tooltip
$("#ModalTopExpenditureDetails").on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget);  // Button that triggered the modal
    var titleData = button.data('title'); // Extract value from data-* attributes

    var claimsPhysician = button.data('claimsphysician'); // Extract ClaimsPhysician   
    var PhysicianLastName = button.data('physician');
    //detailtitle = "Top Expenditures - " + PhysicianLastName;
    detailtitle = "Top Expenditures - Physician Details: " + PhysicianLastName;

    $(".modal .modal-title").css("color", "white");
    //$(".modal .modal-title").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
    //    + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle + "</a>"
    //);
    $(".modal .modal-title").html("<a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle + "</a>"
    );
    var currentYear = 1;
    var currentYear1 = currentYear;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
        currentYear1 = currentYear;
    }
    else if ($("#custom_date").is(':checked')) {
        var fDate = $("#FromDate").datepicker('getDate');
        var tDate = $("#ToDate").datepicker('getDate');
        if ((fDate != null) && (tDate != null)) {
            currentYear = 1;
            currentYear1 = 1;


        }
    }
    else if ($("#life_to_date").is(':checked')) {
        currentYear = 1800;
    }

    if (titleData != undefined) {
        $(".loader").show();
        table = $('#tblTopExpenditureDetails').dataTable({
            "dom": 'Bfrltip',
            destroy: true,
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            fixedHeader: true,
            //scrollY: "350px",
            scrollY: false,
            scrollX: true,
            //"scrollX": false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetTopExpenditurePatientDetails_ServerSidePagination',
                "data": function (d, settings) {
                    d.Id = titleData;
                    d.PracticeId = practiceId;
                    d.PhysicianId = physicianId;
                    d.regionId = RegionId;
                    d.Fromyear = currentYear;
                    d.Toyear = currentYear1;
                    d.Frommonth = -1;
                    d.Tomonth = -1;
                    d.ClaimsPhysicianId = claimsPhysician;
                    d.IsAssignable = isAssignable;

                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
            },

            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                }
            },
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');

               
                $('.column-btn').click(function () {
                    $column_btn_this = $(this)
                    colvis_scroll();
                });
                $(document).on('click', '.dt-button-collection .dt-button', function () {
                    colvis_inner_button();
                });

                var $searchInput = $('div.dataTables_filter input');

                $searchInput.unbind();

                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblTopExpenditureDetails").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblTopExpenditureDetails").dataTable().api();
                        dtable.search("").draw();
                    }

                });

            },
            order: [[14, "desc"]],
            aoColumns: [
                { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                { "data": "Id", "title": "Id", sClass: "hidden" },
                { "data": "MBI", "title": "Patient ID", sClass: "text-center" },
                { "data": "HICN", "title": "HICN", sClass: "text-center" },

                {
                    "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<a href='javascript:void(0);' onclick='showPatientDetails(\"" + full['ClaimsPhysicianId'] + "\",\"" + full['PatientId'] + "\" , null,null,\"" + full['PhysicianId'] + "\",\"" + currentYear + "\" ,\"" + full['PatientName'] + "\",\"" + full['CostWithDollar'] + "\",\"" + full['MBI'] + "\" );return false'>" + data + "</a>";
                    }
                },
                { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center" },
                { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                {
                    "data": "AssignedPhysician", "title": "Assigned Physician", sClass: "text-center",

                },
                {
                    "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "HCPCSCodes", "title": "Procedure Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "RevenueCode", "title": "Product Revenue Center Code", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },

                { "data": "CostWithDollar", "title": "Total Cost", sClass: "text-center" },
            ],

            buttons: [
                {
                    extend: 'excel',
                    filename: 'Data export-Top Expenditure Details',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {

                        ExportToExcel('TopExpenditureDetails', 'tblTopExpenditureDetails', claimsPhysician, titleData, currentYear1);
                    }
                },
                {
                    extend: 'colvis',
                    "columns": '4, 6, 7, 8, 9, 10, 11,12,14',
                    //autoClose: true,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },
            ],
            columnDefs: [{
                targets: [5, 11, 12, 13],
                visible: false
            }
            ],

        });
        oTable = table.fnSettings();
    }
});
var GlobalTitleData;
$("#myModal").on('show.bs.modal', function (event) {

    var currentYear = 1;

    $('#FARyear_on_year').prop('checked', true);
    $('#SM_ByMonth').prop('checked', true);
    $('#Sf_netwoklevel').prop('checked', true);

    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
        $('#FARlast_year').prop('checked', true);
    }


    var button = $(event.relatedTarget);  // Button that triggered the modal
    var titleData = button.data('title'); // Extract value from data-* attributes
    GlobalTitleData = titleData;
    $(this).find('.modal-title').text("Frequently Accessed Reports");
    $('#UtilizationAdvanceSummaryFilters').css('display', 'none');
    $('#servicefundFilters').css('display', 'none');
    $('#settledMonthFilters').css('display', 'none');

    switch (titleData) {

        case 'eor':

            detailtitle = "Frequent Outpatient Visit - Details";
            $(this).find('.modal-title').text("Frequent Outpaatient Visit");
            FrequentlyAccessedReport("eor", currentYear);
            $("#frequently_accessed_report1").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report1").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report1").find('.chart-report-lg-width').attr('id');
            break;
        case 'er':

            detailtitle = "ER Visit - Details";
            $(this).find('.modal-title').text("ER Visits");
            //FrequentlyAccessedReport("er", currentYear);
            ServerProcessing_FARs("ER", currentYear);
            $("#frequently_accessed_report2").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report2").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report2").find('.chart-report-lg-width').attr('id');
            break;
        case 'admission':

            $(this).find('.modal-title').text("Admissions");
            detailtitle = "Admission Report - Details";
            ServerProcessing_FARs("ADMISSION", currentYear);
            $("#frequently_accessed_report3").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report3").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report3").find('.chart-report-lg-width').attr('id');
            break;
        case 'readmission':

            $(this).find('.modal-title').text("Readmissions");
            detailtitle = "Readmissions Report - Details";
            //FrequentlyAccessedReport("readmission", currentYear);
            ServerProcessing_FARs("readmission", currentYear);
            $("#frequently_accessed_report4").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report4").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report4").find('.chart-report-lg-width').attr('id');
            break;
        case 'top100exppatient':

            $(this).find('.modal-title').text("Top 100 Expenditure Patients");
            detailtitle = "Top 100 Expenditure Patients - Details";

            ServerProcessing_FARs("top100exppatient", currentYear);
            $("#frequently_accessed_report5").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report5").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report5").find('.chart-report-lg-width').attr('id');
            break;
        case 'snf':

            $(this).find('.modal-title').text("SNF");
            detailtitle = "SNF Report - Details";
            FrequentlyAccessedReport("snf", currentYear);
            $("#frequently_accessed_report6").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report6").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report6").find('.chart-report-lg-width').attr('id');
            break;
        case 'snfranking':

            $(this).find('.modal-title').text("SNF");
            detailtitle = "SNF Report - Details";

            ServerProcessing_FARs("SNFRANKING", currentYear);
            $("#frequently_accessed_report7").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report7").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report7").find('.chart-report-lg-width').attr('id');
            break;
        case 'hharanking':

            $(this).find('.modal-title').text("HHA");
            detailtitle = "HHA Report - Details";

            ServerProcessing_FARs("HHARANKING", currentYear);
            $("#frequently_accessed_report8").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report8").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report8").find('.chart-report-lg-width').attr('id');
            break;
        case 'scr':

            $(this).find('.modal-title').text("Specialist Comparison");
            detailtitle = "Specialist Comparison Report - Details";

            ServerProcessing_FARs("SCR", currentYear);
            $("#frequently_accessed_report9").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report9").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report9").find('.chart-report-lg-width').attr('id');
            break;
        case 'pmpm':

            $(this).find('.modal-title').text("PMPM By Practice");
            detailtitle = "PMPM by Practice - Details";
            ServerProcessing_FARs("PMPM", currentYear);
            $("#frequently_accessed_report10").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report10").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report10").find('.chart-report-lg-width').attr('id');
            break;
        case 'bwc':

            $(this).find('.modal-title').text("Beneficiaries Without Claims");
            detailtitle = "Beneficiaries Without Claims - Details";
            ServerProcessing_FARs("BWC", currentYear);
            $("#frequently_accessed_report11").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report11").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report11").find('.chart-report-lg-width').attr('id');
            break;

        case 'utilizationSummary':

            $(this).find('.modal-title').text("Utilization Summary");
            detailtitle = "Utilization Summary Report - Details";
            ServerProcessing_FARs("UTILIZATIONSUMMARY", currentYear);
            $("#frequently_accessed_report22").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report22").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report22").find('.chart-report-lg-width').attr('id');
            break;

        case 'ccm':

            $(this).find('.modal-title').text("CCM");
            detailtitle = "CCM Report - Details";
            ServerProcessing_FARs("CCM", currentYear);
            $("#frequently_accessed_report12").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report12").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report12").find('.chart-report-lg-width').attr('id');
            break;
        case 'qualityriskscore':

            $(this).find('.modal-title').text("My Patient");
            detailtitle = "My Patient Report - Details";

            ServerProcessing_FARs("qualityriskscore", currentYear);
            $("#frequently_accessed_report13").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report13").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report13").find('.chart-report-lg-width').attr('id');
            break;

        case 'pharmacy':

            $(this).find('.modal-title').text("Pharmacy");
            detailtitle = "Pharmacy Report - Details";
            ServerProcessing_FARs("PHARMACY", currentYear);
            $("#frequently_accessed_report14").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report14").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report14").find('.chart-report-lg-width').attr('id');
            break;

        case 'kpi':

            $(this).find('.modal-title').text("KPI");
            detailtitle = "KPI Report - Details";
            ServerProcessing_FARs("KPI", currentYear);
            $("#frequently_accessed_report15").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report15").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report15").find('.chart-report-lg-width').attr('id');
            break;

        case 'awv':

            $(this).find('.modal-title').text("Annual Well Visit Report");
            detailtitle = "Annual Well Visit Report - Details";
            ServerProcessing_FARs("AWV", currentYear);
            $("#frequently_accessed_report16").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report16").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report16").find('.chart-report-lg-width').attr('id');
            break;

        case 'erv':

            $(this).find('.modal-title').text("ER Patient Visit");
            detailtitle = "ER Patient Visit Report - Details";
            ServerProcessing_FARs("ERV", currentYear);
            $("#frequently_accessed_report17").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report17").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report17").find('.chart-report-lg-width').attr('id');
            break;

        case 'hospital':

            $(this).find('.modal-title').text("Hospital");
            detailtitle = "Hospital Report - Details";
            ServerProcessing_FARs("HOSPITAL", currentYear);
            $("#frequently_accessed_report18").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report18").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report18").find('.chart-report-lg-width').attr('id');
            break;

        case 'lr':
            $(this).find('.modal-title').text("LAB");
            detailtitle = "LAB Report - Details";
            ServerProcessing_FARs("LR", 1);
            $("#frequently_accessed_report19").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report19").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report19").find('.chart-report-lg-width').attr('id');
            break;
        case 'utilization':
            $(this).find('.modal-title').text("Utilization");
            detailtitle = "Utilization Report - Details";
            ServerProcessing_FARs("UTILIZATION", currentYear);
            $("#frequently_accessed_report20").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report20").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report20").find('.chart-report-lg-width').attr('id');
            break;
        case 'highcostpatient':
            $(this).find('.modal-title').text("High Cost Patient");
            detailtitle = "HighCostPatient Report - Details";
            ServerProcessing_FARs("HIGHCOSTPATIENT", 1);
            $("#frequently_accessed_report21").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report21").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report21").find('.chart-report-lg-width').attr('id');
            break;
        case 'summaryreport':
            $(this).find('.modal-title').text("Summary Report");
            var selectedDataFilter = $("input[name='SettleMonth']:checked").val();
            detailtitle = "Summary Report - Details";
            ServerProcessing_FARs("SUMMARYREPORT", currentYear, "", "", selectedDataFilter);
            $("#frequently_accessed_report23").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report23").find(".table-striped").attr("id");
            datatable_graph = $("#frequently_accessed_report23").find(".chart-report-lg-width").attr("id");
            $("#settledMonthFilters").css("display", "flex");
            break;
        case 'mlr':
            $(this).find(".modal-title").text("MLR Report");
            detailtitle = "MLR Report - Details";
            ServerProcessing_FARs("MLR", currentYear);
            $("#frequently_accessed_report24").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report24").find(".table-striped").attr("id");
            break;
        case 'ServiceFund':
            $(this).find(".modal-title").text("Service Fund Report");
            detailtitle = "Service Fund Report - Details";
            ServerProcessing_FARs("ServiceFund", currentYear, "", NetworkORPracticeFilter);
            $("#frequently_accessed_report25").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report25").find(".table-striped").attr("id");
            datatable_graph = $("#frequently_accessed_report25").find(".chart-report-lg-width").attr("id");
            $("#servicefundFilters").css("display", "flex");
            break;
        case 'utilizationAdvanceSummary':
            $(this).find('.modal-title').text("Utilization Summary Report");
            var selectedDataFilter = $("input[name='UtilizationAdvanceSummaryReport']:checked").val();
            detailtitle = "Utilization Summary Report - Details";
            ServerProcessing_FARs("UTILIZATIONADVANCESUMMARY", currentYear, selectedDataFilter);
            $("#frequently_accessed_report26").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report26").find('.table-striped').attr('id');
            datatable_graph = $("#frequently_accessed_report26").find('.chart-report-lg-width').attr('id');
            $('#UtilizationAdvanceSummaryFilters').css('display', 'flex');
            break;
        case 'first90daysspend':
            $(this).find(".modal-title").text("First 90 Days Report");
            detailtitle = "First 90 Days Report - Details";
            ServerProcessing_FARs("first90daysspend", currentYear);
            $("#frequently_accessed_report27").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report27").find(".table-striped").attr("id");
            datatable_graph = $("#frequently_accessed_report27").find(".chart-report-lg-width").attr("id");
            break;
        case 'awvl':
            $(this).find(".modal-title").text("AWV All Lives");
            detailtitle = "AWV All Lives - Details";
            ServerProcessing_FARs("awvl", currentYear);
            $("#frequently_accessed_report29").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report29").find(".table-striped").attr("id");
            datatable_graph = $("#frequently_accessed_report29").find(".chart-report-lg-width").attr("id");
            break;
       case 'pvbr':
            $(this).find(".modal-title").text("Provider Value Based Report");
            detailtitle = "Provider Value Based Report - Details";
            ServerProcessing_FARs("pvbr", currentYear);
            $("#frequently_accessed_report30").show().siblings("div").hide();
            datatable_id = $("#frequently_accessed_report30").find(".table-striped").attr("id");
            datatable_graph = $("#frequently_accessed_report30").find(".chart-report-lg-width").attr("id");
            break;


    }
    resizereportchart();
   //modalheight();
});


function ShowReport(Type) {

    var url = serverRoot + "/Insights/Insights/PartialReport";

    $("#InfoDialog").load(url, function () {
        $(".modal .modal-title").html("Report");

        $(".modal .modal-body").css({ "color": "red" });

        $("#bootstrapmodalInfo111").modal({
            show: true,
            backdrop: 'static',
            keyboard: false
        });
        return false;
    })

}



$("#ModalTopExpenditureDetails").on('shown.bs.modal', function (event) {
    //modalheight();
});


$("#exportexcel").click(function () {
    var reportType = $("#hdnReportType").val();
    var redirect = serverRoot + "/Insights/Insights/FrequentlyAccessedReportExcel?ReportType=" + reportType + "";
    window.location = redirect;
    return false;
})

$("#topExp").click(function () {

    var phyId = practiceId;
    var praId = physicianId;
    $(".loader").show();
    $("#ModalTopExpenditure").modal({
        show: true,
        backdrop: 'static',
        keyboard: false

    });
    var currentYear = 1;
    var currentYear1 = currentYear;
    var Frommonth = -1;
    var Toomonth = -1;
    if ($("#last_year").is(':checked')) {
        currentYear1 = currentYear;
        currentYear = currentYear - 1;

    }
    else if ($("#life_to_date").is(':checked')) {
        currentYear = 1800;
    }
    else if ($("#custom_date").is(':checked')) {
        var fDate = $("#FromDate").datepicker('getDate');
        var tDate = $("#ToDate").datepicker('getDate');
        if ((fDate != null) && (tDate != null)) {
            currentYear = 1;
            currentYear1 = 1;
        }
    }

    if (isAssignable) {
        practiceId = null;
    }
    detailtitle = "Top 10% Beneficiary Details";
    $(".modal .modal-title").css("color", "white");
    $(".modal .modal-title").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Top Expenditures </a>"
        + " - <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle + "</a>"
    );

    table = $('#tblTopExpenditure').dataTable({
        "dom": 'Bfrltip',
        destroy: true,
        cache: false,
        processing: true,
        serverSide: true,
        pagingType: "simple",
        fixedHeader: true,
        //scrollY: "350px",
        scrollY: false,
        scrollX: true,
        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            }
        },
        "ajax": {
            url: serverRoot + '/Insights/Insights/GetTopExpenditureDetails',
            type: "POST",
            "data": {
                Fromyear: currentYear,
                Toyear: currentYear1,
                Frommonth: Frommonth,
                Tomonth: Toomonth,
                PracticeId: practiceId,
                PhysicianId: physicianId,
                regionId: RegionId,
                IsAssignable: isAssignable
            },
            complete: function () {
                $(".loader").fadeOut("slow");
            },
            error: function (xhr) {
                //Show the mmodal popup.
                $(".loader").fadeOut("slow");
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        initComplete: function () {
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');
            $('.column-btn').click(function () {
                colvis_scroll();
            });
        },
        order: [[14, "desc"]],
        aoColumns: [
            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
            { "data": "Id", "title": "Id", sClass: "hidden" },
            { "data": "HICN", "title": "HICN", sClass: "text-center" },
            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
            {
                "data": "LastName", "title": "Beneficiary Name", sClass: "text-center",
                "render": function (data, type, full, meta) {
                    return "<a href='javascript:void(0);' onclick='showPatientDetails(\"" + full['ClaimsPhysicianId'] + "\",\"" + full['PatientId'] + "\" , null,null,\"" + physicianId + "\",\"" + currentYear + "\",\"" + full['LastName'] + "\",\"" + full['CostString'] + "\",\"" + full['MBI'] + "\");return false'>" + data + "</a>";
                }
            },
            { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center", sType: "date" },
            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
            {
                "data": "PhysicianLastName", "title": "Assigned Physician", sClass: "text-center",
                "render": function (data, type, full, meta) {
                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                }
                //"render": function (data, type, full, meta) {
                //    return data + ', ' + full['PhysicianFirstName'];
                //}
            },
            {
                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center text-wrap",
                "render": function (data, type, full, meta) {
                    return "<span name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</span>";
                }
            },
            {
                "data": "HCPCSCodes", "title": "Procedure Codes", sClass: "text-center text-wrap",
                "render": function (data, type, full, meta) {
                    return "<span name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</span>";
                }
            },
            {
                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center text-wrap",
                "render": function (data, type, full, meta) {
                    return "<span name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</span>";
                }
            },
            //{
            //    "data": "RevenueCode", "title": "Product Revenue Center Code", "width": "30%", sClass: "text-center",
            //    render: function (data, type, full, meta) {
            //        return "<div class='text-wrap width-200px'>" + data + "</div>";
            //    },

            //},
            {
                "data": "PlaceOfServiceCode", "title": "Place of Service Code", "width": "30%", sClass: "text-center",
                render: function (data, type, full, meta) {
                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                },

            },
            { "data": "Cost", "title": "Total Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
        ],

        buttons: [
            {
                extend: 'excel',
                filename: 'Data export-TopExpenditure',
                title: 'TopExpenditure',
                pageSize: 'LEGAL',
                orientation: 'landscape',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'excel-btn',
                action: function (e, dt, node, config) {

                    ExportToExcel('topExp', 'tblTopExpenditure', '', '', currentYear, currentYear1, '', '', physicianId, practiceId);
                }
            },
            {
                extend: 'colvis',
                "columns": ' 4, 5, 6, 7, 8, 9, 10, 11,12,14',
                //autoClose: true,
                //postfixButtons: ['colvisRestore'],
                exportOptions: {
                    columns: ':visible'
                },
                className: 'column-btn',
                titleAttr: 'More'
            },
        ],
        columnDefs: [{
            type: 'currency',
            targets: [4, 11, 12, 13],
            visible: false
        }
        ]
    });
    oTable = table.fnSettings();
});
//Reports 
var practiceId;
var physicianId;
var table;
var oTable;
var oSettings;
var export_datayear;

//HCC,ICD & HCPCS tooltip
$(function () {

    serverRoot = $('#hdnServerRootURL').val();
    if (window.location.hostname == 'localhost')
        serverRoot = '';

    var dataTables = new Array("tblER", "tblERDetails", "tblerv", "tblEOR", "tblAdmission", "tblReAdmission", "tblTop100Exp", "tblCCM", "tblQuarterlyRiskReport",
        "tblawv", "tblAdmissionDetails", "tblReAdmissionDetails", "tblTop100ExpDetails", "tblQuarterlyRiskReportDetails", "tblHHADetailsThird", "tblSNFDetailsThird",
        "tblHospitalDetailsThird", "tblReportsClaimsDetails", "tblTopExpenditure", "tblPatientDetails", "tblClinicalDistribution", "tblHCHNPatients", "tblTopExpenditureDetails",
        "tblLABDetails", "tblPharmacyDetails", "tblSCRDetailsThird", "tblFirst90DaysSpendDetails", "tblMLRDetails","tblawvLife","tblawvLifeDetails","tblpvbr","tblpvbrDetails");

    $.each(dataTables, function (i, val) {

        $("#" + val).on('mouseover', 'tbody td', function (e) {
            var td = $(this).find('.ertooltip');
            if (td.length > 0) {
                //Hidden columns position 
                //HCPCS - 0
                //ICD - 1
                //HCC - 2
                var title = td.attr('name').toLowerCase();
                var index = 0;
                switch (title) {
                    case 'hcpcs':
                        index = 0;
                        break;
                    case 'icd':
                        index = 1;
                        break;
                    case 'hcc':
                        index = 2;
                        break;
                    default:

                }
                var rowData = $(this).closest('tr');
                var description = rowData.find('td').eq(index).text();
                var $descToolTip = $("#customtooltip");
                if (description != '') {
                    $descToolTip.text(description);
                    if (!$descToolTip.is(':visible')) {
                        $descToolTip.show();
                        $descToolTip.css('left', parseInt(e.clientX) + 10 + 'px');
                        $descToolTip.css('top', parseInt(e.clientY) - 20 + 'px');
                    }
                }
            }

        });

        $("#" + val).on('mouseout', 'tbody td', function () {
            if ($(this).find('.ertooltip').length > 0) {
                $("#customtooltip").hide();
            }

        });

    });

});

function ServerProcessing_FARs(Type, Year, ByMonthORPraOrPhyDataFilter, NetworkORPracticeFilter, ByMonthORLocationDataFilter, servicefundPMPMBool) {

    if (Type == 'sf') {
        Type = 'SERVICEFUND'
    }
if (Type == 'AWVRedirect') {
        Type = 'AWVL'
        $("#myModal").find('.modal-title').text("Annual Wellness Visit All Lives Report");
        detailtitle = "Annual Wellness Visit All Lives Report - Details";
        $("#frequently_accessed_report29").show().siblings("div").hide();
        datatable_id = $("#frequently_accessed_report29").find('.table-striped').attr('id');
        datatable_graph = $("#frequently_accessed_report29").find('.chart-report-lg-width').attr('id');
       
    }
    if (parentselection == "true") {
        var phyId = practiceId;
        var praId = physicianId;
        physicianId = null;
        var getptid = parentpractid.split("n");

    }
    else {
        childselection = "false";
    }

    $("#tblReportsClaimsDetails_wrapper").hide();
    if (childselection == "true") {
        var res = child_id.split("d");
        var getid = $("#hidden_practiceq" + res[1]).val();
        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = pp[1];
    }
    if (isAssignable) {
        practiceId = null;
        RegionId = null;
    }
    // $(".loader").show();
    $("#hdnReportType").val(Type);
    if ((Type.toUpperCase()) == "PVBR" || (Type.toUpperCase()) == "AWV" || (Type.toUpperCase()) == "AWVL") {
        $("#lastyear").hide();
        $("#currentyear").hide();
    }
    else {
        $("#lastyear").show();
        $("#currentyear").show();
    }
    var reportParams = {
        ReportName: Type,
        PracticeId: practiceId,
        PhysicianId: physicianId,
        Year: Year,
        regionId: RegionId,
        IsAssignable: isAssignable,
        UASFilter: ByMonthORPraOrPhyDataFilter,
        servicefundFilters: NetworkORPracticeFilter,
        SettleMonthFilter: ByMonthORLocationDataFilter,
        servicefundPMPM: servicefundPMPMBool
    };
    export_datayear = Year;

    switch (Type.toUpperCase()) {
        case "ER":
            if ($.fn.DataTable.isDataTable('#tblER')) {
                $('#tblER').DataTable().destroy();
            }
            table = $('#tblER').dataTable({

                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },

                },
                "scrollX": true,

                //scrollY: "auto",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblERTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblERTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblERTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblERTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblERTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblERTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblERActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblERActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblERBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblERBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           

                        }
                        else {
                            $("#lblERTotalClaims").html("N/A");
                            $("#lblERTotalPatients").html("N/A");
                            $("#lblERTotalCost").html("N/A");
                            $("#lblERBenchmarkPMPY").html("N/A");
                            $("#lblERActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportERGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Facility Name/NPI/TIN',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    //$('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblER").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblER").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                order: [[11, "desc"]],
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    // { "data": "PatientId", "title": "PatientId", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"er\",\"" + full['PatientName'] + "\",null,null,null, \"" + full['PatientId'] + "\",null,null,null,null,null,null,null,\"" + full['MBI'] + "\",\"" + full['CostString'] + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "PCPName", "title": "Assigned Physician", sClass: "text-center" },
                    { "data": "CostString", "title": "Total cost for ER Visits", sClass: "text-center", sType: "currency" },
                    { "data": "TotalERVisits", "title": "Number of ER visits", sClass: "text-center" },
                    {
                        "data": "AvoidableRate", "title": "Avoidable Rate", sClass: "text-center",
                        render: function (data, type, full, meta) { return data + "%"; }
                    },
                    { "data": "MostRecentVisitDate", "title": "Last ED/Admit Visit Date", sClass: "text-center" },
                    {
                        "data": "ICDCodes", "title": "Primary Diagnosis", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                        },

                    },
                    { "data": "DeceasedDateString", "title": "Deceased Date", sClass: "text-center" },
                    {
                        "data": "EnrollmentType", "title": "EnrollmentType", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            if (data == " ")
                                return 'N/A';
                            else
                                return data;
                        }
                    },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblER', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '4, 5, 6, 7, 8, 9, 10, 11,12,13,14,15,16',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [8, 15, 16],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "READMISSION":
            if ($.fn.DataTable.isDataTable('#tblReAdmission')) {
                $('#tblReAdmission').DataTable().destroy();
            }
            table = $('#tblReAdmission').dataTable({
                "dom": 'Bfrltip',
                destroy: true,
                cache: false,
                pagingType: "simple",
                "processing": true,
                "serverSide": true,
                fixedHeader: true,
                scrollY: false,
                scrollX: true,
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    }
                },
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblReAdmissionTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblReAdmissionTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblReAdmissionTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblReAdmissionTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblReAdmissionTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblReAdmissionTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblReAdmissionActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblReAdmissionActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblReAdmissionBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblReAdmissionBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            
                        }
                        else {
                            $("#lblReAdmissionTotalClaims").html("N/A");
                            $("#lblReAdmissionTotalPatients").html("N/A");
                            $("#lblReAdmissionTotalCost").html("N/A");
                            $("#lblReAdmissionBenchmarkPMPY").html("N/A");
                            $("#lblReAdmissionActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportReAdmissionGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    //$('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                },
                //searching: true,
                order: [[6, "desc"]],
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "PatientId", "title": "Id", sClass: "hidden" },
                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    {
                        "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['PatientId'] + "\" , \"readmission\",\"" + full['PatientLastName'] + ", " + full['PatientFirstName'] + "\",null,null,null,null,null,null,null,null,null,null,null,\"" + full['MBI'] + "\" ,\"" + full['CostString'] + "\");return false'>" + data + ', ' + full["PatientFirstName"] + "</a>";
                        }
                    },
                    {
                        "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center", sType: "date", bSortable: "true",
                    },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "NumberOfReAdmissions", "title": "Number of Readmissions", sClass: "text-center" },
                    {
                        "data": "ICDCodes", "title": "Most Recent Admitting Diagnosis Code (ICD Code)", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                        },
                    },
                    { "data": "NoOfEncounters", "title": "Number Of Encounters", sClass: "Hidden" },
                    //{ "data": "CostString", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Admissions Cost", sClass: "text-center", sType: "my-currency" },
                    { "data": "CostString", "title": "Total Admissions Cost", sClass: "text-center", sType: "currency" },

                    {
                        "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        },
                    },
                    //{
                    //    "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                    //    render: function (data, type, full, meta) {
                    //        return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                    //    },
                    //},
                    //{
                    //    "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                    //    render: function (data, type, full, meta) {
                    //        return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                    //    },
                    //},
                    { "data": "AdmitDate", "title": "Admit Date(Most Recent Admission)", sClass: "text-center" },
                    { "data": "DisDate", "title": "Discharge Date(Most Recent Admission)", sClass: "text-center" },

                ],
                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblReAdmission', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '4, 5, 6, 7, 8, 9, 10, 11,13,14,15',
                        // autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [3, 4, 12],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "UTILIZATIONSUMMARY":
            if ($.fn.DataTable.isDataTable('#tblutilizationSummary')) {
                $('#tblutilizationSummary').DataTable().destroy();
            }
            table = $('#tblutilizationSummary').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "ZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblutilizationSummary").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblutilizationSummary").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                order: [[0, "asc"]],
                aoColumns: [
                    // { "data": "day", "title": "Days In Period", sClass: "text-center" },
                    { "data": "Period", "title": "Period", sClass: "text-center" },

                    {
                        "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return data;
                        },
                    },
                    { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                    // { "data": "TotalCost1", "title": "Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                    { "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center" },

                    {
                        "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "AdmitCount", "title": "Admit Count", sClass: "text-center" },
                    { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center" },
                    { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    // { "data": "TotalAdmitLOS", "title": "Total Admit LOS", sClass: "text-center" },
                    { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                    {
                        "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },

                    { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                    { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center" },
                    { "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center" },
                    { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center" },
                    { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "ERCount", "title": "ER Count", sClass: "text-center" },
                    { "data": "ER1000", "title": "ER/1000", sClass: "text-center" },



                    { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "SNFCount", "title": "SNF Count", sClass: "text-center" },
                    { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center" },
                    { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                    {
                        "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                    { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center" },
                    { "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center" },

                    { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center" },



                    { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center" },
                    { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center" },
                    { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "OUTCOUNT", "title": "OUT COUNT", sClass: "text-center" },
                    { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center" },
                    { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },

                    { "data": "OBSCount", "title": "OBS Count", sClass: "text-center" },
                    { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center" },
                    { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblutilizationSummary', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "QUALITYRISKSCORE":
            if ($.fn.DataTable.isDataTable('#tblQuarterlyRiskReport')) {
                $('#tblQuarterlyRiskReport').DataTable().destroy();
            }
            table = $('#tblQuarterlyRiskReport').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblQuarterlyRiskTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblQuarterlyRiskTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblQuarterlyRiskTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblQuarterlyRiskTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblQuarterlyRiskActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblQuarterlyRiskActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblQuarterlyRiskBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblQuarterlyRiskBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                        }
                        else {
                            //$("#lblBWCTotalClaims").html("0");
                            $("#lblQuarterlyRiskTotalPatients").html("N/A");
                            $("#lblQuarterlyRiskTotalCost").html("N/A");
                            $("#lblQuarterlyRiskBenchmarkPMPY").html("N/A");
                            $("#lblQuarterlyRiskActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportQuarterlyRiskGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Practice Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Total unique cost',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },

                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    //$('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblQuarterlyRiskReport").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblQuarterlyRiskReport").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    //{ "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center" },
                    { "data": "DateOfBirth", "title": "Beneficiary DOB", sClass: "text-center" },
                    { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "DeceasedStr", "title": "Deceased", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    {
                        "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "ESRD", "title": "ESRD", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            if (data != null && data > 0)
                                return data;

                            else
                                return 'N/A';
                        }
                    },
                    {
                        "data": "AgedDual", "title": "AgedDual ", sClass: "text-center",

                        render: function (data, type, full, meta) {
                            if (data != null && data > 0)
                                return data;

                            else
                                return 'N/A';
                        }
                    },
                    {
                        "data": "AgedNonDual", "title": "AgedNonDual ", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            if (data != null && data > 0)
                                return data;

                            else
                                return 'N/A';
                        }
                    },
                    {
                        "data": "Disabled", "title": "Disabled", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            if (data != null && data > 0)
                                return data;

                            else
                                return 'N/A';
                        }
                    },
                    { "data": "CostString", "title": "YTD Total Cost", sClass: "text-center", sType: "currency" },
                    //{
                    //    "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                    //    render: function (data, type, full, meta) {
                    //        return "<div class='text-wrap width-200'>" + data + "</div>";
                    //    },
                    //},
                    {
                        "data": "HCPCSCodes", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },
                    },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        //filename: 'Data export-' + Type,
                        filename: 'Data export-' + "My Patient Report",
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblQuarterlyRiskReport', '');
                        }
                    },
                    {
                        extend: 'colvis',

                        "columns": '4,5,6, 7, 8, 9, 10, 11,12,13,14,15,16,17',


                        // autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
                ,
                columnDefs: [{
                    targets: [3, 4, 17],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "SCR":
            if ($.fn.DataTable.isDataTable('#tblSCR')) {
                $('#tblSCR').DataTable().destroy();
            }
            table = $('#tblSCR').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                          
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblSCRTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblSCRTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblSCRTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblSCRTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblSCRActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblSCRActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblSCRBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblSCRBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                        }
                        else {
                            $("#lblSCRTotalPatients").html("N/A");
                            $("#lblSCRTotalCost").html("N/A");
                            $("#lblSCRBenchmarkPMPY").html("N/A");
                            $("#lblSCRActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportSCRGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });


                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },

                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblSCR").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblSCR").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    {
                        "data": "SpecialityType", "title": "Speciality Type", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"scr\",\"" + "\" ,\"" + data + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,null,\"" + "\" ,\"" + "\" ,null,null,null,null,null,null,\"" + full['CostString'] + "\");return false'>" + data + "</a>";
                        }
                    },
                    { "data": "NumberOfClaims", "title": "Number Of Claims", sClass: "text-center" },
                    { "data": "TotalUniquePatients", "title": "Number Of Beneficiaries", sClass: "text-center" },
                    { "data": "AverageCostPerClaimString", "title": "Average cost per Episode", sClass: "text-center" },
                    { "data": "AverageCostPerPatientString", "title": "Average Cost Per Beneficiary", sClass: "text-center" },
                    { "data": "Cost", "title": " Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ],
                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblSCR', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '1,2,3,4, 5, 6',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "HOSPITAL":
            if ($.fn.DataTable.isDataTable('#tblHospital')) {
                $('#tblHospital').DataTable().destroy();
            }
            table = $('#tblHospital').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblHospitalTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblHospitalTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblHospitalTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblHospitalTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblHospitalTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblHospitalTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblHospitalActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblHospitalActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblHospitalBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblHospitalBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                        }
                        else {
                            $("#lblHospitalTotalClaims").html("N/A");
                            $("#lblHospitalTotalPatients").html("N/A");
                            $("#lblHospitalTotalCost").html("N/A");
                            $("#lblHospitalBenchmarkPMPY").html("N/A");
                            $("#lblHospitalActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportHospitalGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries')
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblHospital").dataTable().api();
                            dtable.search(this.value).draw();
                        }


                        if (this.value.length == 0) {
                            var dtable = $("#tblHospital").dataTable().api();
                            dtable.search("").draw();
                        }
                    });
                },
                aoColumns: [
                    { "data": "FacilityId", "title": "Facility NPI", sClass: "text-center" },
                    {
                        "data": "FacilityName", "title": "Facility Name", sClass: "text-center", "width": "20%",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"hospital\",\"" + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\",null,null,null,null,null,null,\"" + full['Cost'] + "\"  );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "TotalUniquePatients", "title": "Unique IP Encounters", sClass: "text-center" },
                    { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                    { "data": "Cost", "title": "Total Cost by Facility", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblHospital', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "CCM":
            console.log("CCM : CCM");
            if ($.fn.DataTable.isDataTable('#tblCCM')) {
                $('#tblCCM').DataTable().destroy();
            }
            table = $('#tblCCM').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                        
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblCCMTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblCCMTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblTotalCCMCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblTotalCCMCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblCCMActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblCCMActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblCCMBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblCCMBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                           
                        }
                        else {
                            $("#lblCCMTotalPatients").html("N/A");
                            $("#lblTotalCCMCost").html("N/A");
                            $("#lblCCMBenchmarkPMPY").html("N/A");
                            $("#lblCCMActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportCCMGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Practice Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'AWVs completed',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + Highcharts.numberFormat(this.y, 2, '.', ',') + '%';
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {

                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblCCM").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblCCM").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },

                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center" },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                    {
                        "data": "ClaimId", "title": "Claims ID", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        }
                    },
                    {
                        "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center max-width-200px text-wrap",
                        "render": function (data) {
                            return formatDate(data);
                        }
                    },
                    {
                        "data": "ClaimFromDateStr", "title": "Claim from date", sClass: "text-center max-width-200px text-wrap",
                        "render": function (data) {
                            return formatDate(data);
                        }
                    },
                    {
                        "data": "ClaimThruDateStr", "title": "Claim Through date", sClass: "text-center max-width-200px text-wrap",
                        "render": function (data) {
                            return formatDate(data);
                        }
                    },
                    {
                        "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "HCPCSCodes", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },


                    {
                        "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },

                    {
                        "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px ertooltip'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "FacilityName", "title": "Facility Name", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "ClaimType", "title": "Claim Type", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "PlaceOfServiceCodes", "title": "Place of Service Code", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        },

                    },
                    {
                        "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200px'>" + data + "</div>";
                        },
                    },
                    { "data": "Cost", "title": "Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblCCM', '', '', export_datayear, export_datayear);
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '4, 5, 6, 7, 8, 9, 10, 11,12,13,14,15,16,17,18,19,20,23',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [3, 4],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "SNFRANKING":
            if ($.fn.DataTable.isDataTable('#tblSNFRanking')) {
                $('#tblSNFRanking').DataTable().destroy();
            }
            table = $('#tblSNFRanking').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        debugger;
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblSNFRankingTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblSNFRankingTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblSNFRankingTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblSNFRankingTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblSNFRankingTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblSNFRankingTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblSNFRankingActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblSNFRankingActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           
                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblSNFRankingBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblSNFRankingBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            //$("#lblSNFRankingBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));

                        }
                        else {
                            $("#lblSNFRankingTotalClaims").html("N/A");
                            $("#lblSNFRankingTotalPatients").html("N/A");
                            $("#lblSNFRankingTotalCost").html("N/A");
                            $("#lblSNFRankingBenchmarkPMPY").html("N/A");
                            $("#lblSNFRankingActualPMPY").html("N/A");
                        }

                        //Graph  
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportSNFRankingGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblSNFRanking").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblSNFRanking").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    //{ "data": "FacilityId", "title": "FacilityId", sClass: "text-center" },
                    {
                        "data": "FacilityName", "title": "Facility Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"snfranking\",\"" + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\",null,null,null,null,null,null,\"" + full['CostWithDollar'] + "\"  );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "TotalNumberOfUniqueEncounters", "title": "Total Number of Unique Encounters", sClass: "text-center" },
                    { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                    {
                        "data": "ERSendoutRate30Day", "title": "30 Day ER Send Out Rate", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }


                    },
                    {
                        "data": "CostWithDollar", "title": "Total Cost by Facility", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }

                    },

                    {
                        "data": "DischargeHome", "title": "Discharges to Home", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }

                    },
                    {
                        "data": "DischargeHHA", "title": "Discharges to HHA", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }
                    },
                    {
                        "data": "DischargeHospital", "title": "Discharges to Hospital", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }
                    },
                    {
                        "data": "DischargeSNF", "title": "Discharges to SNF", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }
                    }
                ],
                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblSNFRanking', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        // autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "HHARANKING":
            if ($.fn.DataTable.isDataTable('#tblHHARanking')) {
                $('#tblHHARanking').DataTable().destroy();
            }
            table = $('#tblHHARanking').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblHHARankingTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblHHARankingTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblHHARankingTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblHHARankingTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblHHARankingTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblHHARankingTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblHHARankingActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblHHARankingActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblHHARankingBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblHHARankingBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }                         
                        }
                        else {
                            $("#lblHHARankingTotalClaims").html("N/A");
                            $("#lblHHARankingTotalPatients").html("N/A");
                            $("#lblHHARankingTotalCost").html("N/A");
                            $("#lblHHARankingBenchmarkPMPY").html("N/A");
                            $("#lblHHARankingActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportHHARankingGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblHHARanking").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblHHARanking").dataTable().api();
                            dtable.search("").draw();
                        }
                    });
                },
                aoColumns: [
                    { "data": "FacilityId", "title": "Facility NPI", sClass: "text-center", "width": "20%" },
                    {
                        "data": "FacilityName", "title": "Facility Name", sClass: "text-center", "width": "20%",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"hharanking\",\"" + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\" ,null,null,null,null,null,null,\"" + full['CostWithDollar'] + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "TotalNumberOfUniqueEncounters", "title": "Total Number of Unique Episodes", sClass: "text-center" },
                    { "data": "AverageLengthOfStay", "title": "Average Length Of Stay (LOS)", sClass: "text-center" },
                    { "data": "Cost", "title": "Total Cost by Facility", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ],
                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblHHARanking', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "TOP100EXPPATIENT":
            if ($.fn.DataTable.isDataTable('#tblTop100Exp')) {
                $('#tblTop100Exp').DataTable().destroy();
            }
            table = $('#tblTop100Exp').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                // scrollY: "170px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblTop100ExpTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblTop100ExpTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblTop100ExpTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblTop100ExpTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblTop100ExpTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblTop100ExpTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblTop100ExpTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblTop100ExpActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblTop100ExpBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblTop100ExpBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           
                        }
                        else {
                            $("#lblTop100ExpTotalClaims").html("N/A");
                            $("#lblTop100ExpTotalPatients").html("N/A");
                            $("#lblTop100ExpTotalCost").html("N/A");
                            $("#lblTop100ExpBenchmarkPMPY").html("N/A");
                            $("#lblTop100ExpActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });

                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportTop100ExpGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblTop100Exp").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblTop100Exp").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    {
                        "data": "MBI", "title": "Patient Id", sClass: "text-center", //"orderable": false,

                    },
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"top100exppatient\",\"" + full['PatientName'] + "\",null,null,null, \"" + full['PatientId'] + "\",null,null,null,null,null,null,null,\"" + full['MBI'] + "\" ,\"" + full['CostString'] + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                    {
                        "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center", "width": "20%",
                        render: function (data, type, full, meta) {
                            return "<div name='HCC' class='text-wrap width-200 width-limit ertooltip'>" + data + "</div>";
                        }
                    },
                    { "data": "CostString", "title": "Total Cost", sClass: "text-center", sType: "currency" },
                    {
                        "data": "HCPCSCodes", "title": "Procedure Codes", sClass: "text-center", "width": "20%",
                        render: function (data, type, full, meta) {
                            return "<div name='HCPCS' class='text-wrap width-200 width-limit ertooltip'>" + data + "</div>";
                        }
                    },

                    {
                        "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center", "width": "20%",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200 width-limit ertooltip'>" + data + "</div>";
                        }
                    },
                ],


                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblTop100Exp', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '4,5,6,7,8,9,10,11,12',
                        // autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [11, 12],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "AWV":
            if ($.fn.DataTable.isDataTable('#tblawv')) {
                $('#tblawv').DataTable().destroy();
            }
            $('#currentyear').css("display", "none");
            $('#lastyear').css("display", "none");
            var prevYear;
            var curYear;
            var selectedYear = 1;

            if ($("#FARyear_on_year").is(':checked')) {
                curYear = selectedYear;
                prevYear = (selectedYear - 1);
            }
            if ($("#FARlast_year").is(':checked')) {
                curYear = (selectedYear - 1);
                prevYear = (selectedYear - 2);
            }
            table = $('#tblawv').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 20, 50, 100], [10, 20, 50, 100]],
                ordering: true,
                retrieve: true,
                deferRender: true,
                bAutoWidth: false,
                AutoWidth: true,
                scrollX: true,
                scrollCollapse: true,
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblAWVTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblAWVTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblTotalAWVCompleted").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblTotalAWVCompleted").html(data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblAWVActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblAWVActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblAWVBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblAWVBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                        }
                        else {
                            $("#lblAWVTotalPatients").html("N/A");
                            $("#lblTotalAWVCompleted").html("N/A");
                            $("#lblAWVBenchmarkPMPY").html("N/A");
                            $("#lblAWVActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportAWVGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Practice Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'AWVs completed',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + Highcharts.numberFormat(this.y, 2, '.', ',') + '%';
                                }

                            },
                            plotOptions: {
                                //column: {
                                //		stacking: 'normal',
                                //		shadow:false,
                                //		borderWidth:0,
                                //		minPointLength:100
                                //	}
                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblawv").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblawv").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
                    { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "RiskScore", "title": "Risk Score", sClass: "text-center" },

                    { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                    {
                        "data": "RecentAWVCode", "title": "Most Recent AWV Code", sClass: "text-center",
                        "render": function (data) {
                            if (data != null && data != "")
                                return data;

                            else
                                return 'N/A';
                        }
                    },
                    { "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center" },
                    { "data": "NextAWVDate", "title": "Next AWV Date", sClass: "text-center" },
                    {
                        "data": "PastDueStr", "title": "Days Past Due", sClass: "text-center" },
                    { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                    { "data": "ClaimDateAWV", "title": "Claim Date", sClass: "text-center" },
                    { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                    { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                    { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                    {
                        "data": "HCPCSCodes", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },

                    { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                    { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                    {
                        "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },
                    },
                    {
                        "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },
                    },
                    { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                    { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                    { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblawv', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '3, 4, 5, 6, 7, 8, 10, 11,12,13,14',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [3, 4, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "BWC":
            if ($.fn.DataTable.isDataTable('#tblBWC')) {
                $('#tblBWC').DataTable().destroy();
            }
            table = $('#tblBWC').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 20, 50, 100], [10, 20, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblBWCTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblBWCTotalClaims").html(data.SummaryReport[0].TotalClaims.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblBWCTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblBWCTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblBWCTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblBWCTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblBWCActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblBWCActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblBWCBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblBWCBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           

                        }
                        else {
                            $("#lblBWCTotalClaims").html("N/A");
                            $("#lblBWCTotalPatients").html("N/A");
                            $("#lblBWCTotalCost").html("N/A");
                            $("#lblBWCBenchmarkPMPY").html("N/A");
                            $("#lblBWCActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportBWCGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Practice Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Patients without claims',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblBWC").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblBWC").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center"
                    },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },

                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },

                    { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },

                    { "data": "Status", "title": "Beneficiary Status", sClass: "text-center" },

                    { "data": "HICN", "title": "HICN", sClass: "text-center" }


                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblBWC', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": ' 0,1,2,3,4,5,6',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [3, 6],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "KPI":
            if ($.fn.DataTable.isDataTable('#tblkpi')) {
                $('#tblkpi').DataTable().destroy();
            }
            table = $('#tblkpi').dataTable({

                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },

                },
                "scrollX": true,
                fixedHeader: true,
                //scrollY: "auto",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblKPITotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblKPITotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblKPITotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblKPITotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblKPIActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblKPIActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblKPIBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblKPIBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           

                        }
                        else {
                            $("#lblKPITotalPatients").html("N/A");
                            $("#lblKPITotalCost").html("N/A");
                            $("#lblKPIBenchmarkPMPY").html("N/A");
                            $("#lblKPIActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportKPIGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Practice Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    //$('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblkpi").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblkpi").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    ///{ "data": "Id", "title": "Id", sClass: "hidden" },
                    { "data": "PracticeName", "title": "Practice Name ", sClass: "text-center" },
                    { "data": "NumberOfAssignedBeneficiaries", "title": "Number of Assigned Beneficiaries", sClass: "text-center" },
                    { "data": "PYFWithDollar", "title": "Person Years", sClass: "text-center" },
                    { "data": "PMPMWithDollar", "title": "PMPM", sClass: "text-center" },
                    { "data": "InpatientAdmitsWithDollar", "title": "Inpatient Admits/1000", sClass: "text-center" },
                    { "data": "ERAdmitsWithDollar", "title": "EDV/1000", sClass: "text-center" },
                    { "data": "ERHospitalAdmits", "title": "EDV Hospital Admits/1000", sClass: "text-center" },
                    { "data": "ERVisitsPMPMWithDollar", "title": "EDV PMPM", sClass: "text-center" },
                    { "data": "UnavoidableERVRate", "title": "***Unavoidable ERV Rate", sClass: "text-center" },
                    { "data": "SNFVisitsPMPMWithDollar", "title": "SNF PMPM", sClass: "text-center" },
                    { "data": "HHAVisitsPMPMWithDollar", "title": "HHA PMPM", sClass: "text-center" },
                    { "data": "PartBPMPMWithDollar", "title": "PART B PMPM", sClass: "text-center" },
                    { "data": "TotalCostYear1WithDollar", "title": "Total Cost Previous Year", sClass: "text-center" },
                    { "data": "TotalCostYear2WithDollar", "title": "Total Cost Current Year", sClass: "text-center" },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblkpi', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "ERV":
            if ($.fn.DataTable.isDataTable('#tblerv')) {
                $('#tblerv').DataTable().destroy();
            }
            table = $('#tblerv').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblERVTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblERVTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblERVTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblERVTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblERVTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblERVTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblERVActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblERVActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblERVBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblERVBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            
                        }
                        else {
                            $("#lblERVTotalClaims").html("N/A");
                            $("#lblERVTotalPatients").html("N/A");
                            $("#lblERVTotalCost").html("N/A");
                            $("#lblERVBenchmarkPMPY").html("N/A");
                            $("#lblERVActualPMPY").html("N/A");
                        }
                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportERVGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblerv").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblerv").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "HICN", "title": "HICN", sClass: "hidden" },
                    { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "Age", "title": "Age", sClass: "text-center" },
                    { "data": "AdmissionSource", "title": "AdmissionSource", sClass: "text-center" },
                    { "data": "InpatientFlagStr", "title": "Inpatient Admission", sClass: "text-center" },
                    { "data": "PartAERCostWithDoallar", "title": "Part-A ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "PartBERCostWithDoallar", "title": "Part-B ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "PrimaryDiagnosisForVisit", "title": "Primary Diagnosis For Visit", sClass: "text-center" },
                    { "data": "MostRecentVisitDateStr", "title": "Most Recent Visit Date", sClass: "text-center" },
                    { "data": "CHFStr", "title": "CHF", sClass: "text-center" },
                    { "data": "DMStr", "title": "DM", sClass: "text-center" },
                    { "data": "COPDStr", "title": "COPD", sClass: "text-center" },
                    { "data": "ERLocationsPartA", "title": "Facility Name", sClass: "text-center" },
                    { "data": "DayOfService", "title": "Day Of Service", sClass: "text-center" },
                    { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                    { "data": "ClaimDateStr", "title": "Claim Date", sClass: "text-center" },
                    { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                    { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                    //{ "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                    {
                        "data": "HCPCSCode", "title": "HCPCS Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },
                    { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                    { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                    {
                        "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div  name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },
                    {
                        "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },
                    { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                    { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                    { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" }

                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblerv', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [8, 9, 13, 14, 15, 16, 21, 22, 24, 25, 26, 27, 28, 29, 30],
                    visible: false
                }]

            });
            oTable = table.fnSettings();
            break;
        case "PHARMACY":
            if ($.fn.DataTable.isDataTable('#tblPharmacy')) {
                $('#tblPharmacy').DataTable().destroy();
            }
            table = $('#tblPharmacy').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblPharmacyTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblPharmacyTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblPharmacyTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblPharmacyTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblPharmacyTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblPharmacyTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblPharmacyActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblPharmacyActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblPharmacyBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblPharmacyBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           
                        }
                        else {
                            $("#lblPharmacyTotalClaims").html("N/A");
                            $("#lblPharmacyTotalPatients").html("N/A");
                            $("#lblPharmacyTotalCost").html("N/A");
                            $("#lblPharmacyBenchmarkPMPY").html("N/A");
                            $("#lblPharmacyActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportPharmacyGraph'
                            },
                            title: {
                                text: ''
                            },
                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },
                                categories: Items
                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },
                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblPharmacy").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblPharmacy").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['PatientId'] + "\" , \"pharmacy\",\"" + full['PatientName'] + "\",null,\"" + full['PracticeId'] + "\",null);return false'>" + data + "</a>";
                        }
                    },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "DeceasedStr", "title": "Deceased Status", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "PartDCostStr", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Part D Cost", sClass: "text-center" },
                    { "data": "PartBRxCostStr", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Part B Rx Cost", sClass: "text-center" },

                    { "data": "CostWithDollar", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost", sClass: "text-center" },


                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "DrugName", "title": "Drug Name", sClass: "text-center" }




                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblPharmacy', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '0, 1, 2, 3, 4, 5, 6, 7, 8',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [7],
                    visible: false
                }
                ]

            });
            oTable = table.fnSettings();
            break;
        case "LR":
            if ($.fn.DataTable.isDataTable('#tblLAB')) {
                $('#tblLAB').DataTable().destroy();
            }
            table = $('#tblLAB').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        ////Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblLABTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblLABTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblLABTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblLABTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblLABTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblLABTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblLABActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblLABActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblLABBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblLABBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            
                        }
                        else {
                            $("#lblLABTotalClaims").html("N/A");
                            $("#lblLABTotalPatients").html("N/A");
                            $("#lblLABTotalCost").html("N/A");
                            $("#lblLABBenchmarkPMPY").html("N/A");
                            $("#lblLABActualPMPY").html("N/A");
                        }

                        // Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportLABGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });
                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblLAB").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblLAB").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [

                    {
                        "data": "PracticeName", "title": "Practice Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"lr\",\"" + full['PracticeName'] + "\",\"" + full['LabType'] + "\",\"" + full['PracticeId'] + "\" );return false'>" + full['PracticeName'] + "</a>";
                        }
                    },

                    { "data": "LabType", "title": "Lab Type", sClass: "text-center" },
                    { "data": "NumberOfAssignedBeneficiaries", "title": "Number Of Beneficiaries", sClass: "text-center" },
                    { "data": "CostWithDollar", "title": "TotalCost", sClass: "text-center", sType: "currency" },
                    // { "data": "OrganizationNPIname", "title": "Organization NPI name", sClass: "text-center" }

                ],


                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblLAB', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '0,1,2,3',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });
            oTable = table.fnSettings();
            break;
        case "UTILIZATION":
            if ($.fn.DataTable.isDataTable('#tblUtilization')) {
                $('#tblUtilization').DataTable().destroy();
            }
            table = $('#tblUtilization').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblUtilizationTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblUtilizationTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblUtilizationTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblUtilizationTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblUtilizationActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblUtilizationActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblUtilizationBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblUtilizationBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           
                        }
                        else {
                            $("#lblUtilizationTotalPatients").html("N/A");
                            $("#lblUtilizationTotalCost").html("N/A");
                            $("#lblUtilizationBenchmarkPMPY").html("N/A");
                            $("#lblUtilizationActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportUtilizationGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });
                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblUtilization").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblUtilization").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "DeceasedStatus", "title": "Deceased", sClass: "text-center" },
                    { "data": "PCPName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "TotalERVisits", "title": "Total ER Visits", sClass: "text-center" },
                    { "data": "TotalInPatientVisits", "title": "Total Inpatient Admits", sClass: "text-center" },
                    { "data": "NumberOfReAdmissions", "title": "Total Readmissions &lt;30 days", sClass: "text-center" },
                    { "data": "TotalHospiceVisits", "title": "Total Hospice Visits", sClass: "text-center" },
                    { "data": "TotalSNFVisits", "title": "Total SNF Visits", sClass: "text-center" },
                    { "data": "VisitTotal", "title": "Total Primary Care Services with a PCP", sClass: "text-center" },
                    { "data": "NumberOfClaims", "title": "Total Home Health Episodes", sClass: "text-center" },
                    { "data": "RiskScore", "title": "Risk Score", sClass: "text-center" },
                    { "data": "EnrollmentStatus", "title": "Beneficiary Enrollment Status", sClass: "text-center" },
                    { "data": "CostWithDollar", "title": "Total Beneficiary’s Expenditure", sClass: "text-center" }
                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblUtilization', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": ' 0,1,2,3,4,5, 6, 7, 8, 9, 10, 11,12,13,14,15,16',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [0],
                    visible: false
                }
                ]

            });
            oTable = table.fnSettings();
            break;
        case "HIGHCOSTPATIENT":

            if ($.fn.DataTable.isDataTable('#tblHighCostPatient')) {
                $('#tblHighCostPatient').DataTable().destroy();
            }
            var prevYear;
            var curYear;
            var selectedYear = 1;

            if ($("#FARyear_on_year").is(':checked')) {
                curYear = selectedYear;
                prevYear = (selectedYear - 1);
            }
            if ($("#FARlast_year").is(':checked')) {
                curYear = (selectedYear - 1);
                prevYear = (selectedYear - 2);
            }
            table = $('#tblHighCostPatient').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");

                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblHighCostPatient").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblHighCostPatient").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HICN", "title": "HICN", sClass: "text-center" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center" },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PCPName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "TotalCostYear1WithDollar", "title": " CY Cost", sClass: "text-center", sType: "currency" },
                    { "data": "TotalCostYear2WithDollar", "title": " LY Cost", sClass: "text-center", sType: "currency" }
                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblHighCostPatient', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '0,1,2,3, 4,5, 6, 7',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [0],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "ADMISSION":
            if ($.fn.DataTable.isDataTable('#tblAdmission')) {
                $('#tblAdmission').DataTable().destroy();
            }
            table = $('#tblAdmission').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                //scrollY: "450px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {

                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblAdmissionTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblAdmissionTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblAdmissionTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblAdmissionTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblAdmissionTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblAdmissionTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblAdmissionActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblAdmissionActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblAdmissionBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblAdmissionBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           
                        }
                        else {
                            $("#lblAdmissionTotalClaims").html("N/A");
                            $("#lblAdmissionTotalPatients").html("N/A");
                            $("#lblAdmissionTotalCost").html("N/A");
                            $("#lblAdmissionBenchmarkPMPY").html("N/A");
                            $("#lblAdmissionActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });

                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportAdmissionGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblAdmission").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblAdmission").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                    { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                    { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                    { "data": "Id", "title": "Id", sClass: "hidden" },
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    {
                        "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"admission\",\"" + data + ', ' + full["PatientFirstName"] + "\",null,null,null, \"" + full['PatientId'] + "\",null,null,null,null,null,null,null,\"" + full['MBI'] + "\" ,\"" + full['CostString'] + "\"  );return false'>" + data + ', ' + full["PatientFirstName"] + "</a>";
                        }
                    },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    {
                        "data": "PhysicianLastName", "title": "PCP Name",

                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200 '>" + data + "</div>";
                        },
                    },
                    { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                    {
                        "data": "ICDCodes", "title": "Most Recent Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },
                    { "data": "AdmitDate", "title": "Last ED/Admit Visit Date", sClass: "text-center" },
                    { "data": "DisDate", "title": "Discharge Date", sClass: "text-center" },
                    { "data": "CostString", "title": "Total Admissions Cost", sClass: "text-center", sType: "currency" },
                    {
                        "data": "HICN", "title": "HICN", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"admission\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\");return false'>" + data + "</a>";
                        }
                    },








                    {
                        "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                        },

                    },
                    //{
                    //    "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                    //    render: function (data, type, full, meta) {
                    //        return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    //    },

                    //},
                    //{
                    //    "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                    //    render: function (data, type, full, meta) {
                    //        return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    //    }
                    //},
                ],


                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblAdmission', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '4, 5, 6, 7, 8, 9, 10, 11,12,13,14,15',
                        // autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    targets: [14, 15],
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "PMPM":
            if ($.fn.DataTable.isDataTable('#tblPMPM')) {
                $('#tblPMPM').DataTable().destroy();
            }
            table = $('#tblPMPM').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Summary
                        if (data.SummaryReport.length > 0) {
                            if (data.SummaryReport[0].TotalClaims == 0) {
                                $("#lblPMPMTotalClaims").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalClaims != 0) {
                                $("#lblPMPMTotalClaims").html(data.SummaryReport[0].TotalClaims);
                            }
                            if (data.SummaryReport[0].TotalPatients == 0) {
                                $("#lblPMPMTotalPatients").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalPatients != 0) {
                                $("#lblPMPMTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));

                                //$("#lblPMPMTotalPatients").html(data.recordsTotal.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].TotalCost == 0) {
                                $("#lblPMPMTotalCost").html("N/A");
                            }
                            else if (data.SummaryReport[0].TotalCost != 0) {
                                $("#lblPMPMTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                            if (data.SummaryReport[0].ActualPMPY == 0) {
                                $("#lblPMPMActualPMPY").html("N/A");
                            }
                            else if (data.SummaryReport[0].ActualPMPY != 0) {
                                $("#lblPMPMActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }

                            if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                                $("#lblPMPMBenchmarkPMPY").html("N/A");

                            }
                            else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                                $("#lblPMPMBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                            }
                           
                        }
                        else {
                            $("#lblPMPMTotalClaims").html("N/A");
                            $("#lblPMPMTotalPatients").html("N/A");
                            $("#lblPMPMTotalCost").html("N/A");
                            $("#lblPMPMBenchmarkPMPY").html("N/A");
                            $("#lblPMPMActualPMPY").html("N/A");
                        }

                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportPMPMGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Group Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });
                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblPMPM").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblPMPM").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                order: [[3, "desc"]],
                aoColumns: [
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center", "width": "25%" },
                    { "data": "CostWithDollar", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost", sClass: "text-center" },
                    { "data": "TotalUniquePatients", "title": "Number Of Beneficiaries", sClass: "text-center" },

                    { "data": "PMPMString", "title": "PMPM", sClass: "text-center" },
                    { "data": "PMPYString", "title": "PMPY", sClass: "text-center" },
                    { "data": "PYF", "title": "PYF", sClass: "text-center" }
                ],


                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblPMPM', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });
            //oTable = table.fnSettings();
            break;
        case "SETMON":
            if ($.fn.DataTable.isDataTable('#tblSetteledMonth')) {
                $('#tblSetteledMonth').DataTable().destroy();
            }
            var temp = new Highcharts.Chart({
                chart: {
                    type: 'column',
                    renderTo: 'tblSetteledMonthgraph'
                },
                title: {
                    text: ''
                },
                xAxis: {
                    title:
                    {
                        text: 'Month',
                        style:
                        {
                            color: '#c0c0c0',
                        }
                    },



                },
                yAxis: {
                    labels: {
                        format: '{value}'
                    },
                    title:
                    {
                        text: 'Total Expenses ',
                        style:
                        {
                            color: '#c0c0c0',
                        }
                    },

                    plotLines: [{
                        color: '#FF0000',
                        width: 3,
                        id: 'plotline-1'
                    }]
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                    }

                },
                series: [{
                    color: '#2582cf',
                    type: 'column',
                    data: [{

                        "name": null,
                        "y": 5499407.48,

                    }, {

                        "name": null,
                        "y": 4892138.58,

                    }, {

                        "name": null,
                        "y": 4907075.18,

                    }, {
                        "name": null,
                        "y": 3850405.59,

                    }, {

                        name: null,
                        y: 2658749.58,

                    }],
                    showInLegend: false
                }]

            });
            var tblSetteledMonthval = [
                {
                    "Month": "1",
                    "Membership": "18089",
                    "Premium": "$5,171,700.25",
                    "TotalExpenditure": "$5,499,407.48",
                    "ReinsuranceRecoveredStopLoss": "($366,711.17)",
                    "RiskSharing": "100%",
                    "SurplusDeficit": "($327,707.23)",
                },
                {
                    "Month": "1",
                    "Membership": "18089",
                    "Premium": "$5,171,700.25",
                    "TotalExpenditure": "$5,499,407.48",
                    "ReinsuranceRecoveredStopLoss": "($366,711.17)",
                    "RiskSharing": "100%",
                    "SurplusDeficit": "($327,707.23)",
                },
                {
                    "Month": "1",
                    "Membership": "18089",
                    "Premium": "$5,171,700.25",
                    "TotalExpenditure": "$5,499,407.48",
                    "ReinsuranceRecoveredStopLoss": "($366,711.17)",
                    "RiskSharing": "100%",
                    "SurplusDeficit": "($327,707.23)",
                },
                {
                    "Month": "1",
                    "Membership": "18089",
                    "Premium": "$5,171,700.25",
                    "TotalExpenditure": "$5,499,407.48",
                    "ReinsuranceRecoveredStopLoss": "($366,711.17)",
                    "RiskSharing": "100%",
                    "SurplusDeficit": "($327,707.23)",
                },
                {
                    "Month": "1",
                    "Membership": "18089",
                    "Premium": "$5,171,700.25",
                    "TotalExpenditure": "$5,499,407.48",
                    "ReinsuranceRecoveredStopLoss": "($366,711.17)",
                    "RiskSharing": "100%",
                    "SurplusDeficit": "($327,707.23)",
                },

            ]
            $('#tblSetteledMonth').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": false,
                "lengthMenu": [[10, 20, 50, 100], [10, 20, 50, 100]],
                pagingType: "simple",
                "data": tblSetteledMonthval,
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                initComplete: function () {
                    setTimeout(function () {
                        $($.fn.dataTable.tables(true)).DataTable().columns.adjust()
                    }, 500)
                },
                aoColumns: [
                    { "data": "Month", "title": "Month", sClass: "text-center" },
                    { "data": "Membership", "title": "Membership", sClass: "text-center" },
                    { "data": "Premium", "title": "IPA Premium", sClass: "text-center" },
                    { "data": "TotalExpenditure", "title": "Total Expenditure", sClass: "text-center" },
                    { "data": "ReinsuranceRecoveredStopLoss", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center" },
                    { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center" },
                    { "data": "SurplusDeficit", "title": "Surplus/Deficit", sClass: "text-center" },
                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',

                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });
            break;
        case "SUMMARYREPORT":
            var sourceCols;
            switch (ByMonthORLocationDataFilter) {
                case 'ByMonth' || undefined:
                    sourceCols = [
                        {
                            "data": "MonthMembership", "title": "Month", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailPopup_Server(\"" + full['Id'] + "\" , \"SUMMARYREPORT\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + practiceId + "\",\"" + physicianId + "\");return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Membership", "title": "Membership", sClass: "text-center" },
                        { "data": "IPAPremium", "title": "IPA Premium", sClass: "text-center", sType: "currency" },
                        { "data": "CostWithDollar", "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                        { "data": "InstitutionalCosts", "title": "Institutional Cost", sClass: "text-center", sType: "currency" },
                        { "data": "ProfessionalCosts", "title": "Professional Cost", sClass: "text-center", sType: "currency" },
                        { "data": "Pharmacycost", "title": "Pharmacy Cost", sClass: "text-center", sType: "currency" },
                        { "data": "OtherCosts", "title": "Other Costs", sClass: "text-center" },
                        { "data": "GrossSurplus", "title": "Surplus/Deficit", sClass: "text-center", sType: "currency" },
                        { "data": "Reinsurance", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center", sType: "currency" },
                        { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center", sType: "currency" }
                    ];
                    break;
                case 'ByLocation':
                    sourceCols = [
                        { "data": "Location", "title": "Location", sClass: "text-center" },
                        { "data": "Membership", "title": "Membership", sClass: "text-center" },
                        { "data": "IPAPremium", "title": "IPA Premium", sClass: "text-center", sType: "currency" },
                        { "data": "CostWithDollar", "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                        { "data": "Reinsurance", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center", sType: "currency" },
                        { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center", sType: "currency" },
                        { "data": "GrossSurplus", "title": "Surplus/Deficit", sClass: "text-center", sType: "currency" }
                    ];

                    break;
            }
            if ($.fn.DataTable.isDataTable('#tblSummaryReport')) {
                $('#tblSummaryReport').DataTable().destroy();
                $('#tblSummaryReport').empty();
            }
            table = $('#tblSummaryReport').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });

                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'tblSummaryReportgraph'
                            },
                            title: {
                                text: ''
                            },


                            xAxis: {
                                title:
                                {
                                    text: (ByMonthORLocationDataFilter == 'ByMonth' ? 'Month' : 'Location'),
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Total Expenses',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        var returnData = data.data
                        var arrayLength = returnData.length;
                        for (var i = 0; i < arrayLength; i++) {
                            returnData[i].IPAPremium = ('$' + returnData[i].IPAPremium).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                            returnData[i].InstitutionalCosts = ('$' + returnData[i].InstitutionalCosts).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                            returnData[i].ProfessionalCosts = ('$' + returnData[i].ProfessionalCosts).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                            returnData[i].Pharmacycost = ('$' + returnData[i].Pharmacycost).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                            returnData[i].OtherCosts = ('$' + returnData[i].OtherCosts).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        }
                        return returnData;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                    // sProcessing: "<div class='col-xs-12 loader'></div>"
                },
                "columns": sourceCols,
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblSummaryReport").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblSummaryReport").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblSummaryReport', '', '', '', '', '', '', '', '', '', '', '', '', '', ByMonthORLocationDataFilter);
                        }
                    },
                    {
                        extend: 'colvis',
                        // "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,13,14',
                        // autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "MLR":
            if ($.fn.DataTable.isDataTable('#tblmlr')) {
                $('#tblmlr').DataTable().destroy();
            }
            table = $('#tblmlr').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                scrollY: false,
                // scrollY: "350px",
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },

                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    //$('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblmlr").dataTable().api();
                            dtable.search(this.value).draw();
                        }
                        if (this.value.length == 0) {
                            var dtable = $("#tblmlr").dataTable().api();
                            dtable.search("").draw();
                        }
                    });
                },
                aoColumns: [
                    { "data": "PlanName", "title": "Plan Name", sClass: "text-center" },
                    {
                        "data": "MBI", "title": "Patient ID", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<div class='text-wrap width-200'><a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"MLR\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,null);return false'>" + data + "</a></div>";
                        }
                    },
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center"
                    },
                    { "data": "PatientDOB", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PCPName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "PCPLocation", "title": "PCP Location", sClass: "text-center" },
                    { "data": "IPAEffectiveDate", "title": "IPA Effective Date", sClass: "text-center" },
                    { "data": "TermedMonth", "title": "Termed Month", sClass: "text-center" },
                    {
                        "data": "MRAScore", "title": "MRA", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data > 0) {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }

                        }
                    },
                    {
                        "data": "TotalPremiumString", "title": "Total Premium", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "$0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }

                        }
                    },
                    {
                        "data": "IPAPremiumString", "title": "IPA Premium", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "$0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }

                        }
                    },
                    {
                        "data": "TotalPatientCostString", "title": "Total Patient Cost", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "$0") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }

                        }
                    },
                    {
                        "data": "AverageMLR", "title": "Average MLR", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != "0") {
                                return data + '% ';
                            }
                            else {
                                return 'N/A';
                            }
                        }
                    }
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        //filename: 'Data export-' + "MLR Report",
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblmlr', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
                columnDefs: [{
                    visible: false
                }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "SERVICEFUND":
            var sourceCols;
            switch (NetworkORPracticeFilter) {
                case 'NetworkLevel' || undefined:
                    sourceCols = [
                        { "data": "Period", "title": "Period", sClass: "text-center" },
                        { "data": "PracticeName", "title": "Practice", sClass: "hidden" },
                        { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                        { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                        { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                        { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                        {
                            "data": "InstitutionalCosts", "title": "Institutional", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUND\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                            }
                        },
                        {
                            "data": "ProfessionalCosts", "title": "Professional", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUNDINST\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                            }
                        },
                        {
                            "data": "Pharmacycost", "title": "Pharmacy", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUNDPHAR\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                            }
                        },
                        { "data": "PCPCAP", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "PCP Cap", sClass: "text-center", sType: "currency" },
                        { "data": "SpecialistCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Specialty Cap", sClass: "text-center", sType: "currency" },
                        { "data": "Reinsurance", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Expense", sClass: "text-center", sType: "currency" },
                        { "data": "ReinsuranceRecoveries", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Recoveries", sClass: "text-center", sType: "currency" },
                        { "data": "OtherCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Other", sClass: "text-center", sType: "currency" },
                        { "data": "IBNR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "IBNR", sClass: "text-center", sType: "currency" },
                        { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                        { "data": "Surplus", "title": "Surplus", sClass: "text-center" },
                        { "data": "AverageMLR", "title": "MLR", sClass: "text-center" },
                    ];
                    break;

                case 'Practicelevel':
                    sourceCols = [
                        { "data": "Period", "title": "Period", sClass: "text-center" },
                        {
                            "data": "PracticeName", "title": "Practice", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick = 'showDetailPopup_Server(\"" + full['Id'] + "\" , \"servicefund\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + full['PracticeId'] + "\",\"" + physicianId + "\",\"" + "\" ,\"" + "\" ,\"" + full['PracticeName'] + "\" ,\"" + "\" ,\"" + full['Period'] + "\");return false' > " + data + "</a > ";
                            }
                        },
                        { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                        { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                        { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                        { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                        {
                            "data": "InstitutionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Institutional", sClass: "text-center", sType: "currency"
                        },
                        {
                            "data": "ProfessionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Professional", sClass: "text-center", sType: "currency"
                        },
                        {
                            "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Pharmacy", sClass: "text-center", sType: "currency"
                        },
                        { "data": "PCPCAP", "title": "PcpCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "SpecialistCap", "title": "SpecialistCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "Reinsurance", "title": "Reinsurance Expense", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "ReinsuranceRecoveries", "title": "Reinsurance Recoveries", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "OtherCosts", "title": "Other", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "IBNR", "title": "IBNR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                        { "data": "Surplus", "title": "Surplus", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), sClass: "text-center", sType: "currency" },
                        { "data": "AverageMLR", "title": "MLR", sClass: "text-center" },
                    ];
                    break;
            }
            if ($.fn.DataTable.isDataTable('#tblServiceFund')) {
                $('#tblServiceFund').DataTable().destroy();
            }
            table = $('#tblServiceFund').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    }
                },
                "columns": sourceCols,
                scrollX: true,
                fixedHeader: true,
                scrollY: false,
                "sZeroRecords": "No data available",
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Graph  
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'tblServiceFundGraph'
                            },
                            title: {
                                text: ''
                            },

                            xAxis: {
                                title:
                                {
                                    text: 'Month',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                categories: Items

                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Net Surplus/Deficit',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },

                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>Net Surplus/(Deficit)</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }
                            },
                            credits: { enabled: false },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]
                        });
                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var dtable;
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            dtable = $("#tblServiceFund").dataTable().api();
                            dtable.search(this.value).draw();
                        }
                        if (this.value.length == 0) {
                            dtable = $("#tblServiceFund").dataTable().api();
                            dtable.search("").draw();
                        }
                    });
                    if (servicefundPMPMBool) {
                        var table = $('#tblServiceFund').DataTable();
                        table.column(4).header('Premium_PMPM');
                        table.column(5).header('Funding_PMPM');
                        table.column(6).header('Institutional_PMPM');
                        table.column(7).header('Professional_PMPM');
                        table.column(8).header('Pharmacy_PMPM');
                        table.column(9).header('PCPCap_PMPM');
                        table.column(10).header('SpecCap_PMPM');
                        table.column(11).header('ReinsuranceExpense_PMPM');
                        table.column(12).header('ReinsuranceRecoveries_PMPM');
                        table.column(13).header('OtherCost_PMPM');
                        table.column(13).header('IBNR_PMPM');
                        table.column(13).header('TotalExpenditure_PMPM');
                        table.column(13).header('Surplus_Deficit_PMPM');
                    }
                },
                aoColumns: [

                    { "data": "Period", "title": "Period", sClass: "text-center" },
                    { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                    { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                    { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                    { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                    {
                        "data": "InstitutionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Institutional", sClass: "text-center", sType: "currency",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUND\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + full['PhysicianId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['ClaimPhysicianId'] + "\",\"" + "\",\"" + "\",\"" + "\" ,\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                        }
                    },
                    {
                        "data": "ProfessionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Professional", sClass: "text-center", sType: "currency",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUNDINST\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + full['PhysicianId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['ClaimPhysicianId'] + "\" ,\"" + "\",\"" + "\",\"" + "\",\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                        }
                    },
                    {
                        "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Pharmacy", sClass: "text-center", sType: "currency",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUNDPHAR\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + full['PhysicianId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['ClaimPhysicianId'] + "\" ,\"" + "\",\"" + "\",\"" + "\",\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                        }
                    },
                    { "data": "PCPCAP", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "PCP Cap", sClass: "text-center", sType: "currency" },
                    { "data": "SpecialistCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Specialty Cap", sClass: "text-center", sType: "currency" },
                    { "data": "Reinsurance", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Expense", sClass: "text-center", sType: "currency" },
                    { "data": "ReinsuranceRecoveries", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Recoveries", sClass: "text-center", sType: "currency" },

                    { "data": "OtherCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Other", sClass: "text-center", sType: "currency" },
                    { "data": "IBNR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "IBNR", sClass: "text-center", sType: "currency" },
                    { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                    { "data": "Surplus", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Surplus/(Deficit)", sClass: "text-center", sType: "currency" },
                    { "data": "AverageMLR", "title": "MLR", sClass: "text-center" }
                ],
                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {

                            ExportToExcel('Reports', 'tblServiceFund', '', '', '', '', '', '', '', '', '', '', '', '', NetworkORPracticeFilter, '', servicefundPMPMBool);
                        }
                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    }
                ]
            });
            oTable = table.fnSettings();
            break;
        case "UTILIZATIONADVANCESUMMARY":
            if ($.fn.DataTable.isDataTable('#tblutilizationAdvanceSummary')) {
                $('#tblutilizationAdvanceSummary').DataTable().destroy();
                $('#tblutilizationAdvanceSummary').empty();
            }
            if ($.fn.DataTable.isDataTable('#tblutilizationAdvanceSummaryPractice')) {
                $('#tblutilizationAdvanceSummaryPractice').DataTable().destroy();
                $('#tblutilizationAdvanceSummaryPractice').empty();
            }
            if ($.fn.DataTable.isDataTable('#tblutilizationAdvanceSummaryPhysician')) {
                $('#tblutilizationAdvanceSummaryPhysician').DataTable().destroy();
                $('#tblutilizationAdvanceSummaryPhysician').empty();
            }
            var sourceCols;
            switch (ByMonthORPraOrPhyDataFilter) {
                case 'ByMonth' || undefined:
                    tableName = "tblutilizationAdvanceSummary";
                    sourceCols = [
                        // { "data": "day", "title": "Days In Period", sClass: "text-center" },
                        //{ "data": "Period", "title": "Id", sClass: "hidden" },
                        { "data": "Period", "title": "Period", sClass: "text-center" },

                        {
                            "data": "MemberMonths", "title": "Member Months", sClass: "text-center",
                            render: function (data, type, full, meta) {

                                return data;
                            },
                        },
                        { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                        // { "data": "TotalCost1", "title": "Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                        {
                            "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "AWV" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "AWV" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },

                        {
                            "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },
                        {
                            "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Admit" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Admit" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        // { "data": "TotalAdmitLOS", "title": "Total Admit LOS", sClass: "text-center" },
                        { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                        {
                            "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },

                        { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                        { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        {
                            "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Readmit" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Readmit" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "ERCount", "title": "ER Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "ER" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "ER" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNF" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "SNF" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                        {
                            "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },
                        { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                        { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        {
                            "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNFReadmit" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "SNFReadmit" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },

                        { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },

                        { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Hospice" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Hospice" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Outpatient" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Outpatient" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },

                        {
                            "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "OBS" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "OBS" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    ];
                    break;
                case 'ByPractice':
                    tableName = "tblutilizationAdvanceSummaryPractice";
                    sourceCols = [
                        // { "data": "day", "title": "Days In Period", sClass: "text-center" },
                        //{ "data": "Period", "title": "Period", sClass: "text-center" },
                        //{ "data": "PracticeId", "title": "Id", sClass: "hidden" },
                        {
                            "data": "PracticeName", "title": "Office Name", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "PracticeMonth" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },

                        //{
                        //    "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                        //    render: function (data, type, full, meta) {

                        //        return data;
                        //    },
                        //},
                        { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                        // { "data": "TotalCost1", "title": "Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                        {
                            "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "AWV" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }

                        },

                        {
                            "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },
                        {
                            "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Admit" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        // { "data": "TotalAdmitLOS", "title": "Total Admit LOS", sClass: "text-center" },
                        { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                        {
                            "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },

                        { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                        { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        {
                            "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Readmit" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "ERCount", "title": "ER Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "ER" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },



                        { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "SNF" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                        {
                            "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },
                        { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                        { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        {
                            "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "SNFReadmit" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },

                        { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },



                        { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Hospice" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Outpatient" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },

                        {
                            "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "OBS" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    ];
                    break;
                case 'ByPhysician':
                    tableName = "tblutilizationAdvanceSummaryPhysician";
                    sourceCols = [
                        // { "data": "day", "title": "Days In Period", sClass: "text-center" },
                        //{ "data": "Period", "title": "Period", sClass: "text-center" },
                        //{ "data": "PhysicianId", "title": "Id", sClass: "hidden" },
                        {
                            "data": "PhysicianName", "title": "Provider Name", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "PhysicianMonth" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },

                        //{
                        //    "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                        //    render: function (data, type, full, meta) {

                        //        return data;
                        //    },
                        //},
                        { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                        // { "data": "TotalCost1", "title": "Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                        {
                            "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "AWV" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        {
                            "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },
                        {
                            "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Admit" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        // { "data": "TotalAdmitLOS", "title": "Total Admit LOS", sClass: "text-center" },
                        { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                        {
                            "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },

                        { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                        { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        {
                            "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Readmit" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "ERCount", "title": "ER Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "ER" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },



                        { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "SNF" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                        {
                            "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",

                            "render": function (data, type, full, meta) {
                                if (data == '')
                                    data = '';
                                else
                                    data = data + '%';
                                return data;
                            }
                        },
                        { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                        { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        {
                            "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "SNFReadmit" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },

                        { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },



                        { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Hospice" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        {
                            "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Outpatient" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },

                        {
                            "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                            "render": function (data, type, full, meta) {
                                return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "OBS" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                            }
                        },
                        { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    ];
                    break;
            }
            table = $('#' + tableName).dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "ZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                    sProcessing: "<div class='col-xs-12 loader'></div>",
                },
                scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                order: [[0, "asc"]],
                "columns": sourceCols,

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $('#' + tableName).dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $('#' + tableName).dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },



                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', tableName, '', '', '', '', '', '', '', '', '', '', '', ByMonthORPraOrPhyDataFilter);
                        }
                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]
            });
            oTable = table.fnSettings();
            break;
        case "FIRST90DAYSSPEND":
            if ($.fn.DataTable.isDataTable('#tblFirst90DaysSpend')) {
                $('#tblFirst90DaysSpend').DataTable().destroy();
            }
            table = $('#tblFirst90DaysSpend').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                        var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportFirst90DaysSpendGraph'
                            },
                            title: {
                                text: ''
                            },
                            xAxis: {
                                title:
                                {
                                    text: 'PCP Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },
                                categories: Items
                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },
                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblFirst90DaysSpend").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblFirst90DaysSpend").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                    { "data": "PlanName", "title": "Plan Name", sClass: "text-center" },
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['PatientId'] + "\" , \"first90daysspend\",\"" + full['PatientName'] + "\",null,\"" + full['PracticeId'] + "\",null);return false'>" + data + "</a>";
                        }
                    },
                    { "data": "PCPName", "title": "Assigned Physician", sClass: "text-center" },
                    {
                        "data": "TermedMonth", "title": "Termed Month", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data != null && data != " " && data != "") {
                                return data;
                            }
                            else {
                                return 'N/A';
                            }
                        }

                    },
                    { "data": "IPAEffectiveDate", "title": "IPA Effective Date", sClass: "text-center" },
                    { "data": "Nintydays", "title": "90days", sClass: "text-center" },
                    { "data": "TotalPatientCostString", "title": "Total Patient Cost", sClass: "text-center" },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblFirst90DaysSpend', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '0, 1, 2, 3, 4, 5, 6,7',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
            });
            oTable = table.fnSettings();
            break;
        case "AWVL":
            debugger;
            if ($.fn.DataTable.isDataTable('#tblawvLife')) {
                $('#tblawvLife').DataTable().destroy();
            }
            table = $('#tblawvLife').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Graph       
                        var Values = new Array();
                        var Items = new Array();
                        $.each(data.Graph, function (i, item) {
                            Values.push([data.Graph[i].Value]);
                            Items.push([data.Graph[i].Item]);
                        });
                       var temp = new Highcharts.Chart({
                            chart: {
                                type: 'column',
                                renderTo: 'reportAWVAllLivesGraph'
                            },
                            title: {
                                text: ''
                            },
                            xAxis: {
                                title:
                                {
                                    text: 'PCP Name',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },
                                categories: Items
                            },
                            yAxis: {
                                labels: {
                                    format: '{value}'
                                },
                                title:
                                {
                                    text: 'Count/Sum(Cost)',
                                    style:
                                    {
                                        color: '#c0c0c0',
                                    }
                                },
                                plotLines: [{
                                    color: '#FF0000',
                                    width: 3,
                                    //  value: data.benchmark[12].Value,
                                    id: 'plotline-1'
                                }]
                            },
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                                }

                            },
                            series: [{
                                color: '#2582cf',
                                type: 'column',
                                data: Values,
                                showInLegend: false
                            }]

                        });

                        

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblawvLife").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblawvLife").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                   { "data": "Id", "title": "Id", sClass: "hidden" },
                   { "data": "ContractName", "title": "Contract Name", sClass: "text-center" },
                    { "data": "HICN", "title": "Patient ID", sClass: "text-center" },
                    {
                        "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {debugger;
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"AWVL\",\"" + full['PatientName'] + "\",null,\"" + full['PracticeId'] + "\",null);return false'>" + data + "</a>";
                        }
                    },
                    { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                    { "data": "PhysicianName", "title": "Assigned Physician", sClass: "text-center" },
                    { "data": "RecentAWVCode", "title": "Most Recent AWV Code", sClass: "text-center" },
                    { "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center" },
                    { "data": "NextAWVDate", "title": "Next AWV Date", sClass: "text-center" },
                    { "data": "PastDueStr", "title": "Number of Days Past Due", sClass: "text-center" },
                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblawvLife', '');
                        }
                    },
                    {
                        extend: 'colvis',
                        "columns": '0, 1, 2, 3, 4, 5, 6,7,8,9,10',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
            });
            oTable = table.fnSettings();
            break;
 case "PVBR":

            if ($.fn.DataTable.isDataTable('#tblpvbr')) {
                $('#tblpvbr').DataTable().destroy();
            }
            table = $('#tblpvbr').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
               scrollX: true,
                fixedHeader: true,
                // scrollY: "350px",
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                    "data": reportParams,
                    "dataSrc": function (data) {
                        //Graph       

                        return data.data;
                    },
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },

                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });

                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblpvbr").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblpvbr").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                   { "data": "Id", "title": "Id", sClass: "hidden" },
                    { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                    { "data": "ProviderName", "title": "Provider Name", sClass: "text-center", },

                    {
                        "data": "OutstandingAWVs", "title": "Outstanding AWVs", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                          
                                return "<a href='javascript:void(0);' data-title='AWVL' onclick='ServerProcessing_FARs(\"" + "AWVRedirect" + "\" , \"2022\",null,null,\"" + full['PhysicianId'] + "\" ,\"" + full['OutstandingAWVs'] + "\" );return false'>" + data + "</a>";
                            
                        }
                    },
                    {
                        "data": "HCCValidation", "title": "HCC Validation", sClass: "text-center",
                        "render": function (data, type, full, meta) {

                            return "<a href='javascript:void(0);' onclick='getDeRiskPhysician(\"" + full['PhysicianId'] + "\"  );return false'>" + data + "%" + "</a>";

                        }
                    },
                    {
                        "data": "TotalOpenCareGaps", "title": "Total Open Care Gaps", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='getCaregapsPhysician(\"" + full['PhysicianId'] + "\" );return false'>" + data + "</a>";
                        }
},
                    ],
                buttons: [
                    
                     {
                        extend: 'excel',
                        filename: 'Data export-' + Type,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            ExportToExcel('Reports', 'tblpvbr', '');
                        }
                    },
                    
                    
                    {
                        extend: 'colvis',
                        "columns": '0, 2, 3, 4, 5',
                        //autoClose: true,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ],
            });
            oTable = table.fnSettings();
            break;
    }
}


function FrequentlyAccessedReport(Type, Year) {
    if (parentselection == "true") {
        var phyId = practiceId;
        var praId = physicianId;
        physicianId = null;
        var getptid = parentpractid.split("n");
    }

    $("#tblReportsClaimsDetails_wrapper").hide();
    if (childselection == "true") {
        var res = child_id.split("d");
        var getid = $("#hidden_practiceq" + res[1]).val();
        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = pp[1];
    }
    if (isAssignable) {
        practiceId = null;
        RegionId = null;
    }
    $(".loader").show();
    $("#hdnReportType").val(Type);
    export_datayear = Year;

    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetFrequentlyAccessedReport',
        data: JSON.stringify({
            ReportType: Type, PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Fromyear: Year, IsAssignable: isAssignable
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {
            if (data.ReportType == "eor") {

                setTimeout(function () {

                    table = $('#tblEOR').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        cache: false,
                        pagingType: "simple",
                        scrollX: true,
                        // scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.recentlyAccessedReport,

                        //"sScrollY": "150px",
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-left buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                colvis_scroll();
                            });
                        },
                        order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "Id", "title": "Id", sClass: "hidden" },
                            { "data": "PatientFirstName", "title": "FirstName", sClass: "hidden" },
                            { "data": "HICN", "title": "Medicare Id", sClass: "hidden" },
                            { "data": "HICN", "title": "Patient Id", sClass: "text-center" },
                            {
                                "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"er\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Group Name", sClass: "text-center" },
                            { "data": "TotalOutpatientVisits", "title": "Total Outpatient Visits", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDate", "title": "Claim Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },

                            { "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center" },
                            {
                                "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            { "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center" },
                            { "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ],


                        buttons: [
                            //{
                            //    extend: 'print',
                            //    title: 'Data export-' + Type,
                            //    exportOptions: {
                            //        columns: ':visible'
                            //    },
                            //    className: 'print-btn',
                            //    titleAttr: 'Print'
                            //},
                            {
                                extend: 'excel',
                                filename: 'Data export-' + Type,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            //{
                            //    extend: 'pdf',
                            //    filename: 'Data export-' + Type,
                            //    title: Type,
                            //    pageSize: 'LEGAL',
                            //    orientation: 'landscape',
                            //    exportOptions: {
                            //        columns: ':visible'
                            //    },
                            //    className: 'pdf-btn',
                            //    titleAttr: 'Pdf'
                            //},
                            {
                                extend: 'colvis',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                    // oTable = table.fnSettings();
                }, 500);

                //Summary
                if (data.SummaryReport.length > 0) {
                    if (data.SummaryReport[0].TotalClaims == 0) {
                        $("#lblEORTotalClaims").html("N/A");
                    }
                    else if (data.SummaryReport[0].TotalClaims != 0) {
                        $("#lblEORTotalClaims").html(data.SummaryReport[0].TotalClaims);
                    }
                    if (data.SummaryReport[0].TotalPatients == 0) {
                        $("#lblEORTotalPatients").html("N/A");
                    }
                    else if (data.SummaryReport[0].TotalPatients != 0) {
                        $("#lblEORTotalPatients").html(data.SummaryReport[0].TotalPatients.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                    }
                    if (data.SummaryReport[0].TotalCost == 0) {
                        $("#lblEORTotalCost").html("N/A");
                    }
                    else if (data.SummaryReport[0].TotalCost != 0) {
                        $("#lblEORTotalCost").html('$' + data.SummaryReport[0].TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                    }
                    if (data.SummaryReport[0].ActualPMPY == 0) {
                        $("#lblEORActualPMPY").html("N/A");
                    }
                    else if (data.SummaryReport[0].ActualPMPY != 0) {
                        $("#lblEORActualPMPY").html('$' + data.ActualPMPY.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                    }

                    if (data.SummaryReport[0].BenchmarkPMPY == 0) {
                        $("#lblEORBenchmarkPMPY").html("N/A");

                    }
                    else if (data.SummaryReport[0].BenchmarkPMPY != 0) {
                        $("#lblEORBenchmarkPMPY").html('$' + data.SummaryReport[0].BenchmarkPMPY.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                    }
                   
                }
                else {
                    $("#lblEORTotalClaims").html("N/A");
                    $("#lblEORTotalPatients").html("N/A");
                    $("#lblEORTotalCost").html("N/A");
                    $("#lblEORBenchmarkPMPY").html("N/A");
                    $("#lblEORActualPMPY").html("N/A");
                }

                //Graph       
                var Values = new Array();
                var Items = new Array();
                $.each(data.Graph, function (i, item) {
                    Values.push([data.Graph[i].Value]);
                    Items.push([data.Graph[i].Item]);
                });
                var temp = new Highcharts.Chart({
                    chart: {
                        type: 'column',
                        renderTo: 'reportEORGraph'
                    },
                    title: {
                        text: ''
                    },

                    xAxis: {
                        title:
                        {
                            text: 'Group Name',
                            style:
                            {
                                color: '#c0c0c0',
                            }
                        },

                        categories: Items

                    },
                    yAxis: {
                        labels: {
                            format: '{value}'
                        },
                        title:
                        {
                            text: 'Count/Sum(Cost)',
                            style:
                            {
                                color: '#c0c0c0',
                            }
                        },

                        plotLines: [{
                            color: '#FF0000',
                            width: 3,
                            //  value: data.benchmark[12].Value,
                            id: 'plotline-1'
                        }]
                    },
                    tooltip: {
                        formatter: function () {
                            return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                        }

                    },
                    credits: { enabled: false },
                    series: [{
                        color: '#2582cf',
                        type: 'column',
                        data: Values,
                        showInLegend: false
                    }]

                });


            }
            else {
                $(".loader").fadeOut("slow");
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            $("#myModal").modal("hide");
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

function toggleIcon(e) {
    $(e.target)
        .prev('.panel-heading')
        .find(".more-less")
        .toggleClass('glyphicon-plus glyphicon-minus');
}
$('.panel-group').on('hidden.bs.collapse', toggleIcon);
$('.panel-group').on('shown.bs.collapse', toggleIcon);


//Functions Start
function GetClinicalDistribution(practiceId, physicianId, RegionId, isAssignable) {

    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    $(".loader").show();
    // Create the chart
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetClinicalDistribution',
        data: JSON.stringify({
            PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Year: currentYear, IsAssignable: isAssignable
        }),
        dataType: "json",
        language: {
            search: "",
            sZeroRecords: "No data available",

        },
        contentType: 'application/json; charset=utf-8',
        async: false,
        processData: false,
        cache: false,
        success: function (data) {

            //Clinical Distribution          
            var conditionCategory = Array();
            var count = Array();
            var dataArrayClinical = Array();
            for (i = 0; i < data.Clinicaldistribution.length; i++) {
                conditionCategory[i] = data.Clinicaldistribution[i].ConditionCategory;
                count[i] = data.Clinicaldistribution[i].Count;
            }

            for (j = 0; j < conditionCategory.length; j++) {
                var temp = new Array(conditionCategory[j], count[j]);
                dataArrayClinical[j] = temp;
            }

            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'clinical_distri',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return Math.round(this.percentage * 100) / 100 + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.point.name + '</b>: ' + this.y;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return this.name + ' ';
                    },
                    itemStyle: {
                        width: '70px',
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: dataArrayClinical,
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            click: function () {
                                ClinicalDetailsPoup(this.name, "Clinical Distribution ");
                            }
                        }
                    }
                }]
            });

            var PracticeId = Array();
            var practiceName = Array();
            var count = Array();
            var dataArrayHCHN = Array();
            for (i = 0; i < data.HCHNPatients.length; i++) {
                PracticeId[i] = data.HCHNPatients[i].PracticeId;
                practiceName[i] = data.HCHNPatients[i].PracticeName;
                count[i] = data.HCHNPatients[i].Count;
            }

            for (j = 0; j < practiceName.length; j++) {
                var temp = new Array(practiceName[j], count[j], PracticeId[j]);
                dataArrayHCHN[j] = temp;
            }
            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'hchn_patient_by_provider',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return Math.round(this.percentage * 100) / 100 + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.point.name + '</b>: ' + this.y;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return this.name + ' ';
                    },
                    itemStyle: {
                        width: '70px',
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: dataArrayHCHN,// [["Patient1", Patient1], ["Patient2", Patient2], ["Patient3", Patient3], ["Patient4", Patient4], ["Patient5", Patient5], ["Patient6", Patient6], ["OTHERS", OthersHCHN]],
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            click: function () {
                                HCHNPatientsDetailsPoup(this.name)
                            }
                        }
                    }
                }]
            });

        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            //Show the mmodal popup.
            // ValidationMessage("Unable to Process Request. Please Try Again Later.5");

            //Clinical Distribution          
            var conditionCategory = null;
            var count = null;
            var dataArrayClinical = null;
            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'clinical_distri',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return null + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + null + '</b>: ' + null;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return null + ' ';
                    },
                    itemStyle: {
                        width: '70px',
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: dataArrayClinical,
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            legendItemClick: function () {
                                return false;
                            }
                        }
                    }
                }]
            });

            var practiceName = null;
            var count = null;
            var dataArrayHCHN = null;


            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'hchn_patient_by_provider',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return null + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + null + '</b>: ' + null;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return null + ' ';
                    },
                    itemStyle: {
                        width: '70px',
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: null,
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            legendItemClick: function () {
                                return false; // <== returning false will cancel the default action
                            }
                        }
                    }
                }]
            });


        }
    });
}






function GetPatientCensus(practiceId, physicianId, RegionId, Pyear, lyear, custfromonth, custTomonth, isAssignable) {
$.ajax({
type: "POST",
url: serverRoot + '/Insights/Insights/GetPatientCensus',
data: JSON.stringify({
PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Fromyear: Pyear, Toyear: lyear, Frommonth: custfromonth, Tomonth: custTomonth, IsAssignable: isAssignable
}),
dataType: "json",
language: {
search: "",
sZeroRecords: "No data available",

},
contentType: 'application/json; charset=utf-8',
async: false,
processData: false,
cache: false,
success: function (data) {
//Age Distribution
if (data.patientCensus.length > 0) {
$("#lblLessThan65Male").html(data.patientCensus[0].LessThan65Male);
$("#lblLessThan65Female").html(data.patientCensus[0].LessThan65Female);
$("#lblBetween65and75Male").html(data.patientCensus[0].Between65and75Male);
$("#lblBetween65and75Female").html(data.patientCensus[0].Between65and75Female);
$("#lblBetween76and84Male").html(data.patientCensus[0].Between76and84Male);
$("#lblBetween76and84Female").html(data.patientCensus[0].Between76and84Female);
$("#lblGreaterThan84Male").html(data.patientCensus[0].GreaterThan84Male);
$("#lblGreaterThan84Female").html(data.patientCensus[0].GreaterThan84Female);
$("#lblFemale").html(data.patientCensus[0].FemaleCount);
$("#lblMale").html(data.patientCensus[0].MaleCount);

//Patient Census donut graph
var drop = data.patientCensus[0].Dropped;
var add = data.patientCensus[0].Added;
var deces = data.patientCensus[0].Deceased;
var Current = data.patientCensus[0].Current;
var OptOut = data.patientCensus[0].OptOut;
// var assign = data.patientCensus.Assignable;

// Create the chart
Highcharts.setOptions({
colors: ['#63c8d4', '#f55c4e', '#504d48', '#0D1AEF', '#EFAB0D']
});
chart = new Highcharts.Chart({
chart: {
renderTo: 'traditional_assignment',
type: 'pie'
},
title: {
text: ''
},
plotOptions: {
pie: {
allowPointSelect: true,
cursor: 'pointer',
dataLabels: {
enabled: false,
color: '#000000',
connectorColor: '#000000',
distance: -10,
color: 'white'
}
},
series: {
states: {
hover: {
enabled: true,
halo: {
size: 0
}
}
}
}
},
tooltip: {
formatter: function () {
// return '<b>' + this.point.name + '</b>: ' + this.y;
return '<b> Percentage:</b>' + Math.round(this.percentage * 100) / 100 + ' % ' + '<br/>' + '<b>' + this.point.name + '</b>: ' + this.y;
}
},
legend: {
itemStyle: {
width: '70px',
textOverflow: "ellipsis",
overflow: "hidden",
whiteSpace: "nowrap",
fontWeight: 'normal',
fontSize: '10',
fontfamily: 'Roboto-Regular'
},
enabled: true,
layout: 'vertical',
align: 'right',
verticalAlign: 'middle',
symbolRadius: 0,
labelFormatter: function () {
return this.name + ' ';
}
},
credits: { enabled: false },
series: [{
name: 'Browsers',
data: [["Dropped", drop], ["Deceased", deces], ["Added", add],],
size: '130%',
innerSize: '50%',
showInLegend: true,
point: {
events: {
legendItemClick: function () {
return false; // <== returning false will cancel the default action
},
click: function () {
//return false; // <== returning false will cancel the default action
PatientCensuspopup(this.name)
}
}
}

}]
});
}

else {
$("#lblLessThan65Male").html("0");
$("#lblLessThan65Female").html("0");
$("#lblBetween65and75Male").html("0");
$("#lblBetween65and75Female").html("0");
$("#lblBetween76and84Male").html("0");
$("#lblBetween76and84Female").html("0");
$("#lblGreaterThan84Male").html("0");
$("#lblGreaterThan84Female").html("0");

//Patient Census donut graph
var drop = null;
var add = null;
var deces = null;
// var assign = null;

// Create the chart
Highcharts.setOptions({
colors: ['#63c8d4', '#f55c4e', '#504d48', '#b3b3b1']
});
chart = new Highcharts.Chart({
chart: {
renderTo: 'traditional_assignment',
type: 'pie'
},
title: {
text: ''
},
plotOptions: {
pie: {
allowPointSelect: true,
cursor: 'pointer',
dataLabels: {
enabled: true,
color: '#000000',
connectorColor: '#000000',
formatter: function () {
return null;
},
distance: -10,
color: 'white'
}
},
series: {
states: {
hover: {
enabled: true,
halo: {
size: 0
}
}
}
}
},
tooltip: {
formatter: function () {
return '<b>' + this.point.name + '</b>: ' + this.y;
}
},
legend: {
itemStyle: {
width: '70px',
textOverflow: "ellipsis",
overflow: "hidden",
whiteSpace: "nowrap",
fontWeight: 'normal',
fontSize: '10',
fontfamily: 'Roboto-Regular'
},
enabled: true,
layout: 'vertical',
align: 'right',
verticalAlign: 'middle',
symbolRadius: 0,
labelFormatter: function () {
return this.name + ' ';
}
},
credits: { enabled: false },
series: [{
name: 'Browsers',
data: [["Dropped", drop], ["Added", add], ["Deceased", deces]],
size: '130%',
innerSize: '50%',
showInLegend: true,
point: {
events: {
legendItemClick: function () {
return false; // <== returning false will cancel the default action
}
}
}

}]
});
}


},

error: function (xhr) {
$(".loader").fadeOut("slow");
//Show the mmodal popup.
// ValidationMessage("Unable to Process Request. Please Try Again Later.6");

//Age Distribution
$("#lblLessThan65Male").html();
$("#lblLessThan65Female").html();
$("#lblBetween65and75Male").html();
$("#lblBetween65and75Female").html();
$("#lblBetween76and84Male").html();
$("#lblBetween76and84Female").html();
$("#lblGreaterThan84Male").html();
$("#lblGreaterThan84Female").html();

//Patient Census donut graph
var drop = null;
var add = null;
var deces = null;
// var assign = null;

// Create the chart
Highcharts.setOptions({
colors: ['#63c8d4', '#f55c4e', '#504d48', '#b3b3b1']
});
chart = new Highcharts.Chart({
chart: {
renderTo: 'traditional_assignment',
type: 'pie'
},
title: {
text: ''
},
plotOptions: {
pie: {
allowPointSelect: true,
cursor: 'pointer',
dataLabels: {
enabled: true,
color: '#000000',
connectorColor: '#000000',
formatter: function () {
return null;
},
distance: -10,
color: 'white'
}
},
series: {
states: {
hover: {
enabled: true,
halo: {
size: 0
}
}
}
}
},
tooltip: {
formatter: function () {
return '<b>' + this.point.name + '</b>: ' + this.y;
}
},
legend: {
itemStyle: {
width: '70px',
textOverflow: "ellipsis",
overflow: "hidden",
whiteSpace: "nowrap",
fontWeight: 'normal',
fontSize: '10',
fontfamily: 'Roboto-Regular'
},
enabled: true,
layout: 'vertical',
align: 'right',
verticalAlign: 'middle',
symbolRadius: 0,
labelFormatter: function () {
return this.name + ' ';
}
},
credits: { enabled: false },
series: [{
name: 'Browsers',
data: [["Dropped", drop], ["Added", add], ["Deceased", deces]],
size: '130%',
innerSize: '50%',
showInLegend: true,
point: {
events: {
legendItemClick: function () {
return false; // <== returning false will cancel the default action
}
}
}

}]
});

}
});
}

$('.radio_date_click_benchmark').click(function () {

    var radio_id = $(this).prev('input[type=radio]').attr('id');
    if (radio_id == "Monthly") {
        $('#benchmark_Quarterly').css("display", "none");
        $('#benchmark').css("display", "block");

    } else if (radio_id == "Quarterly") {
        $('#benchmark').css("display", "none");
        $('#benchmark_Quarterly').css("display", "block");
    }
});

function GetBenchmarkReportDetails(practiceId, physicianId, RegionId, Pretyear, lasstyear, cstomfrommonth, cstomTomonth, isAssignable) {
    debugger;
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetBenchmarkReportDetails',
        data: JSON.stringify({
            PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Fromyear: Pretyear, Toyear: lasstyear, Frommonth: cstomfrommonth, Tomonth: cstomTomonth, IsAssignable: isAssignable
        }),
        dataType: "json",
        language: {
            search: "",
            sZeroRecords: "No data available",

        },
        contentType: 'application/json; charset=utf-8',
        async: false,
        processData: false,
        cache: false,

        success: function (data) {
            if (data.benchmark[13].Value == 0) {
                data.benchmark[13].Value = null;
            }
            var OrgType = localStorage.getItem('GlobalOrganizationType');
            //var lst = data.Graph;
            document.getElementById('acovalue').innerHTML = "ACO: $" + data.benchmark[12].Value;
            var dynamicColumns = [];

            if (OrgType == "ACO")
            {
                debugger;
                dynamicColumns.push(
                    {
                        color: '#FF0000',
                        width: 3,
                        value: lst[12].Value,
                        tooltipText: 'CMS PMPM',
                        events: {
                            mouseover: function (e) {
                                displayTooltip(this.options.tooltipText, e.clientX, e.clientY, this.options.value);
                            },
                            mouseout: hideTooltip
                        },
                        id: 'plotline-1'
                    })
                dynamicColumns.push(
                    {
                        color: 'red',
                        dashStyle: 'shortdash',
                        width: 2,
                        value: (lst[12].Value * 90) / 100,
                        tooltipText: 'CMS PMPM - 10%',
                        events: {
                            mouseover: function (e) {
                                displayTooltip(this.options.tooltipText, e.clientX, e.clientY, this.options.value);
                            },
                            mouseout: hideTooltip
                        },
                        id: 'plotline-2'
                    })
                buildBenchmarkGraph(dynamicColumns, data.benchmark)
                $('#tooltiptext').show();

                $('#benchmarkLabel').show();
            }
            else {
                buildBenchmarkGraph(dynamicColumns, data.benchmark)
                $('#tooltiptext').hide();
                $('#benchmarkLabel').hide()
            }

        }

    });

}

function buildBenchmarkGraph(dynamicColumns, lst) {
    var benchmarkChart = new Highcharts.Chart({
        chart: {
            type: 'column',
            renderTo: 'benchmark'
        },
        title: {
            text: ''
        },

        xAxis: {
            title:
            {
                text: 'Month',
                style:
                {
                    color: '#c0c0c0',
                }
            },

            categories: [lst[0].Item, lst[1].Item, lst[2].Item, lst[3].Item, lst[4].Item, lst[5].Item, lst[6].Item, lst[7].Item, lst[8].Item, lst[9].Item, lst[10].Item, lst[11].Item, lst[12].Item]
        },
        yAxis: {
            min: 0,
            max: 1400,
            tickInterval: 467,
            labels: {
                format: '{value}'
            },
            title:
            {
                text: 'Expenditure/Beneficiaries',
                style:
                {
                    color: '#c0c0c0',
                }
            },

            plotLines: dynamicColumns
        },
        tooltip: {
            formatter: function () {
                return this.x + '<b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',') + '</b>';
            }
        },
        credits: { enabled: false },
        series: [{
            color: '#EDA74F',
            type: 'column',
            data: [lst[0].Value, lst[1].Value, lst[2].Value, lst[3].Value, lst[4].Value, lst[5].Value, lst[6].Value, lst[7].Value, lst[8].Value, lst[9].Value, lst[10].Value, lst[11].Value],
            showInLegend: false
        },

        ]

    });
}

//Reload Report Page After Practice/Physician Selection
function ReloadReports(practiceId, physicianId, RegionId, Prtyear, ltyear, frmmonth, Tomoonth, isAssignable) {


    $.ajax({
        type: "POST",
        url: serverRoot + "/Insights/Insights/ReloadReports",
        data: JSON.stringify({ PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Fromyear: Prtyear, Toyear: ltyear, Frommonth: frmmonth, Tomonth: Tomoonth, IsAssignable: isAssignable }),
        dataType: "json",
        contentType: 'application/json; charset=utf-8',
        async: false,
        processData: false,
        cache: false,
        success: function (response) {
            debugger;
            if (response != undefined) {

                $('.testLI').after().html("");
                $('.expdtur-list').hide();

                $("#InPatient").text(response.claimsdetails.InPatientString)
                //$("#totalcoststring").text('$' + response.claimsdetails.TotalCost.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                $("#totalcoststring").text(response.claimsdetails.TotalCostString)
                $("#beneficiary").text(response.claimsdetails.BeneficiariesCount)
                $("#pmpmstring").text(response.claimsdetails.PMPMString)
                $("#pyf").text(response.claimsdetails.PYF)
                $("#snfstring").text(response.claimsdetails.SNFString)
                $("#hhastring").text(response.claimsdetails.HHAString)
                //$("#hospicestring").text(response.claimsdetails.HospiceString)
                if (response.claimsdetails.Hospice != null)
                    $("#hospicestring").text('$' + response.claimsdetails.Hospice.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                else
                    $("#hospicestring").text('N/A');

                $("#hospicestring").text('$' + response.claimsdetails.Hospice.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                $("#dmestring").text(response.claimsdetails.DMEString)

                $("#outPatient").text(response.claimsdetails.OutPatientString)
            
                $("#Pharmacy").text(response.claimsdetails.PharmacyString)
                $("#estimateprice").text(response.claimsdetails.EstimatedSavingString)
                if (response.claimsdetails.EstimatedSavingString < "0") {
                    $("#estimateprice").css("color", "#ff0000");
                }
                else {
                    $("#estimateprice").css("color", "#70ad47");
                }

                var extra;


                if (practiceId == null && physicianId == null) {
                    extra = 0;
                }
                else {
                    extra = 0;
                }
                if (response.highRiskPatients.COPDCount == 0) {
                    $("#lblCOPD").text(response.highRiskPatients.COPDCount)
                }
                else {
                    $ ("#lblCOPD").text(response.highRiskPatients.COPDCount + extra)
                }
                if (response.highRiskPatients.DMCount == 0) {
                    $("#lblDM").text(response.highRiskPatients.DMCount)
                }
                else {
                    $("#lblDM").text(response.highRiskPatients.DMCount + extra)
                }
                if (response.highRiskPatients.CADCount == 0) {
                    $("#lblCAD").text(response.highRiskPatients.CADCount)
                }
                else {
                    $("#lblCAD").text(response.highRiskPatients.CADCount + extra)
                }
                if (response.highRiskPatients.IVDCount == 0) {
                    $("#lblIVD").text(response.highRiskPatients.IVDCount)
                }
                else {
                    $("#lblIVD").text(response.highRiskPatients.IVDCount + extra)
                }
                if (response.highRiskPatients.CHFCount == 0) {
                    $("#lblCHF").text(response.highRiskPatients.CHFCount)
                }
                else {
                    $("#lblCHF").text(response.highRiskPatients.CHFCount + extra)
                }
                if (response.highRiskPatients.HTNCount == 0) {
                    $("#lblHTN").text(response.highRiskPatients.HTNCount)
                }
                else {
                    $("#lblHTN").text(response.highRiskPatients.HTNCount + extra)
                }


                var top10per = response.top10percentcost;
                if (top10per == null) {
                    $('.min-second-digit').text();
                }
                else {
                    $('.min-second-digit').text(response.top10percentcost);
                }


                //$("#highriskroot").text(response.claimsdetails.HighRiskRoot)


                var topexp = response.TopExpenditure;
                $('.expdtur-list, .min-digit').hide();
                //$('.aftTopExp').show();

                if (topexp != null) {
                    for (var i = 0; i < topexp.length; i++) {
                        //$('.testLI').append('<li><a href="#" data-toggle="modal" data-keyboard = "false" data-title =' + response.TopExpenditure[i].PhysicianId + '  data-claimsphysician='+ response.TopExpenditure[i].ClaimsPhysicianId +' data-target = "#ModalTopExpenditureDetails" data-backdrop = "static">' + response.TopExpenditure[i].PhysicianLastName + ',' + response.TopExpenditure[i].PhysicianFirstName + '</a></li>');
                        $('.testLI').append('<li><a href="#" data-toggle="modal" data-keyboard = "false" data-title =' + response.TopExpenditure[i].PhysicianId + '  data-claimsphysician=' + response.TopExpenditure[i].ClaimsPhysicianId + 'data-PhysicianLastName=' + response.TopExpenditure[i].PhysicianLastName + ' data-target = "#ModalTopExpenditureDetails" data-backdrop = "static">' + response.TopExpenditure[i].PhysicianLastName + '</a></li>');
                    }
                }

                jQuery('#TopDiagnosislist div').html('');
                var Topdiagnosis = response.topdiagnosislist;
                var DisplayName;
                for (var i = 0; i < Topdiagnosis.length; i++) {
                    DisplayName = response.topdiagnosislist[i].DiagnosisName;
                    if (response.topdiagnosislist[i].DiagnosisName == "Chronic Kidney Disease") {
                        DisplayName = response.topdiagnosislist[i].DiagnosisName;
                        response.topdiagnosislist[i].DiagnosisName = "Chronic_Kidney_Disease";
                    }
                    if (response.topdiagnosislist[i].DiagnosisName == "Rheumatoid Arthritis/ Osteoarthritis") {
                        DisplayName = response.topdiagnosislist[i].DiagnosisName;
                        response.topdiagnosislist[i].DiagnosisName = "Rheumatoid_Arthritis/_Osteoarthritis";
                    }

                    $('#TopDiagnosislist').append("<div><img src='" + serverRoot + "/Images/" + response.topdiagnosislist[i].ImageName + "' onclick=ClinicalDetailsPoup(\"" + response.topdiagnosislist[i].DiagnosisName + "\",'Diagnosis') width='60' height='42' /><p style='word-wrap: break-word;'><label>" + DisplayName + "</label></p></div>");

                    //$('#TopDiagnosislist').append("<div><img src='" + serverRoot + "/Images/" + response.topdiagnosislist[i].ImageName + "' onclick='ClinicalDetailsPoup(\"" + response.topdiagnosislist[i].DiagnosisName + "\",'Diagnosis ')' width='60' height='42'/><p style='word-wrap: break-word;'>" + response.topdiagnosislist[i].DiagnosisName + "</p></div>");
                }
            }

        },
        error: function () {
        }
    });
}
//Functions End

function ClaimsHover(ClaimtypeName, e) {
    e.stopPropagation();
    var $tooltip = $('#claimsDetailsTooltip');
    $('.claim_main_tooltip').show();
    if (!$tooltip.is(':visible')) {
        $('.claim_main_tooltip').hide();
        $tooltip.show();
        $tooltip.css('left', parseInt(e.clientX) + 10 + 'px');
        $tooltip.css('top', parseInt(e.clientY) - 20 + 'px');
    }

    switch (ClaimtypeName) {
        case 'INPATIENT':
            $tooltip.text("Inpatient Claims");
            break;
        case 'OUTPATIENT':
            $tooltip.text("Outpatient Claims");
            break;
        case 'DME':
            $tooltip.text("Physician/Supplier/DME Claims");
            break;
        case 'HOSPICE':
            $tooltip.text("Hospice Claims");
            break;
        case 'HHA':
            $tooltip.text("HHA Claims");
            break;
        case 'SNF':
            $tooltip.text("SNF Claims");
            break;
        case 'PHARMACY':
            $tooltip.text("Pharmacy Claims");
            break;
        case 'CLAIMDETAILS':
            $tooltip.text("Click to search Claims based on filters.");
            break;
        default:
            $tooltip.hide();
    }
}

function ClaimsHoverMain(ClaimtypeName, e) {
    var $tooltip = $('#claimsDetailsTooltip');

    if (!$tooltip.is(':visible')) {
        $tooltip.show();
        $tooltip.css('left', parseInt(e.clientX) + 10 + 'px');
        $tooltip.css('top', parseInt(e.clientY) - 20 + 'px');
    }

    switch (ClaimtypeName) {
        case 'MAIN':
            $tooltip.text("Click here to get Cost by claim type Reports");
            break;
        default:
            $tooltip.hide();
    }
}

function ClaimsOutMain(ClaimtypeName, e) {
    $('.claim_main_tooltip').hide();
}

function ClaimshovMain(ClaimtypeName, e) {
    $('.claim_main_tooltip').show();
}

function ClaimsClickMain(e) {
    var redirect = serverRoot + "/Insights/Insights/ClaimDetails";
    window.location = redirect;
}

var lastOpenedCostByClaimType;

function ReportsClaimsDetailsPopup(ClaimtypeName, e) {
    e.stopPropagation();
    lastOpenedCostByClaimType = ClaimtypeName;
    var claimtypes;
    var d = new Date();
    var fromDate;
    var toDate;
    //mm/dd/yyyy format
    if ($("#last_year").is(':checked')) {
        fromDate = 1 + "/" + 1 + "/" + '0000';
        toDate = 12 + "/" + 31 + "/" + '0000';
    }
    else if ($("#year_to_date").is(':checked')) {
        fromDate = moment().startOf('year').format('MM/DD/YYYY');
        toDate = moment().endOf('year').format('MM/DD/YYYY');
    }
    if (isAssignable) {
        practiceId = null;
        RegionId = null;
    }

    switch (ClaimtypeName) {
        case 'INPATIENT':
            claimtypes = new Array("3", "4");
            break;
        case 'OUTPATIENT':
            claimtypes = new Array("6");
            break;
        case 'DME':
            claimtypes = new Array("11", "12", "13", "14");
            break;
        case 'HOSPICE':
            claimtypes = new Array("2");
            break;
        case 'HHA':
            claimtypes = new Array("1");
            break;
        case 'SNF':
            claimtypes = new Array("5", "15");
            break;
        case 'PHARMACY':
            claimtypes = new Array("19");
            break;
    }

    $("#tblReportsClaimsDetails_wrapper").hide();
    $("#ModalDetailsPopup1").find('.modal-title1').text("Claims Details - " + ClaimtypeName)
    $("#ModalDetailsPopup1").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#tblEORDetails_wrapper").hide();
    $("#tblERDetails_wrapper").hide();
    $("#tblERVDetails_wrapper").hide();
    $("#tblAdmissionDetails_wrapper").hide();
    $("#tblReAdmissionDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblSCRDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblHHARankingDetails_wrapper").hide();
    $("#tblHospitalDetails_wrapper").hide();
    $("#tblSNFRankingDetails_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsThird_wrapper").hide();
    $("#tblCCMDetails_wrapper").hide();
    $("#tblQuarterlyRiskReportDetails_wrapper").hide();
    $("#tblClaimsDetails_wrapper").hide();
    $("#tblPatientDetails_wrapper").hide();
    $("#tblPharmacyDetails_wrapper").hide();
    $("#tblLABDetails_wrapper").hide();
    $("#tblMLRDetails_wrapper").hide();
    $("#tblFirst90DaysSpendDetails_wrapper").hide();
    $("#tblservicefundDetails_wrapper").hide();
    $(".loader").show();
    if ($.fn.DataTable.isDataTable('#tblReportsClaimsDetails')) {
        $('#tblReportsClaimsDetails').DataTable().destroy();
    }
    $("#tblawvLifeDetails_wrapper").hide();
    $("#tblpvbrDetails_wrapper").hide();

    var ConditionStatus = "";



    table = $('#tblReportsClaimsDetails').dataTable({
        "dom": 'Bfrltip',
        destroy: true,
        cache: false,
        scrollX: true,
        //scrollY: 600,
        scrollY: false,
        scrollCollapse: true,
        scroller: true,

        "processing": true,
        "serverSide": true,
        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
        pagingType: "simple",
        fixedHeader: true,
        //scrollY: "300px",
        //"scrollX": false,
        "ajax": {
            "type": "POST",
            "url": serverRoot + '/Insights/Insights/ClaimDetailsById_ServerSidePagination',
            "datatype": "json",
            "data": {
                Id: null,
                FromDate: fromDate,
                ToDate: toDate,
                ClaimType: claimtypes,
                PracticeId: practiceId,
                PhysicianId: physicianId,
                regionId: RegionId,
                IsAssignable: isAssignable
            },
            "complete": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            },
        },

        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            }
        },
        initComplete: function () {
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');
            $('.column-btn').click(function () {
                $column_btn_this = $(this)
                colvis_scroll();
            });
            $(document).on('click', '.dt-button-collection .dt-button', function () {


                colvis_inner_button();
            });

            var $searchInput = $('div.dataTables_filter input');

            $searchInput.unbind();

            $searchInput.bind('keyup', function (e) {
                if (this.value.length > 3) {
                    var dtable = $("#tblReportsClaimsDetails").dataTable().api();
                    dtable.search(this.value).draw();
                }
                if (this.value.length == 0) { var dtable = $("#tblReportsClaimsDetails").dataTable().api(); dtable.search("").draw(); }
            });

            //if ((practiceId == "" || practiceId === undefined || practiceId == null) && (RegionId == "" || RegionId == null) && ClaimtypeName == "DME") {
            //    $('.dt-button.buttons-excel.buttons-html5.excel-btn').css("display", "none");
            //} else {
            //    $('.dt-button.buttons-excel.buttons-html5.excel-btn').css("display", "block");
            //}
        },
        aoColumns: [ //Removed all unnecessary columns as stated in bugId:32391 
            { "data": "HCPCSCodeDescription", "title": "HCPCS Code Description", sClass: "hidden" },
            { "data": "ICDCodeDescription", "title": "ICD Code Description", sClass: "hidden" },
            { "data": "HCCCodeDescription", "title": "HCC Code Description", sClass: "hidden" },
            { "data": "HICN", "title": "HICN", sClass: "text-center" },
            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
            { "data": "UniqueClaimId", "title": "Claim ID", sClass: "text-center" },
            { "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center" },
            // { "data": "PatientId", "title": "PatientId", sClass: "text-center" },
            { "data": "DateOfBirth", "title": "Beneficiary DOB", sClass: "text-center" },
            { "data": "PracticeName", "title": "Assigned Practice Name", sClass: "text-center" },
            { "data": "PhysicianName", "title": "Assigned PCP", sClass: "text-center" },
            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
            //{ "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
            { "data": "ServiceCodeType", "title": "Service Code Type", sClass: "text-center" },
            {
                "data": "ClaimPhysicianName", "title": "Claim Physician Name", sClass: "text-center",
                "render": function (data) {
                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }
            },
            //{ "data": "DiagnosisCode", "title": "ICD Code(s)", sClass: "text-center" },
            {
                "data": "DiagnosisCode", "title": "ICD Code(s)", "width": "30%", sClass: "text-center",
                render: function (data, type, full, meta) {
                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                },
            },
            //{ "data": "HCCCode", "title": "HCC Code(s) ", sClass: "text-center" },
            {
                "data": "HCCCode", "title": "HCC Code(s)", "width": "30%", sClass: "text-center",
                render: function (data, type, full, meta) {
                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                },
            },
            //{ "data": "HCPCSCode", "title": "HCPCS Code(s) ", sClass: "text-center" },
            {
                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                render: function (data, type, full, meta) {
                    if (data != null && data > 0) {
                        return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                    else {
                        return 'N/A';
                    }

                }
            },
            { "data": "Cost", "title": "Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
            { "data": "FacilityAddress", "title": "Facility Address", sClass: "text-center" },
            { "data": "FacilityPhoneNumber", "title": "Facility Phone Number", sClass: "text-center" },
            { "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center" },
            { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
            //{ "data": "POS", "title": "POS", sClass: "text-center" },
            {
                "data": "POS", "title": "POS", sClass: "text-center",
                "render": function (data) {
                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }

            },
            {
                "data": "ClaimsPhysicianSpeciality", "title": "Claims Physician Speciality", sClass: "text-center",
                "render": function (data) {
                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }

            },
        ],

        buttons: [

            {
                extend: 'excel',
                filename: 'Data export-' + ClaimtypeName,
                exportOptions: {
                    columns: ':visible'
                },
                className: 'excel-btn',
                titleAttr: 'Export',
                action: function (e, dt, node, config) {

                    //newExportToExcel();
                    //ExportToExcel('ClaimDetails', 'tblReportsClaimsDetails', '', '', toDate, fromDate, claimtypes, ClaimtypeName);
                    ExportToExcelClaimSearch('ClaimDetails', 'tblReportsClaimsDetails', '', '', toDate, fromDate, claimtypes, ClaimtypeName);
                }
            },

            {
                extend: 'colvis',
                "columns": '3, 4, 5, 6, 7, 8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'column-btn',
                titleAttr: 'More'
            },
        ],
        columnDefs: [{
            targets: [3, 19, 20, 21, 22, 23, 24],
            visible: false
        }
        ],
    });
    oTable = table.fnSettings();




}

function newExportToExcel() {
    var ClaimtypeName = lastOpenedCostByClaimType;
    var claimtypes;
    var d = new Date();
    var fromDate;
    var toDate;

    if ($("#last_year").is(':checked')) {
        fromDate = 1 + "/" + 1 + "/" + '0000';
        toDate = 12 + "/" + 31 + "/" + '0000';
    }
    else if ($("#year_to_date").is(':checked')) {
        fromDate = 1 + "/" + 1 + "/" + '0001';
        toDate = 12 + "/" + 31 + "/" + '0001';
    }

    if (isAssignable) {
        practiceId = null;
        RegionId = null;
    }

    switch (ClaimtypeName) {
        case 'INPATIENT':
            claimtypes = new Array("3", "4");
            break;
        case 'OUTPATIENT':
            claimtypes = new Array("6");
            break;
        case 'DME':
            claimtypes = new Array("11", "12", "13", "14");
            break;
        case 'HOSPICE':
            claimtypes = new Array("2");
            break;
        case 'HHA':
            claimtypes = new Array("1");
            break;
        case 'SNF':
            claimtypes = new Array("5", "15");
            break;
        case 'PHARMACY':
            claimtypes = new Array("19");
            break;
    }



    var url = serverRoot + '/Insights/Insights/ClaimDetailsById_FullExcelExport'
    url += '?Id=' + '';
    url += '&FromDate=' + fromDate;
    url += '&ToDate=' + toDate;
    url += '&ClaimType=' + claimtypes;
    url += '&PracticeId=' + practiceId;
    url += '&PhysicianId=' + physicianId;
    url += '&regionId=' + RegionId;
    url += '&IsAssignable=' + isAssignable;
    window.open(encodeURI(url));
}


//high charts end
function closePopUp() {
    $('.modal-close').click();
    $("#careplanclose").click();

}
function closeDetailsPopUp() {
    $('.second-modal-close').click();
}


function showPatientDetails(Id, PatientId, ConditionCode, PracticeId, PhysicianId, Year, PatientName, Cost, MBI) {
    debugger;
    //  $("#ModalDetailsPopup1").find('.modal-title1').text("Patient Details");
    var breadcrumLink = (ConditionCode == null || ConditionCode === "undefined" || ConditionCode === '') ? '' : ConditionCode + " -> ";
    var CostLink = (Cost == null || Cost === "undefined" || Cost === '') ? '' : Cost;
    var rsccost = CostLink;
    rsccost = rsccost.replace(/([,$€])+/g, '');
    CostLink = Math.round(rsccost);
    CostLink = Number(CostLink).toLocaleString('en');
    $(".modal .modal-title1").css("color", "white");
    $(".modal .modal-title1").html(
        PatientName + "(" + MBI + ")" + ":" + "$" + CostLink);
    $("#ModalDetailsPopup1").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });

    $("#tblEORDetails_wrapper").hide();
    $("#tblERDetails_wrapper").hide();
    $("#tblERVDetails_wrapper").hide();
    $("#tblAdmissionDetails_wrapper").hide();
    $("#tblReAdmissionDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblSCRDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblHHARankingDetails_wrapper").hide();
    $("#tblHospitalDetails_wrapper").hide();
    $("#tblSNFRankingDetails_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsThird_wrapper").hide();
    $("#tblCCMDetails_wrapper").hide();
    $("#tblQuarterlyRiskReportDetails_wrapper").hide();
    $("#tblClaimsDetails_wrapper").hide();
    $("#tblPatientDetails_wrapper").hide();
    $("#tblReportsClaimsDetails_wrapper").hide();
    $("#tblPharmacyDetails_wrapper").hide();
    $("#tblLABDetails_wrapper").hide();
    $("#tblservicefundDetails_wrapper").hide();
    $("#tblservicefundDetailsSecond_wrapper").hide();
    $("#tblservicefundDetailsSecondSNF_wrapper").hide();
    $("#tblservicefunDetailsThird_wrapper").hide();
    $("#tblservicefunDetailsFourth_wrapper").hide();
    $("#tblservicefundDetailsINST_wrapper").hide();
    
    $(".modal .modal-title1").css("color", "white");
    $(".loader").show();

    var detalis = {
        PracticeId: PracticeId,
        PhysicianId: PhysicianId,
        regionId: RegionId,
        PatientId: PatientId,
        ConditionCode: ConditionCode,
        Year: Year,
        Id: Id
    };
    export_datayear = Year
    if ($.fn.DataTable.isDataTable('#tblPatientDetails')) {

        $('#tblPatientDetails').DataTable().destroy();
    }

    var table = $('#tblPatientDetails').dataTable({
        "dom": 'Bfrltip',
        "processing": true,
        "serverSide": true,
        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
        pagingType: "simple",
        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            },

        },
        "scrollX": true,
        fixedHeader: true,
        // scrollY: "180px",
        scrollY: false,
        "ajax": {
            "type": "POST",
            "url": serverRoot + '/Insights/Insights/GetPatientDetails',
            "data": detalis,
            "dataSrc": function (data) {

                return data.TopExpenditurePatients;

            },
            "complete": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            },
        },

        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            }
        },
        initComplete: function () {
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');

         
            $('.column-btn').click(function () {

                $column_btn_this = $(this)
                colvis_scroll();
            });
            $(document).on('click', '.dt-button-collection .dt-button', function () {
                colvis_inner_button();
            });
            var $searchInput = $('div.dataTables_filter input');
            $searchInput.unbind();
            $searchInput.bind('keyup', function (e) {
                if (this.value.length > 3) {
                    var dtable = $('#tblPatientDetails').dataTable().api();
                    dtable.search(this.value).draw();
                }

                if (this.value.length == 0) {
                    var dtable = $('#tblPatientDetails').dataTable().api();
                    dtable.search("").draw();
                }

            });



        },
        order: [[9, "desc"]],
        aoColumns: [
            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
            { "data": "ClaimId", "title": "Claim ID", sClass: "text-center" },
            { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
            { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
            { "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center" },
            {
                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                "render": function (data, type, full, meta) {
                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                }

            },
            {
                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                "render": function (data) {
                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }

            },



            {
                "data": "CostString", "title": "Claim Cost", sClass: "text-center", sType: "currency",

            },
            {
                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                render: function (data, type, full, meta) {
                    if (data != null && data > 0) {
                        return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                    else {
                        return 'N/A';
                    }
                },

            },
            {
                "data": "FacilityName", "title": "Facility Name/NPI", sClass: "text-center"//,
                //"render": function (data) {

                //    if (data !="") {

                //        return + data;
                //    }
                //    else {
                //        return 'N/A';
                //    }
                //}
            },
            {
                "data": "PlaceOfServiceCodes", "title": "Place Of Service Code", sClass: "text-center",
                "render": function (data) {

                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }
            },
            {
                "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center",
                "render": function (data) {

                    if (data != null && data != '') {

                        return  data;
                    }
                    else {
                        return 'N/A';
                    }
                }
            },
            {
                "data": "ClaimType", "title": "Claim Type", sClass: "text-center"//,
                //"render": function (data) {

                //    if (data != null && data!='') {

                //        return + data;
                //    }
                //    else {
                //        return 'N/A';
                //    }
                //}
            },
            {
                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                "render": function (data) {
                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }
            },
            {
                "data": "ClaimPhysicianSpeciality", "title": "Claims Physician Specialty", sClass: "text-center",
                "render": function (data) {

                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }
            },
            {
                "data": " ", "title": "Claim Associated to Diagnosis", sClass: "text-center",
                "render": function (data) {
                    if (data != null && data > 0) {

                        return + data;
                    }
                    else {
                        return 'N/A';
                    }
                }
            },


        ],

        buttons: [
            {
                extend: 'excel',
                filename: 'Data export-' + 'PatientDetails',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'excel-btn',
                titleAttr: 'Export',
                action: function (e, dt, node, config) {
                    ExportToExcel('PatientDetails', 'tblPatientDetails', ConditionCode, export_datayear, '', '', '', '', PhysicianId, PracticeId, Id, PatientId, PatientName);
                }
            },
            {
                extend: 'colvis',
                "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,13,14,15,16',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'column-btn',
                titleAttr: 'More'
            },
        ],
    });
    oTable = table.fnSettings();

}
function showDetailsPopupNew(Id, FARName, PatientName, Rtype) {
    var currentYear = 1;
    //$('#FARyear_on_year').prop('checked', true);   
    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
        //$('#FARlast_year').prop('checked', true);
    }
    var Secpopup = '';
    $("#ModalDetailsPopup1").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });


    $("#tblEORDetails_wrapper").hide();
    $("#tblERDetails_wrapper").hide();
    $("#tblERVDetails_wrapper").hide();
    $("#tblAdmissionDetails_wrapper").hide();
    $("#tblReAdmissionDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblSCRDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblHHARankingDetails_wrapper").hide();
    $("#tblHospitalDetails_wrapper").hide();
    $("#tblSNFRankingDetails_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsThird_wrapper").hide();
    $("#tblCCMDetails_wrapper").hide();
    $("#tblQuarterlyRiskReportDetails_wrapper").hide();
    $("#tblClaimsDetails_wrapper").hide();
    $("#tblPatientDetails_wrapper").hide();
    $("#tblPharmacyDetails_wrapper").hide();
    $("#tblLABDetails_wrapper").hide();
    $("#tblfninetydetail_wrapper").hide();
    $("#tblInstitutionaldetail_wrapper").hide();
    $("#tblProfessionaldetail_wrapper").hide();
    $("#tblPharmacydetail_wrapper").hide();
    $("#tblawvLifeDetails_wrapper").hide();
    $("#tblpvbrDetails_wrapper").hide();


    $(".modal .modal-title1").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
        + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + Rtype + "Report </a>"
        + " ->   Details");


    if (FARName == "MLR") {

        setTimeout(function () {
            if ($.fn.DataTable.isDataTable('#tblMLRDetails')) {
                $('#tblMLRDetails').DataTable().destroy();
            }

            //var tblMLRDetailsval = [
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },
            //    {
            //        "ClaimID": "123456",
            //        "ClaimFromDate": "01/01/2020",
            //        "ClaimThruDate": "N/A",
            //        "ClaimType": "N/A",
            //        "ClaimFacilityName": "N/A",
            //        "PlaceofServiceCode": "N/A",
            //        "ClaimPhysician": "N/A",
            //        "ClaimPhysicianSpecialty": "N/A",
            //        "ClaimCost": "$15.69",
            //        "ICDCode": "N/A",
            //        "HCCCode": "N/A",
            //        "DRGCode": "N/A",
            //        "HCPCSCPTCode": "N/A",
            //        "BETOS": "N/A",
            //    },

            //]
            //$('#tblMLRDetails').dataTable({
            //    "dom": 'Bfrltip',
            //    "processing": true,
            //    "serverSide": false,
            //    "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            //    pagingType: "simple",
            //    "data": tblMLRDetailsval,
            //    "language": {
            //        "search": "",
            //        paginate: {
            //            next: '<i class="glyphicon glyphicon-triangle-right"></i>',
            //            previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            //        },
            //    },
            //    scrollX: true,
            //    fixedHeader: true,
            //    //scrollY: "350px",
            //    scrollY: false,

            //    initComplete: function () {
            //        setTimeout(function () {
            //            $($.fn.dataTable.tables(true)).DataTable().columns.adjust()
            //        }, 500)
            //    },
            //    aoColumns: [
            //        { "data": "ClaimID", "title": "Claim ID", sClass: "text-center" },
            //        { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
            //        { "data": "ClaimThruDate", "title": "Patient Claim Thru Date", sClass: "text-center" },
            //        { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
            //        { "data": "ClaimFacilityName", "title": "Claim Facility Name", sClass: "text-center" },
            //        { "data": "PlaceofServiceCode", "title": "Place of Service Code", sClass: "text-center" },
            //        { "data": "ClaimPhysician", "title": "Claim Physician", sClass: "text-center" },
            //        { "data": "ClaimPhysicianSpecialty", "title": "Claim Physician Specialty", sClass: "text-center" },
            //        { "data": "ClaimCost", "title": "Claim Cost", sClass: "text-center" },
            //        { "data": "ICDCode", "title": "ICD Code(s)", sClass: "text-center" },
            //        { "data": "HCCCode", "title": "HCC Code(s)", sClass: "text-center" },
            //        { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
            //        { "data": "HCPCSCPTCode", "title": "HCPCS/CPT Code(s)", sClass: "text-center" },
            //        { "data": "BETOS", "title": "BETOS", sClass: "text-center" },
            //    ],

            //    buttons: [
            //        {
            //            extend: 'csv',
            //            filename: 'Data export',
            //            exportOptions: {
            //                columns: ':visible'
            //            },
            //            className: 'excel-btn',
            //            titleAttr: 'Export',

            //        },
            //        {
            //            extend: 'colvis',
            //            exportOptions: {
            //                columns: ':visible'
            //            },
            //            className: 'column-btn',
            //            titleAttr: 'More'
            //        },
            //    ]

            //});

        }, 500);


    } else if (FARName == "FNinety") {

        setTimeout(function () {
            if ($.fn.DataTable.isDataTable('#tblfninetydetail')) {
                $('#tblfninetydetail').DataTable().destroy();
            }

            var tblfninetydetailval = [
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
                {
                    "ClaimID": "123456",
                    "ClaimfromDate": "01/01/2020",
                    "ClaimType": "N/A",
                    "ClaimFacilityName": "BALKCOM,",
                    "ClaimPhysician": "N/A",
                    "ICDCode": "823411111",
                    "HCCCode": "9384521235",
                    "DRGCode": "2343234234",
                    "ProcedureCode": "N/A",
                    "ClaimCost": "$15.69",
                },
            ]
            $('#tblfninetydetail').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": false,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "data": tblfninetydetailval,
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,

                initComplete: function () {
                    setTimeout(function () {
                        $($.fn.dataTable.tables(true)).DataTable().columns.adjust()
                    }, 500)
                },
                aoColumns: [
                    { "data": "ClaimID", "title": "Claim ID", sClass: "text-center" },
                    { "data": "ClaimfromDate", "title": "Claim from Date", sClass: "text-center" },
                    { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                    { "data": "ClaimFacilityName", "title": "Claim Facility Name", sClass: "text-center" },
                    { "data": "ClaimPhysician", "title": "Claim Physician", sClass: "text-center" },
                    { "data": "ICDCode", "title": "ICD Code(s)", sClass: "text-center" },
                    { "data": "HCCCode", "title": "HCC Code(s)", sClass: "text-center" },
                    { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
                    { "data": "ProcedureCode", "title": "Procedure Code", sClass: "text-center" },
                    { "data": "ClaimCost", "title": "Claim Cost", sClass: "text-center" },

                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',

                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });

        }, 500);


    }

    else if (FARName == "Institutional") {

        setTimeout(function () {
            if ($.fn.DataTable.isDataTable('#tblInstitutionaldetail')) {
                $('#tblInstitutionaldetail').DataTable().destroy();
            }

            var tblInstitutionaldetailval = [
                {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                }, {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                }, {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                }, {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                }, {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                }, {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                }, {
                    "ClaimType": "Hospice",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPer1000": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                    "Period": "1",
                },
            ]
            $('#tblInstitutionaldetail').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": false,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "data": tblInstitutionaldetailval,
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                initComplete: function () {
                    setTimeout(function () {
                        $($.fn.dataTable.tables(true)).DataTable().columns.adjust()
                    }, 500)
                },
                aoColumns: [
                    { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                    { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                    { "data": "TotalEncounters", "title": "Total Encounters", sClass: "text-center" },
                    { "data": "TotalCost", "title": "Total Cost", sClass: "text-center" },
                    { "data": "EncountersPer1000", "title": "Encounters Per 1,000", sClass: "text-center" },
                    { "data": "CostPatient", "title": "Cost/Patient", sClass: "text-center" },
                    { "data": "AvgCostEncounter", "title": "Avg Cost/Encounter", sClass: "text-center" },
                    { "data": "EncountersPatient", "title": "Encounters/Patient", sClass: "text-center" },
                    { "data": "Period", "title": "Period", sClass: "text-center" },

                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',

                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });

        }, 500);


    }
    else if (FARName == "Professional") {

        setTimeout(function () {
            if ($.fn.DataTable.isDataTable('#tblProfessionaldetail')) {
                $('#tblProfessionaldetail').DataTable().destroy();
            }

            var tblProfessionaldetailval = [
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                }, {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
            ]
            $('#tblProfessionaldetail').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": false,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "data": tblProfessionaldetailval,
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                initComplete: function () {
                    setTimeout(function () {
                        $($.fn.dataTable.tables(true)).DataTable().columns.adjust()
                    }, 500)
                },
                aoColumns: [
                    { "data": "Specialty", "title": "Specialty", sClass: "text-center" },
                    { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                    { "data": "TotalEncounters", "title": "Total Encounters", sClass: "text-center" },
                    { "data": "TotalCost", "title": "Total Cost", sClass: "text-center" },
                    { "data": "EncountersPMPY", "title": "Encounters PMPY", sClass: "text-center" },
                    { "data": "CostPatient", "title": "Cost/Patient", sClass: "text-center" },
                    { "data": "AvgCostEncounter", "title": "Avg Cost/Encounter", sClass: "text-center" },
                    { "data": "EncountersPatient", "title": "Encounters/Patient", sClass: "text-center" },

                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',

                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });

        }, 500);


    }
    else if (FARName == "Pharmacy") {

        setTimeout(function () {
            if ($.fn.DataTable.isDataTable('#tblPharmacydetail')) {
                $('#tblPharmacydetail').DataTable().destroy();
            }

            var tblPharmacydetailval = [
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                }, {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
                {
                    "Specialty": "ADVANCED PRACTICE MIDWIFE",
                    "TotalPatients": "3898",
                    "TotalEncounters": "4008",
                    "TotalCost": "$584,358.10",
                    "EncountersPMPY": "117.943",
                    "CostPatient": "$5,251.24",
                    "AvgCostEncounter": "$5,107.12",
                    "EncountersPatient": "1.028	",
                },
            ]
            $('#tblPharmacydetail').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": false,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                "data": tblPharmacydetailval,
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },
                },
                scrollX: true,
                fixedHeader: true,
                //scrollY: "350px",
                scrollY: false,
                initComplete: function () {
                    setTimeout(function () {
                        $($.fn.dataTable.tables(true)).DataTable().columns.adjust()
                    }, 500)
                },
                aoColumns: [
                    { "data": "Specialty", "title": "Specialty", sClass: "text-center" },
                    { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                    { "data": "TotalEncounters", "title": "Total Encounters", sClass: "text-center" },
                    { "data": "TotalCost", "title": "Total Cost", sClass: "text-center" },
                    { "data": "EncountersPMPY", "title": "Encounters PMPY", sClass: "text-center" },
                    { "data": "CostPatient", "title": "Cost/Patient", sClass: "text-center" },
                    { "data": "AvgCostEncounter", "title": "Avg Cost/Encounter", sClass: "text-center" },
                    { "data": "EncountersPatient", "title": "Encounters/Patient", sClass: "text-center" },

                ],

                buttons: [
                    {
                        extend: 'csv',
                        filename: 'Data export',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',

                    },
                    {
                        extend: 'colvis',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn',
                        titleAttr: 'More'
                    },
                ]

            });

        }, 500);


    }

}

function showDetailsPopup(Id, FARName, PatientName, SpecialityType, PracticeId, PhysicianId, PatientId, FacilityId, FacilityName, ClaimPhysicianId, GridFilter, UASType, UASFilter, Month, MBI, Cost) {
    debugger;
    var currentYear = 1;
    var RowPhysicianid = ClaimPhysicianId;
    //$('#FARyear_on_year').prop('checked', true);   
    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
        //$('#FARlast_year').prop('checked', true);
    }
    var Secpopup = '';
    $("#ModalDetailsPopup1").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#tblEORDetails_wrapper").hide();
    $("#tblERDetails_wrapper").hide();
    $("#tblERVDetails_wrapper").hide();
    $("#tblAdmissionDetails_wrapper").hide();
    $("#tblReAdmissionDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblSCRDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblHHARankingDetails_wrapper").hide();
    $("#tblHospitalDetails_wrapper").hide();
    $("#tblSNFRankingDetails_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsThird_wrapper").hide();
    $("#tblCCMDetails_wrapper").hide();
    $("#tblQuarterlyRiskReportDetails_wrapper").hide();
    $("#tblClaimsDetails_wrapper").hide();
    $("#tblPatientDetails_wrapper").hide();
    $("#tblPharmacyDetails_wrapper").hide();
    //$("#tblLABDetails_wrapper").hide();
    $("#tblMLRDetails_wrapper").hide();
    $("#tblFirst90DaysSpendDetails_wrapper").hide();
    $("#tblInstitutionaldetail_wrapper").hide();
    $("#tblProfessionaldetail_wrapper").hide();
    $("#tblPharmacydetail_wrapper").hide();
    $("#tblutilizationAdvanceSummaryReadmitDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryAdmitDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryAWVDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryERDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummarySNFDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummarySNFReadmitDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryHospiceDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryOutpatientDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryOBSDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryPracticeMonthDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryPhysicianMonthDetails_wrapper").hide();
    $("#tblservicefundDetails_wrapper").hide();
    $("#tblservicefundDetailsPRA_wrapper").hide();
    $("#tblservicefunDetailsThird_wrapper").hide();
    $("#tblservicefunDetailsFourth_wrapper").hide();
    $("#tblservicefundDetailsINST_wrapper").hide();
    $("#tblservicefundDetailsSecond_wrapper").hide();
    $("#tblservicefundDetailsSecondSNF_wrapper").hide();
    $("#tblservicefundDetailsINSTThird_wrapper").hide();
    $("#tblservicefundDetailsINSTFourth_wrapper").hide();
    $("#tblservicefundDetailsphar_wrapper").hide();
    $("#tblSummaryReportDetails_wrapper").hide();
    $("#tblawvLifeDetails_wrapper").hide();
    $("#tblpvbrDetails_wrapper").hide();

    if (FARName == "hospital") {
        $(".modal .modal-title1").css("color", "white");
        // $(".modal .modal-title1").html(detailtitle);
        //$(".modal .modal-title1").html(FacilityName + " Details");
        $(".modal .modal-title1").html(FacilityName + ":$" + Cost);

    }
    else if (FARName == "er" || FARName == "admission" || FARName == "readmission" || FARName == "top100exppatient") {
        $(".modal .modal-title1").css("color", "white");
        $(".modal .modal-title1").html(PatientName + " (" + MBI + "): " + Cost);
    }
    else if (FARName == "hharanking" || FARName == "snfranking") {
        $(".modal .modal-title1").css("color", "white");
        $(".modal .modal-title1").html(FacilityName + ": " + Cost);
    }
    else if (FARName == "scr") {
        $(".modal .modal-title1").css("color", "white");
        $(".modal .modal-title1").html(SpecialityType + ": " + Cost);
    }
 else if (FARName == "AWVL") {
        $(".modal .modal-title1").css("color", "white");
        $(".modal .modal-title1").html(PatientName + ": " + Cost);
    }
    else {
        $(".modal .modal-title1").css("color", "white");
        $(".modal .modal-title1").html(PatientName + " Details");
    }

    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/DetailsPopup',
        data: JSON.stringify({
            Id: Id,
            FARName: FARName,
            practiceId: PracticeId,
            physicianId: PhysicianId,
            regionId: RegionId,
            patientId: PatientId,
            specialityType: SpecialityType,
            Year: currentYear,
            secpopup: Secpopup,
            RowPhysicianId: RowPhysicianid,
            FacilityId: FacilityId,
            GridFilter: GridFilter,
            UASType: UASType,
            UASFilter: UASFilter,
            Month: Month
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {

            if (data.ReportType == "eor") {
                setTimeout(function () {
                    $('#tblEORDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        pagingType: "simple",
                        data: data.ReportDetails,
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "UniqueClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDate", "title": "Claim Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "ServiceCodeType", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "HCPCSCodes", "title": "Procedure Codes", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" }
                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);


            }
            else if (data.ReportType == "er") {
                debugger;
                setTimeout(function () {
                    $('#tblERDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.ReportDetails,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[3, "desc"]],
                        aoColumns: [
                            {
                                "data": "EncounterId", "title": "Encounter ID", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"er\",\"" + PatientName + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['CostString'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['EncounterId'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "AdmissionDate", sClass: "text-center" },
                            { "data": "EncounterDischargeDate", "title": "DischargeDate", sClass: "text-center" },
                            //{ "data": "Avoidable", "title": "Avoidable ERV", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name/NPI", sClass: "text-center" },
                            
                            { "data": "AttendingPhysicianNpi", "title": "Attending Physician NPI", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (full["PhysicianFirstName"] == null) {
                                        return data + ', ' + full["PhysicianFirstName"];
                                    } else {
                                        return '';
                                    }
                                   
                                }
                            },
                            { "data": "CostString", "title": "Total Admission Cost", sClass: "text-center", sType: "currency" },
                            { "data": "CostString", "title": "Part A ER Costs", sClass: "text-center", sType: "currency" },
                            { "data": "CostString", "title": "Part B ER Costs", sClass: "text-center", sType: "currency" },

                            { "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" }

                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '0,1,2,3, 4, 5, 6, 7,8,9',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            //targets: [10, 11, 13, 14, 15,16,17],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "erv") {
                setTimeout(function () {
                    $('#tblERVDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        AutoWidth: true,
                        pagingType: "simple",
                        data: data.ReportDetails,
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDate", "title": "Claim Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [7, 8, 9, 10, 11, 12, 13],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "admission") {
                setTimeout(function () {
                    $('#tblAdmissionDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.ReportDetails,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[3, "desc"]],
                        aoColumns: [
                            {
                                "data": "EncounterId", "title": "Encounter ID", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                   // return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"admission\",\"" + full['PatientLastName'] + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['CostString'] + "\",\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['FacilityName'] + "\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\",\"" + "\" ,\"" + full['EncounterId'] + "\"  );return false'>" + data + "</a>";
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"admission\",\"" + PatientName + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['CostString'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['EncounterId'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "AdmissionDate", sClass: "text-center" },
                            { "data": "EncounterDischargeDate", "title": "DischargeDate", sClass: "text-center" },
                            { "data": "FacilityName", "title": "FacilityName", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Attending Physician NPI", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            { "data": "CostString", "title": "Total Admission Cost", sClass: "text-center", sType: "currency" },

                            { "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" }
                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '0,1,2,3, 4, 5, 6, 7',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            //targets: [10, 11, 13, 14, 15,16,17],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "readmission") {
                setTimeout(function () {
                    $('#tblReAdmissionDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.ReportDetails,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[9, "desc"]],
                        aoColumns: [
                            {
                                "data": "EncounterId", "title": "Encounter ID", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    //return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"readmission\",\"" + full['PatientLastName'] + "\" ,\"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['ERCost'] + "\",\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['ERCost'] + "\" ,\"" + full['FacilityName'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['EncounterId'] + "\"  );return false'>" + data + "</a>";
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\", \"readmission\",\"" + PatientName + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['ERCost'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\",\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['EncounterId'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "AdmissionDate", sClass: "text-center" },
                            { "data": "EncounterDischargeDate", "title": "DischargeDate", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name/NPI", sClass: "text-center" },
                            { "data": "PhysicianNPI", "title": "Attending Physician NPI", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            { "data": "ERCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Admission Cost", sClass: "text-center", sType: "currency" },
                            { "data": "PartAERCostString", "title": "Part A ER Costs", sClass: "hidden", sType: "text-center" },
                            { "data": "PartBERCostString", "title": "Part B ER Costs", sClass: "hidden", sType: "text-center" },
                            { "data": "InpatientFlagStr", "title": "Inpatient Admission Flag", sClass: "text-center", sType: "text-center" },
                            { "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" }
                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '2, 3, 4, 5, 6',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "top100exppatient") {
                setTimeout(function () {
                    $('#tblTop100ExpDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.ReportDetails,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[9, "desc"]],
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "CostString", "title": "Claim cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ClaimDate", "title": "Claim Effective Date", sClass: "text-center", "sType": "date", "bSortable": "true"

                            },
                            {
                                "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center",

                            },
                            {
                                "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center",

                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICDCodes' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCSCode' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCCCodes' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },
                            },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Claims Physician Specialty", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },









                            //{ "data": "ClaimLineNumber", "title": "ClaimLineNumber", sClass: "text-center" }
                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,13,14,15,16,17',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [10, 11, 13, 14, 15],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "scr") {
                //$("#tblSCRDetails").show().siblings("table").hide();
                $("#tblSCRDetails").show();
                setTimeout(function () {
                    $('#tblSCRDetails').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        stateDuration: 60 * 60 * 24,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        order: [[6, "desc"]],
                        aoColumns: [

                            //{ "data": "PracticeName", "title": "Assigned Practice Name", sClass: "hidden" },
                            {
                                "data": "PracticeName", "title": "Assigned Practice Name", "width": "20%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "PhysicianLastName", "title": "Claims Physician Name", sClass: "text-center"

                            },
                            { "data": "NumberOfClaims", "title": "Number Of Claims", sClass: "text-center" },
                            {
                                "data": "NumberOfAssignedBeneficiaries", "title": "Number Of Beneficiaries", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data != null && data.length > 0) {

                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"scr\", \"" + SpecialityType + "\" ,null  ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\" ,null ,null ,\"" + full['PhysicianLastName'] + "\"  ,null,\"" + full['ClaimPhysicianId'] + "\",null ,null ,null ,null,\"scrBenfSecondPopup\",null,\"" + full['PracticeName'] + "\");return false'>" + data + "</a>";
                                    }
                                    else {
                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"scr\", \"" + SpecialityType + "\" ,null  ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\" ,null ,null ,\"" + full['PhysicianLastName'] + "\"  ,null,\"" + full['ClaimPhysicianId'] + "\",null ,null ,null ,null,\"scrBenfSecondPopup\",null,\"" + full['PracticeName'] + "\");return false'>" + data + "</a>";
                                    }
                                }

                            },

                            { "data": "AverageCostPerClaim", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Average Cost Per Claim", sClass: "text-center" },
                            { "data": "AverageCostPerPatient", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Average Cost Per Beneficiary", sClass: "text-center", sType: "currency" },
                            { "data": "Cost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": " Total Cost", sClass: "text-center", sType: "my-currency" },
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "hharanking") {
                setTimeout(function () {
                    $('#tblHHARankingDetails').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                            {
                                "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"hharanking\",\"" + "\" ,\"" + full['PatientLastName'] + "\"  ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\"  ,\"" + full['Id'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + ', ' + full['PatientFirstName'] + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient's DOB", sClass: "text-center", sType: "date" },
                            { "data": "HICN", "title": "HICN", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            { "data": "MRAScore", "title": "HCC Risk Score", sClass: "text-center" },
                            { "data": "Deceased", "title": "Deceased Status", sClass: "text-center" },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number of  Episodes", sClass: "text-center" },
                            { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost of  Episodes", sClass: "text-center" }
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },],
                        columnDefs: [{
                            targets: [3],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "hospital") {
                setTimeout(function () {
                    $('#tblHospitalDetails').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "MBI", "title": "Medicare ID", sClass: "text-center" },
                            {
                                "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"hospital\",\"" + "\" ,\"" + full['PatientLastName'] + "\"  ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\"  ,\"" + full['Id'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + ', ' + full['PatientFirstName'] + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center", "sType": "date", "bSortable": "true" },
                            { "data": "HICN", "title": "HICN", sClass: "text-center" },
                            { "data": "MRAScore", "title": "HCC Risk score", sClass: "text-center" },
                            { "data": "Deceased", "title": "Deceased Status", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number of Encounters", sClass: "text-center" },
                            { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" }

                            // {
                            // "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                            // "render": function (data, type, full, meta) {
                            // return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"admission\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\"  );return false'>" + data + ', ' + full["PatientFirstName"] + "</a>";
                            // }
                            // },
                            // { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            // { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            // {
                            // "data": "PhysicianLastName", "title": "Assigned Physician",

                            // render: function (data, type, full, meta) {
                            // return "<div class='text-wrap width-200 '>" + data + "</div>";
                            // },
                            // },
                            // //{ "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            // {
                            // "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                            // render: function (data, type, full, meta) {
                            // return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                            // },

                            // },
                            // { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            // {
                            // "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                            // render: function (data, type, full, meta) {
                            // return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                            // },

                            // },
                            // {
                            // "data": "HCPCSCode", "title": "HCPCS Codes", "width": "30%", sClass: "text-center",
                            // render: function (data, type, full, meta) {
                            // return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                            // },

                            // },
                            // {
                            // "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                            // render: function (data, type, full, meta) {
                            // return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                            // }
                            // },
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [3],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "snfranking") {
                setTimeout(function () {
                    $('#tblSNFRankingDetails').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                            {
                                "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"snfranking\",\"" + "\" ,\"" + full['PatientLastName'] + "\"  ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\"  ,\"" + full['Id'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + ', ' + full['PatientFirstName'] + "</a>";
                                }
                            },
                            { "data": "HICN", "title": "HICN", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data != null && data.length > 0) {

                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            { "data": "MRAScore", "title": "HCC Risk Score", sClass: "text-center" },
                            { "data": "Deceased", "title": "Deceased Status", sClass: "text-center" },

                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number of Encounters", sClass: "text-center" },
                            { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost of Encounter", sClass: "text-center" }

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [2],
                            visible: false
                        }
                        ]
                    });
                }, 500);
            }
            else if (data.ReportType == "ccm") {
                setTimeout(function () {
                    $('#tblCCMDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        AutoWidth: true,
                        pagingType: "simple",
                        data: data.ReportDetails,
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDate", "title": "Claim Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {
                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            {
                                "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center",
                                "render": function (data) {
                                    if (data != null) {
                                        var r = /\/Date\(([0-9]+)\)\//i
                                        var matches = data.match(r);
                                        if (matches.length == 2) {

                                            var d = new Date(parseInt(matches[1])),
                                                month = '' + (d.getMonth() + 1),
                                                day = '' + d.getDate(),
                                                year = d.getFullYear();

                                            if (month.length < 2) month = '0' + month;
                                            if (day.length < 2) day = '0' + day;

                                            return [year, month, day].join('-');
                                        }
                                        else {
                                            return data;
                                        }
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [7, 8, 9, 10, 11, 12],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "qualityriskscore") {
                setTimeout(function () {
                    $('#tblQuarterlyRiskReportDetails').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },
                            { "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center" },
                            { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place of Service Code", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "pharmacy") {
                setTimeout(function () {
                    $('#tblPharmacyDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        data: data.ReportDetails,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                           // colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center" },

                            {
                                "data": "PhysicianLastName", "title": "Physician Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data != '' && full["PhysicianFirstName"] != '') {
                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                    else {
                                        return data;
                                    }
                                }
                            },
                            { "data": "DrugName", "title": "Drug Name", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "HCPCS Code", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data != null && data > 0 && data != "")
                                        return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                    else {
                                        return 'N/A';
                                    }
                                }
                            },
                            {
                                "data": "ClaimDateStr", "title": "Claim Date", sClass: "text-center"


                            },
                            { "data": "CostString", "title": "Total cost", sClass: "text-center", sType: "currency" }
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                "columns": '3,4, 5, 6, 7, 8',
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]

                    });
                })
            }
            else if (data.ReportType == "lr") {
                debugger;
                setTimeout(function () {
                    $('#tblLABDetails').dataTable({
                        
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        data: data.ReportDetails,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },

                        //searching: true,
                        order: [[6, "desc"]],
                        aoColumns: [
                       
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Patient Name", sClass: "text-center",
                                //"render": function (data, type, full, meta) {
                                //    return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"Lab\",\"" + full['PatientName'] + "\",null,\"" + full['PracticeId'] + "\",null,\"" + full['PatientId'] + "\");return false'>" + data + "</a>";
                                //}
                                "render": function (data, type, full, meta) {
                                    //  return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"lr\",\"" + full['PatientName'] + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + "</a>";
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"lr\",\"" + full['PatientName'] + "\",\"" + full[''] + "\", \"" + full['PracticeId'] + "\",null,\"" + full['MBI'] + "\",\"" + full['HCPCSCode'] + "\");return false'>" + data + "</a>";
                                }
                            },
                            { "data": "ClaimDate", "title": "Date of Service", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Code", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Total cost", sClass: "text-center", sType: "currency" }
                        ],


                        buttons: [
                            {
                                extend: 'csv',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3,4, 5, 6, 7',
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType.toLowerCase() == "mlr") {
                setTimeout(function () {
                    $('#tblMLRDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        data: data.ReportDetails,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Claim Facility Name", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place of Service Code", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claim Physician", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Claim Physician Specialty", sClass: "text-center" },
                            { "data": "CostString", "title": "Claim Cost", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "HCPCS/CPT Code", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }

                            },
                            { "data": "BETOS", "title": "BETOS", sClass: "text-center" }
                        ],
                        buttons: [
                            {
                                extend: 'csv',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,14,15',
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);
            }
            else if (data.ReportType == "er") {
                setTimeout(function () {
                    $('#tblERDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        AutoWidth: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.ReportDetails,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "AvoidableERV", "title": "Avoidable ERV", sClass: "text-center" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimDate", "title": "Claim Effective Date", sClass: "text-center" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },

                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },

                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" },
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                //autoClose: true,
                                "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,14,15,16',
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]

                    });
                }, 500);

            }
            else if (data.ReportType.toLowerCase() == "first90daysspend") {
                setTimeout(function () {
                    $('#tblFirst90DaysSpendDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        data: data.ReportDetails,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            {
                                "data": "ClaimId", "title": "Claim Id", sClass: "text-center", width: "400px",
                                render: function (data, type, full, meta) {
                                    return '\u200C' + data;
                                },
                            },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Claim Facility Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claim Physician", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<div  name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
                            { "data": "BETOS", "title": "Procedure Code", sClass: "text-center" },
                            { "data": "CostString", "title": "Claim Cost", sClass: "text-center" }
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible',
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn'
                            },
                        ]
                    });
                }, 500);
            }
else if (data.ReportType == "AWVL") {
                debugger;
                setTimeout(function () {
                    $('#tblawvLifeDetails').dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        data: data.ReportDetails,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        order: [[3, "desc"]],
                        aoColumns: [ 
                                 { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                                { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                                { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                                { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                                {
                                    "data": "ClaimDateStr", "title": "Claim From Date", sClass: "text-center",
                                },
                                { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                                { "data": "FacilityName", "title": "Claim Facility Name", sClass: "text-center" },
                                { "data": "ClaimsPhysicianName", "title": "Claim Physician", sClass: "text-center" },

                                {
                                    "data": "ICDCodes", "title": "ICD Code(s)", "width": "30%", sClass: "text-center",
                                    render: function (data, type, full, meta) {
                                        return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                    },

                                },
                                {
                                    "data": "HCCCodes", "title": "HCC Code(s)", "width": "30%", sClass: "text-center",
                                    render: function (data, type, full, meta) {
                                        return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                    },

                                },
                                { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
                                { "data": "BETOS", "title": "Procedure Code", sClass: "text-center" },

                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3, 4, 5, 6, 7,8,9,10,11',
                                //autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            //targets: [10, 11, 13, 14, 15,16,17],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }

            else if (data.ReportType.toLowerCase() == "utilizationadvancesummary") {
                var sourceCols;
                var tableName;
                var columnsmodifier = '';
                var columnDefsUAS;

                switch (UASType) {

                    case 'AWV':
                        tableName = "tblutilizationAdvanceSummaryAWVDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "Id", "title": "Id", sClass: "hidden" },
                            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Patient Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Admit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Admit" + "\",\"" + "Admit" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "RiskScore", "title": "Risk Score", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Assigned Practice", sClass: "text-center" },
                            { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "RecentAWVCode", "title": "Recent AWV Code", sClass: "text-center" },
                            { "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center" },
                            { "data": "NextAWVDate", "title": "Next AWV Date", sClass: "text-center" },
                            { "data": "PastDueStr", "title": "Days Past Due", sClass: "text-center" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },
                            { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },
                            },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26';
                        columnDefsUAS = [{
                            targets: [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26],
                            visible: false
                        }];
                        break;

                    case 'Admit':
                        tableName = "tblutilizationAdvanceSummaryAdmitDetails";
                        debugger;
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            {
                                "data": "MBI", "title": "Medicare Id", sClass: "text-center"
                            },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Admit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Admit" + "\",\"" + "Admit" + "\", null );return false'>" + data + "</a>";                                   
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "Assigned Physician", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [14, 15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'Readmit':
                        tableName = "tblutilizationAdvanceSummaryReadmitDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            { "data": "MBI", "title": "Medicare Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Readmit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Readmit" + "\" ,\"" + "Readmit" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "NumberOfReAdmissions", "title": "Number of Readmissions", sClass: "text-center" },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number Of Encounters", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }

                            },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17,18';
                        columnDefsUAS = [{
                            targets: [15, 16, 17, 18],
                            visible: false
                        }
                        ];
                        break;

                    case 'ER':
                        tableName = "tblutilizationAdvanceSummaryERDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            //{ "data": "EncounterId", "title": "EncounterId", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "ER" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "ER" + "\",\"" + "ER" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            {
                                //"data": "HICN", "title": "Medicare Id"
                                "data": "MBI", "title": "Medicare Id"
                            },
                            {
                                "data": "TotalERVisits", "title": "Number of ER visits", sClass: "text-center"
                            },
                            { "data": "CostString", "title": "Total cost for ER Visits", sClass: "text-center", sType: "currency" },
                            //{
                            //     "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center",
                            //     "render": function (data, type, full, meta) {
                            //         return data + ', ' + full["PhysicianFirstName"];
                            //     }
                            // }, 
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div sclass='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }

                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div  name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [13, 14, 15, 16, 17],
                            visible: false
                        }
                        ];
                        break;

                    case 'SNF':
                        tableName = "tblutilizationAdvanceSummarySNFDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            //{ "data": "EncounterId", "title": "EncounterId", sClass: "text-center" },
                            {
                                //"data": "HICN", "title": "Medicare Id", sClass: "text-center"
                                "data": "MBI", "title": "Medicare Id", sClass: "text-center"
                            },

                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "SNF" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "SNF" + "\",\"" + "SNF" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "MRAScore", "title": "MRA", sClass: "text-center" },
                            { "data": "Deceased", "title": "Deceased Status", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Physician Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data != null && data.length > 0) {

                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                    else {
                                        return '';
                                    }
                                }

                            },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "TotalNumberOfUniqueEncounters", sClass: "text-center" },
                            { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" }

                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16';
                        columnDefsUAS = [{
                            targets: [13],
                            visible: false
                        }];
                        break;

                    case 'SNFReadmit':
                        tableName = "tblutilizationAdvanceSummarySNFReadmitDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            //{ "data": "EncounterId", "title": "EncounterId", sClass: "text-center" },
                            {
                                //"data": "HICN", "title": "Medicare Id", sClass: "text-center"
                                "data": "MBI", "title": "Medicare Id", sClass: "text-center"
                            },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "SNFReadmit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "SNFReadmit" + "\",\"" + "SNFReadmit" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "NumberOfReAdmissions", "title": "Number of Readmissions", sClass: "text-center" },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number Of Encounters", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },

                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },

                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17,18';
                        columnDefsUAS = [{
                            targets: [15, 16, 17, 18],
                            visible: false
                        }];
                        break;

                    case 'Hospice':
                        tableName = "tblutilizationAdvanceSummaryHospiceDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            { "data": "MBI", "title": "Medicare Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Hospice" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Hospice" + "\",\"" + "Hospice" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "Assigned Physician", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [14, 15, 16, 17],
                            visible: false
                        }];
                        break;
                    case 'Outpatient':
                        tableName = "tblutilizationAdvanceSummaryOutpatientDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            //{ "data": "EncounterId", "title": "EncounterId", sClass: "text-center" },
                            {
                                //"data": "HICN", "title": "Medicare Id", sClass: "text-center"
                                "data": "MBI", "title": "Medicare Id", sClass: "text-center"
                            },

                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Outpatient" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Outpatient" + "\",\"" + "Outpatient" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "Assigned Physician", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },

                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            //{ "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" }, 

                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [14, 15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'OBS':
                        tableName = "tblutilizationAdvanceSummaryOBSDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            //{ "data": "EncounterId", "title": "EncounterId", sClass: "text-center" },
                            {
                                //"data": "HICN", "title": "Medicare Id", sClass: "text-center"
                                "data": "MBI", "title": "Medicare Id", sClass: "text-center"
                            },

                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "OBS" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "OBS" + "\",\"" + "OBS" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "Assigned Physician", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },

                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            //{ "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" }, 

                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [14, 15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'PracticeMonth':
                        tableName = "tblutilizationAdvanceSummaryPracticeMonthDetails";
                        sourceCols = [
                            { "data": "PracticeId", "title": "Id", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "Id", sClass: "hidden" },
                            { "data": "Period", "title": "Period", sClass: "hidden" },
                            { "data": "Period", "title": "Period", sClass: "text-center" },
                            {
                                "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return data;
                                }
                            },
                            { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                            { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                            {
                                "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "AWV" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "AWV_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            {
                                "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                                "render": function (data, type, full, meta) {
                                    if (data == '')
                                        data = '';
                                    else
                                        data = data + '%';
                                    return data;
                                }
                            },
                            {
                                "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Admit" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "Admit_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                            {
                                "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data == '')
                                        data = '';
                                    else
                                        data = data + '%';
                                    return data;
                                }
                            },
                            { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                            { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            {
                                "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Readmit" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "Readmit_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "ERCount", "title": "ER Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "ER" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "ER_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNF" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "SNF_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                            {
                                "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data == '')
                                        data = '';
                                    else
                                        data = data + '%';
                                    return data;
                                }
                            },
                            { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                            { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            {
                                "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNFReadmit" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "SNFReadmit_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Hospice" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "Hospice_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Outpatient" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "Outpatient_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "OBS" + "\",null,\"" + full['PracticeId'] + "\",null,null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "OBS_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39';
                        break;
                    case 'PhysicianMonth':
                        tableName = "tblutilizationAdvanceSummaryPhysicianMonthDetails";
                        sourceCols = [
                            { "data": "PracticeId", "title": "Id", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "Id", sClass: "hidden" },
                            { "data": "Period", "title": "Period", sClass: "hidden" },
                            { "data": "Period", "title": "Period", sClass: "text-center" },
                            {
                                "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return data;
                                }
                            },
                            { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                            { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                            {
                                "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "AWV" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "AWV_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            {
                                "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data == '')
                                        data = '';
                                    else
                                        data = data + '%';
                                    return data;
                                }
                            },
                            {
                                "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Admit" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "Admit_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                            {
                                "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data == '')
                                        data = '';
                                    else
                                        data = data + '%';
                                    return data;
                                }
                            },
                            { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                            { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            {
                                "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Readmit" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "Readmit_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "ERCount", "title": "ER Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "ER" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "ER_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNF" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "SNF_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                            {
                                "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data == '')
                                        data = '';
                                    else
                                        data = data + '%';
                                    return data;
                                }
                            },
                            { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },
                            { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            {
                                "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNFReadmit" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "SNFReadmit_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Hospice" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "Hospice_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Outpatient" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "Outpatient_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                            {
                                "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "OBS" + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,\"" + "" + "\",null,\"" + full['Period'] + "\",\"" + "" + "\",\"" + "OBS_Pra_phy" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                            { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39';
                        break;
                }
                setTimeout(function () {
                    $('#' + tableName).dataTable({
                        "dom": 'Bfrltip',
                        destroy: true,
                        deferRender: true,
                        data: data.ReportDetails,
                        pagingType: "simple",
                        scrollX: true,
                        fixedHeader: true,
                        // scrollY: "350px",
                        scrollY: false,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        //searching: true,
                        // order: [[6, "desc"]],
                        "columns": sourceCols,
                        buttons: [
                            {
                                extend: 'csv',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn'
                            },
                            {
                                extend: 'colvis',
                                columns: columnsmodifier,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn'
                            },
                        ],
                        columnDefs: columnDefsUAS,
                    });
                }, 500);

            }
            else if (data.ReportType == "SERVICEFUND") {
                setTimeout(function () {
                    if ($.fn.DataTable.isDataTable('#tblservicefundDetails')) {
                        $('#tblservicefundDetails').DataTable().destroy();
                    }

                    $('#tblservicefundDetails').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                           // colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            {
                                "data": "ClaimType", "title": "Claim Type", sClass: "text-center",

                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"servicefund\",\"" + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\", \"" + full['PatientId'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + "\",\"" + full['ClaimType'] + "\",\"" + "\",\"" + full['Period'] + "\",\"" + "\",\"" + "\" ,\"" + full['Period'] + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Total Encounters", sClass: "text-center" },
                            { "data": "CostString", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost", sClass: "text-center", sType: "currency" },
                            { "data": "EncountersPerThousend", "title": "Encounters Per 1,000", sClass: "text-center" },
                            { "data": "CostPerPatient", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Cost/Patient", sClass: "text-center", sType: "currency" },
                            { "data": "AvgCostPerEncounter", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Encounter", sClass: "text-center", sType: "currency" },
                            { "data": "EncountersPerPatient", "title": "Encounters/Patient", sClass: "text-center" },
                            { "data": "Period", "title": "Period", sClass: "text-center" }
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);
            }
            else if (data.ReportType == "SERVICEFUNDINST") {
                debugger;
                setTimeout(function () {

                    $('#tblservicefundDetailsINST').dataTable({
                       
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                        
                            // { "data": "Id", "title": "PatientId", sClass: "hidden" },
                            {
                                "data": "PhysicianSpecialty", "title": "Specialty", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupSecond(\"" + full['Id'] + "\" , \"SERVICEFUNDINST\",\"" + full['PhysicianSpecialty'] + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['PhysicianSpecialty'] + "\" ,\"" + full['FacilityName'] + "\" ,\"" + full['ClaimPhysicianId'] + "\" ,\"" + "\",\"" + "\",\"" + "\",\"" +"\",\"" + full['Period'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                            { "data": "TotalEncounters", "title": "TotalEncounters", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" },
                            { "data": "EncountersPMPY", "title": "Encounters PMPY", sClass: "text-center" },
                            { "data": "CostPerPatientString", "title": "Cost/Patient", sClass: "text-center" },
                            { "data": "AvgCostPerEncounterString", "title": "Avg Cost/Encounter", sClass: "text-center" },
                            { "data": "EncountersPerPatient", "title": "Encounters/Patient", sClass: "text-center" },
                            { "data": "Period", "title": "Period", sClass: "text-center" }
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '0,1,2, 3, 4, 5, 6,7',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [8],
                            visible: false
                        }
                        ]
                    });
                }, 500);
            }
            else if (data.ReportType == "SERVICEFUNDPHAR") {
                setTimeout(function () {

                    $('#tblservicefundDetailsphar').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetails,
                        destroy: true,
                        deferRender: true,
                        stateSave: true,
                        pagingType: "simple",
                        scrollX: true,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            {
                                "data": "Therapeuticclass", "title": " Therapeutic class", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailPopupsecond_Server(\"" + full['Id'] + "\" , \"SERVICEFUNDPHAR\",\"" + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['Therapeuticclass'] + "\"  ,\"" + "\",\"" + full['Period'] + "\",\"" + "\",\"" + "\",\"" + "\" );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                            { "data": "TotalEncounters", "title": "Rx Count", sClass: "text-center" },
                            { "data": "TotalCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost", sClass: "text-center", sType: "currency" },
                            { "data": "EncountersPMPY", "title": "Rx Count PMPY", sClass: "text-center" },
                            { "data": "AverageCostPerPatient", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Cost/Patient", sClass: "text-center", sType: "currency" },
                            { "data": "AvgCostPerEncounter", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Cost/Rx", sClass: "text-center", sType: "currency" },
                            { "data": "CostPerPatient", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Rx/Patient", sClass: "text-center", sType: "currency" },
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);
            }
            else {
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

function closeDetailsPopUpSecond() {
    $('.third-modal-close').click();
}
function closeDetailsPopUpFirstSecond() {
    $('.second-modal-close').click();
    $('.third-modal-close').click();
}

function showDetailPopup_Server(Id, FARName, PatientName, SpecialityType, PracticeId, PhysicianId, PatientId, FacilityId, FacilityName, ClaimPhysicianId, Month) {
    if (FARName == "SettledMonth" || FARName == "SUMMARYREPORT") {
        Month = SpecialityType;
        SpecialityType = "";
    }
    else {
        if (FARName != "servicefund")
            Month = ""
    }
    var currentYear = 1;
    var RowPhysicianid = ClaimPhysicianId;
    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    var Secpopup = '';

    $("#ModalDetailsPopup1").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#tblEORDetails_wrapper").hide();
    $("#tblERDetails_wrapper").hide();
    $("#tblERVDetails_wrapper").hide();
    $("#tblAdmissionDetails_wrapper").hide();
    $("#tblReAdmissionDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblSCRDetails_wrapper").hide();
    $("#tblTop100ExpDetails_wrapper").hide();
    $("#tblHHARankingDetails_wrapper").hide();
    $("#tblHospitalDetails_wrapper").hide();
    $("#tblSNFRankingDetails_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsThird_wrapper").hide();
    $("#tblCCMDetails_wrapper").hide();
    $("#tblQuarterlyRiskReportDetails_wrapper").hide();
    $("#tblClaimsDetails_wrapper").hide();
    $("#tblPatientDetails_wrapper").hide();
    $("#tblPharmacyDetails_wrapper").hide();
    $("#tblLABDetails_wrapper").hide();
    $("#tblSettledMonthDetails_wrapper").hide();
    $("#tblSummaryReportDetails_wrapper").hide();
    $("#tblpmpmDetails_wrapper").hide();
    $("#tblBMRDetails_wrapper").hide();
    $("#tblMLRDetails_wrapper").hide();
    $("#tblCRDetails_wrapper").hide();
    $("#tblRIRDetails_wrapper").hide();
    $("#tblservicefundDetails_wrapper").hide();
    $("#tblservicefundDetailsINST_wrapper").hide();
    $("#tblservicefundDetailsphar_wrapper").hide();
    $("#tblservicefundDetailsPRA_wrapper").hide();
    $("#tblutilizationAdvanceSummaryAdmitDetails_wrapper").hide();
    $("#tblawvLifeDetails_wrapper").hide();
    $("#tblpvbrDetails_wrapper").hide();

    //SettledMonth
    //tblSettledMonthDetails
    if (FARName == "servicefund") {
        $(".modal .modal-title1").css("color", "white");
        // $(".modal .modal-title1").html(detailtitle);
        $(".modal .modal-title1").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> " + FacilityName + " Details");
    }
    else {
        $(".modal .modal-title1").css("color", "white");
        // $(".modal .modal-title1").html(detailtitle);
        $(".modal .modal-title1").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> " + PatientName + " Details");
    }

    var reportParams = {
        Id: Id,
        FARName: FARName,
        practiceId: PracticeId,
        physicianId: PhysicianId,
        regionId: RegionId,
        patientId: PatientId,
        specialityType: SpecialityType,
        Year: currentYear,
        secpopup: Secpopup,
        RowPhysicianId: RowPhysicianid,
        FacilityId: FacilityId,
        Month: Month
    };
    if (FARName == "servicefund") {
        if ($.fn.DataTable.isDataTable('#tblservicefundDetailsPRA')) {
            $('#tblservicefundDetailsPRA').DataTable().destroy();
        }
        table = $('#tblservicefundDetailsPRA').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            scrollX: true,
            fixedHeader: true,
            scrollY: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetServerProcessingFARDetails',
                "data": reportParams,
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                }
            },
            "language": {
                "search": "",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },

            },
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                //$('.dataTables_filter input').attr('placeholder', 'Search');
                $('.column-btn').click(function () {
                    colvis_scroll();
                });
                var $searchInput = $('div.dataTables_filter input');
                $searchInput.unbind();
                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblservicefundDetailsPRA").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblservicefundDetailsPRA").dataTable().api();
                        dtable.search("").draw();
                    }
                });
            },

            // order: [[6, "desc"]],
            aoColumns: [
                { "data": "Period", "title": "Period", sClass: "text-center" },
                {
                    "data": "PracticeName", "title": "Practice", sClass: "text-center"
                },
                {
                    "data": "PhysicianName", "title": "PCP Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<a href='javascript:void(0);' onclick='showDetailPopupsecond_Server(\"" + full['Id'] + "\" , \"servicefund\",\"" + full['PhysicianName'] + "\" ,\"" + "\" , \"" + full['PracticeId'] + "\" ,\"" + full['PhysicianId'] + "\" ,\"" + "\" ,\"" + full['PCPId'] + "\" ,\"" + full['PracticeName'] + "\" ,\"" + "\" , \"" + full['Period'] + "\",\"" + "\",\"" + "\",\"" + "\");return false'>" + data + "</a>";
                    }
                },
                { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                {
                    "data": "InstitutionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Institutional", sClass: "text-center", sType: "currency"
                },
                {
                    "data": "ProfessionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Professional", sClass: "text-center", sType: "currency"
                },
                {
                    "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Pharmacy", sClass: "text-center", sType: "currency"
                },
                { "data": "PCPCAP", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "PcpCap", sClass: "text-center", sType: "currency" },
                { "data": "SpecialistCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "SpecialistCap", sClass: "text-center", sType: "currency" },
                { "data": "Reinsurance", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Expense", sClass: "text-center", sType: "currency" },
                { "data": "ReinsuranceRecoveries", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Recoveries", sClass: "text-center", sType: "currency" },
                { "data": "OtherCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Other", sClass: "text-center", sType: "currency" },
                { "data": "IBNR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "IBNR", sClass: "text-center", sType: "currency" },
                { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                {
                    "data": "Surplus", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Surplus/(Deficit)", sClass: "text-center", sType: "currency"
                },
                {
                    "data": "AverageMLR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "MLR", sClass: "text-center", sType: "currency"
                }
            ],

            buttons: [
                {
                    extend: 'excel',
                    filename: 'Data export-' + FARName,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        ExportToExcel('ReportsPopUp', 'tblservicefundDetailsPRA', FARName, '', currentYear, currentYear, '', '', PhysicianId, PracticeId, PatientId, PatientId, '', '', '', '', '', SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month);
                    }
                },
                {
                    extend: 'colvis',
                    //  "columns": '3, 4, 5, 6, 7, 8, 9, 10',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn'
                },
            ]

        });
        oTable = table.fnSettings();
    }
    else if (FARName == "SUMMARYREPORT") {
        if ($.fn.DataTable.isDataTable('#tblSummaryReportDetails')) {
            $('#tblSummaryReportDetails').DataTable().destroy();
        }
        table = $('#tblSummaryReportDetails').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            scrollX: true,
            fixedHeader: true,
            scrollY: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetServerProcessingFARDetails',
                "data": reportParams,
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                }
            },
            "language": {
                "search": "",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },

            },
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                //$('.dataTables_filter input').attr('placeholder', 'Search');
                $('.column-btn').click(function () {
                    colvis_scroll();
                });
                var $searchInput = $('div.dataTables_filter input');
                $searchInput.unbind();
                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblSummaryReportDetails").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblSummaryReportDetails").dataTable().api();
                        dtable.search("").draw();
                    }

                });
            },
            aoColumns: [
                { "data": "PlanName", "title": "Plan Name", sClass: "text-center" },
                { "data": "MBI", "title": "Patient ID", sClass: "text-center" },
                {
                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div>" + full['PatientLastName'] + "," + full['PatientFirstName'] + "</div>"
                    }
                },
                { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                { "data": "PCPLocation", "title": "PCP Location", sClass: "text-center" },
                { "data": "IPAEffectiveDate", "title": "IPA Effective Date", sClass: "text-center" },
                { "data": "TermedMonth", "title": "Termed Month", sClass: "text-center" },
                { "data": "MRAScore", "title": "MRA", sClass: "text-center" },
                { "data": "CostString", "title": "Total Patient Cost", sClass: "text-center" },
                { "data": "PhysicianLastName", "title": "Assigned PCP", sClass: "text-center" },

            ],

            buttons: [
                {
                    extend: 'excel',
                    filename: 'Data export-' + FARName,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        // WidgetType, tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, ClaimtypeName, Ph_id, Pr_id, PatientId, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month

                        ExportToExcel('ReportsPopUp', 'tblSummaryReportDetails', FARName, '', currentYear, currentYear, '', '', PhysicianId, PracticeId, PatientId, PatientId, '', '', '', '', '', SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month)
                    }
                },
                {
                    extend: 'colvis',
                    //  "columns": '3, 4, 5, 6, 7, 8, 9, 10',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn'
                },
            ]

        });
        oTable = table.fnSettings();
    }
}

var serviceFundClaimType = "";

function showDetailPopupsecond_Server(Id, FARName, PatientName, SpecialityType, PracticeId, PhysicianId, PatientId, FacilityId, FacilityName, ClaimPhysicianId, Month, GridFilter, UASType, UASFilter) {
    debugger;
    serviceFundClaimType = FacilityName;

    var currentYear = 1;
    var RowPhysicianid = ClaimPhysicianId;
    $("#tblSCRDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblHospitalDetailsSecond_wrapper").hide();
    $("#tblHHADetailsSecond_wrapper").hide();
    $("#tblservicefundDetailsSecond_wrapper").hide();
    $("#tblservicefundDetailsSecondSNF_wrapper").hide();
    $("#tblservicefundDetailsINSTSecond_wrapper").hide();
    $("#tblservicefundDetailsPHARSecond_wrapper").hide();


    if (FARName == "hospital" || FARName == "hharanking" || FARName == "snfranking") {
        $(".modal .modal-title2").css("color", "white");
        $(".modal .modal-title2").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecond()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecond()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' '>" + PatientName + "</a>" + " -> Details");
    }
    else {
        $(".modal .modal-title2").css("color", "white");
        $(".modal .modal-title2").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecond()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecond()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' '>" + PatientName + "</a>" + " -> Details");
    }

    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
        $('#FARlast_year').prop('checked', true);
    }
    var secpopup = 'servicefundsecpopup'
    $("#ModalDetailsPopup2").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $(".loader").show();
    var reportParams = {
        Id: Id,
        FARName: FARName,
        secpopup: secpopup,
        practiceId: PracticeId,
        physicianId: PhysicianId,
        regionId: RegionId,
        patientId: PatientId,
        specialityType: SpecialityType,
        Year: currentYear,
        RowPhysicianId: RowPhysicianid,
        FacilityId: FacilityId,
        GridFilter: GridFilter,
        UASType: UASType,
        UASFilter: UASFilter,
        Month: Month,
        FacilityName: FacilityName
    }
    
    if (FARName == "SERVICEFUNDPHAR") {
       
        //setTimeout(function () {
        setTimeout(function () {
            if ($.fn.DataTable.isDataTable('#tblservicefundDetailsPHARSecond')) {
                $('#tblservicefundDetailsPHARSecond').DataTable().destroy();
            }


            table = $('#tblservicefundDetailsPHARSecond').dataTable({
                "dom": 'Bfrltip',
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: "simple",
                scrollX: true,
                fixedHeader: true,
                scrollY: false,
                "ajax": {
                    "type": "POST",
                    "url": serverRoot + '/Insights/Insights/GetServerProcessingFARDetailsSecond',
                    "data": reportParams,
                    "complete": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    },
                    "error": function () {
                        $(".loader").fadeOut("slow");
                        $(".serverloader").fadeOut("slow");
                    }
                },
                "language": {
                    "search": "",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    },

                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    //$('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        colvis_scroll();
                    });
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length > 3) {
                            var dtable = $("#tblservicefundDetailsPHARSecond").dataTable().api();
                            dtable.search(this.value).draw();
                        }

                        if (this.value.length == 0) {
                            var dtable = $("#tblservicefundDetailsPHARSecond").dataTable().api();
                            dtable.search("").draw();
                        }

                    });
                },
                aoColumns: [
                    { "data": "Period", "title": "Period", sClass: "text-center" },
                    { "data": "PracticeName", "title": "Assigned Practice Name", sClass: "text-center" },
                    { "data": "PCPName", "title": "PCP Name", sClass: "text-center" },
                    { "data": "PatientName", "title": "PatientName", sClass: "text-center" },
                    { "data": "Id", "title": "PatientId", sClass: "hidden" },
                    { "data": "DateOfBirth", "title": "DOB", sClass: "hidden" },
                    { "data": "Therapeuticclass", "title": " Therapeutic class", sClass: "text-center" },
                    { "data": "RxNumber", "title": "Rx Number", sClass: "text-center" },
                    { "data": "FillDate", "title": "Fill Date", sClass: "hidden" },
                    { "data": "NDCCode", "title": "NDC Code", sClass: "text-center" },

                ],

                buttons: [
                    {
                        extend: 'excel',
                        filename: 'Data export-' + FARName,
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'excel-btn',
                        titleAttr: 'Export',
                        action: function (e, dt, node, config) {
                            // WidgetType, tablename, ConditionCode, TopExpenditurePatientRowid, Toyear, Fromyear, ClaimTypes, ClaimtypeName, Ph_id, Pr_id, PatientId, SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month

                            ExportToExcel('ReportsPopUp', 'tblservicefundDetailsPHARSecond', FARName, '', currentYear, currentYear, '', '', PhysicianId, PracticeId, PatientId, PatientId, '', '', '', '', '', SpecialityType, Secpopup, RowPhysicianid, FacilityId, Month)
                        }
                    },
                    {
                        extend: 'colvis',
                        //  "columns": '3, 4, 5, 6, 7, 8, 9, 10',
                        exportOptions: {
                            columns: ':visible'
                        },
                        className: 'column-btn'
                    },
                ]

            });
            oTable = table.fnSettings();

        })

    }
    else {
        $.ajax({
            type: "POST",
            url: serverRoot + '/Insights/Insights/DetailsPopupSecond',
            data: JSON.stringify({
                Id: Id,
                FARName: FARName,
                secpopup: secpopup,
                practiceId: PracticeId,
                physicianId: PhysicianId,
                regionId: RegionId,
                patientId: PatientId,
                specialityType: SpecialityType,
                Year: currentYear,
                RowPhysicianId: RowPhysicianid,
                FacilityId: FacilityId,
                FacilityName: FacilityName,
                Month: Month
            }),
            contentType: 'application/json; charset=utf-8',
            dataType: "json",

            success: function (data) {
                if (data.ReportType == "servicefund") {
                    if ($.fn.DataTable.isDataTable('#tblservicefundDetailsSecondPL')) {
                        $('#tblservicefundDetailsSecondPL').DataTable().destroy();
                    }
                    setTimeout(function () {
                        $('#tblservicefundDetailsSecondPL').dataTable({
                            "dom": 'Bfrltip',
                            data: data.ReportDetailsSecond,
                            destroy: true,
                            pagingType: "simple",
                            deferRender: true,
                            stateSave: true,
                            scrollX: true,
                            scrollY: false,
                            scrollCollapse: true,
                            "language": {
                                "search": "",
                                "sZeroRecords": "No data available ",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dt-buttons').addClass('pull-right buttons_line');
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                //$('.dataTables_filter input').attr('placeholder', 'Search');
                               // colvis_inner_button();
                                $('.column-btn').click(function () {
                                    $column_btn_this = $(this)
                                    colvis_scroll();
                                });
                                $(document).on('click', '.dt-button-collection .dt-button', function () {
                                    colvis_inner_button();
                                });
                            },
                            aoColumns: [
                                { "data": "Period", "title": "Period", sClass: "text-center" },
                                {
                                    "data": "PracticeName", "title": "Practice", sClass: "text-center"
                                },
                                {
                                    "data": "PhysicianName", "title": "PCP Name", sClass: "text-center"
                                },
                                {
                                    "data": "PracticeId", "title": "PracticeId  ", sClass: "hidden"
                                },
                                {
                                    "data": "PCPId", "title": "PCPId", sClass: "hidden"
                                },
                                {
                                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupfifth(\"" + full['Id'] + "\" , \"servicefundPL\",\"" + full['PatientLastName'] + "\" ,\"" + full['PracticeName'] + "\"  ,\"" + full["PracticeId"] + "\"  ,\"" + full["PCPId"] + "\"  ,\"" + full["HICN"] + "\" ,\"" + full['PCPId'] + "\" ,\"" + full["HICN"] + "\" ,\"" + full['PhysicianName'] + "\" ,\"" + full['Period'] + "\"  );return false'>" + data + full['PatientFirstName'] + "</a>";
                                    }
                                },
                                { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                                { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                                { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                                { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                                {
                                    "data": "InstitutionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Institutional", sClass: "text-center", sClass: "text-center", sType: "currency"
                                },
                                {
                                    "data": "ProfessionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Professional", sClass: "text-center", sClass: "text-center", sType: "currency"
                                },
                                {
                                    "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Pharmacy", sClass: "text-center", sType: "currency"
                                },
                                { "data": "PCPCAP", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "PcpCap", sClass: "text-center", sType: "currency" },
                                { "data": "SpecialistCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "SpecialistCap", sClass: "text-center", sType: "currency" },
                                { "data": "Reinsurance", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Expense", sClass: "text-center", sType: "currency" },
                                { "data": "ReinsuranceRecoveries", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Recoveries", sClass: "text-center", sType: "currency" },
                                { "data": "OtherCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Other", sClass: "text-center", sType: "currency" },
                                { "data": "IBNR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "IBNR", sClass: "text-center", sType: "currency" },
                                { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                                { "data": "Surplus", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Surplus", sClass: "text-center", sType: "currency" },
                                { "data": "AverageMLR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "MLR", sClass: "text-center", sType: "currency" },
                                { "data": "LOB", "title": "LOB", sClass: "text-center" },
                            ],

                            buttons: [
                                {
                                    extend: 'excel',
                                    filename: 'Data export-' + FARName,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'excel-btn',
                                    titleAttr: 'Export'
                                },
                                {
                                    extend: 'colvis',
                                    // autoClose: true,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'column-btn',
                                    titleAttr: 'More'
                                },
                            ]
                            ,
                            columnDefs: [{
                                targets: [20, 21, 22],
                                visible: false
                            }
                            ]
                        });
                    }, 500);
                }
                else if (data.ReportType == "SERVICEFUNDINST") {
                    debugger;
                    setTimeout(function () {
                        if ($.fn.DataTable.isDataTable('#tblservicefundDetailsINSTSecond')) {
                            $('#tblservicefundDetailsINSTSecond').DataTable().destroy();
                        }
                        $('#tblservicefundDetailsINSTSecond').dataTable({
                            "dom": 'Bfrltip',
                            data: data.ReportDetailsSecond,
                            destroy: true,
                            pagingType: "simple",
                            scrollX: true,
                            fixedHeader: true,
                            //scrollY: "350px",
                            scrollY: false,
                            "language": {
                                "search": "",
                                "sZeroRecords": "No data available ",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dt-buttons').addClass('pull-right buttons_line');
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                //$('.dataTables_filter input').attr('placeholder', 'Search');
                                $('.column-btn').click(function () {
                                    $column_btn_this = $(this)
                                    colvis_scroll();
                                });
                                $(document).on('click', '.dt-button-collection .dt-button', function () {
                                    colvis_inner_button();
                                });
                            },
                            // order: [[6, "desc"]],
                            aoColumns: [
                                { "data": "PracticeName", "title": "Assigned Practice Name", sClass: "text-center" },
                                {
                                    "data": "PhysicianName", "title": "Claims Physician Name", sClass: "text-center",

                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"SERVICEFUNDINST\",\"" + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + full['PhysicianId'] + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\",\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + "</a>";
                                    }
                                },
                                { "data": "TotalClaims", "title": "Number Of Claims", sClass: "text-center" },
                                { "data": "NumberOfAssignedBeneficiaries", "title": "Number Of Beneficiaries", sClass: "text-center" },
                                { "data": "AverageCostPerClaimString", "title": "CostPerClaims", sClass: "text-center" },
                                { "data": "AverageCostPerPatientWithDollar", "title": "CostPerBenificiary", sClass: "text-center" },
                                { "data": "TotalCostString", "title": "Total Cost", sClass: "text-center" },
                            ],

                            buttons: [
                                {
                                    extend: 'excel',
                                    filename: 'Data export-' + FARName,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'excel-btn',
                                    titleAttr: 'Export'
                                },
                                {
                                    extend: 'colvis',
                                    // autoClose: true,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'column-btn',
                                    titleAttr: 'More'
                                },
                            ]
                        });
                    }, 500);
                }
                else {
                    ValidationMessage("Unable to Process Request. Please Try Again Later.");
                }
            },
            complete: function () {
                $(".loader").fadeOut("slow");
            },
            error: function (xhr) {
                //Show the mmodal popup.
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        });
    }
}
function showDetailsPopupSecond(Id, FARName, SpecialityType, PatientName, PracticeId, PhysicianId, PatientId, FacilityId, _Cost, FacilityName, ClaimPhysicianId, GridFilter, UASType, UASFilter, Month, ScrSecondPopupType, EncounterId, PracticeName) {
    debugger;
    if (UASType == "") {
        UASType = GridFilter;
    }
    if (EncounterId == null) {
        EncounterId = GridFilter;
    }

    var currentYear = 1;
    var RowPhysicianid = ClaimPhysicianId;


    $("#tblSCRDetailsSecond_wrapper").hide();
    $("#tblSCRBenficiaryDetailsSecond_wrapper").hide();
    $("#tblSNFDetailsSecond_wrapper").hide();
    $("#tblAdmissionDetailsSecond_wrapper").hide();
    $("#tblReAdmissionDetailsSecond_wrapper").hide();
    $("#tblHospitalDetailsSecond_wrapper").hide();
    $("#tblHHADetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryAdmitDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryReAdmitDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryERDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummarySNFDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummarySNFReadmitDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryOutpatientDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryOBSDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryHospiceDetailsSecond_wrapper").hide();
    $("#tblutilizationAdvanceSummaryReadmitsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryAdmitsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryAWVsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryERsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummarySNFsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummarySNFReadmitsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryHospicesDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryOutpatientsDetails_wrapper").hide();
    $("#tblutilizationAdvanceSummaryOBSsDetails_wrapper").hide();
    $("#tblservicefundDetailsSecond_wrapper").hide();
    $("#tblservicefundDetailsSecondSNF_wrapper").hide();
    $("#tblservicefundDetailsINSTSecond_wrapper").hide();
    $("#tblservicefundDetailsPHARSecond_wrapper").hide();
    $("#tblservicefundDetailsSecondPL_wrapper").hide();

    if (FARName == "hospital" || FARName == "hharanking" || FARName == "snfranking") {
        $(".modal .modal-title2").css("color", "white");
        $(".modal .modal-title2").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecond()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecond()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' '>" + PatientName + "</a>" + " -> Details");
    }
    else if (FARName == "admission"|| FARName == "er") {
        $(".modal .modal-title2").css("color", "white");
        $(".modal .modal-title2").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> </a>"
            + " <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecond()'>" + SpecialityType + "</a>"
            + " <a style='color: white;' href='javascript:void(0);' '>(" + FacilityName.split('/')[1] + ")</a> : "+ _Cost + "");
    }
    else if (FARName == "readmission") {
        $(".modal .modal-title2").css("color", "white");
        $(".modal .modal-title2").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> </a>"
            + " <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecond()'>" + SpecialityType + "</a>"
            + " <a style='color: white;' href='javascript:void(0);' '>(" + FacilityName.split('/')[1] + ")</a> :$" + _Cost + "");
    }

    else {
        $(".modal .modal-title2").css("color", "white");
        $(".modal .modal-title2").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecond()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecond()'>" + SpecialityType + "</a>"
           +  " -> Details");
    }

    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
        $('#FARlast_year').prop('checked', true);
    }
    var secpopup = 'scrsecpopup'
    $("#ModalDetailsPopup2").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $(".loader").show();
    $.ajax({      
        type: "POST",      
        url: serverRoot + '/Insights/Insights/DetailsPopupSecond',
        data: JSON.stringify({
            Id: Id,
            FARName: FARName,
            secpopup: secpopup,
            practiceId: PracticeId,
            physicianId: PhysicianId,
            regionId: RegionId,
            patientId: PatientId,
            specialityType: SpecialityType,
            Year: currentYear,
            RowPhysicianId: RowPhysicianid,
            FacilityId: FacilityId,
            GridFilter: GridFilter,
            UASType: UASType,
            UASFilter: UASFilter,
            Month: Month,
            FacilityName: FacilityName,
            EncounterId: EncounterId,
            PracticeName: PracticeName
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {
            if (data.ReportType == "scr") {
                if (FARName = 'scr') {
                    ScrSecondPopupType = 'scrClaimSecondPopup'
                }
                if (ScrSecondPopupType == "scrClaimSecondPopup") {
                    setTimeout(function () {
                        $('#tblSCRDetailsSecond').dataTable({
                            "dom": 'Bfrltip',
                            destroy: true,
                            deferRender: true,
                            pagingType: "simple",
                            scrollX: true,
                            // scrollY: 600,
                            scrollY: false,
                            scrollCollapse: true,
                            scroller: true,
                            data: data.ReportDetailsSecond,
                            "language": {
                                "search": "",
                                "sZeroRecords": "No data available",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dt-buttons').addClass('pull-right buttons_line');
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                //$('.dataTables_filter input').attr('placeholder', 'Search');
                               // colvis_inner_button();
                                $('.column-btn').click(function () {
                                    $column_btn_this = $(this)
                                    colvis_scroll();
                                });
                                $(document).on('click', '.dt-button-collection .dt-button', function () {
                                    colvis_inner_button();
                                });
                            },
                            aoColumns: [
                                { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                                { "data": "HICN", "title": "HICN", sClass: "text-center" },
                                {
                                    "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {

                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"scr\",\"" + full['PatientLastName'] + "\" ,\"" + SpecialityType + "\"  ,\"" + PracticeId + "\",\"" + PhysicianId + "\" ,\"" + full['PatientId'] + "\",\"" + "\",\"" + "\" ,\"" + "\"  );return false'>" + data + "</a>";
                                    }
                                },
                                { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                                { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                                {
                                    "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                },
                                //{ "data": "OrganizationNPIName", "title": "Organization NPI Name", sClass: "text-center" },
                                { "data": "NumberOfClaims", "title": "Number Of Claims", sClass: "text-center" },
                                { "data": "CostString", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost accrued by claims", sClass: "text-center", sType: "currency" }
                            ],
                            buttons: [
                                {
                                    extend: 'excel',
                                    filename: 'Data export-' + FARName,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'excel-btn',
                                    titleAttr: 'Export'
                                },
                                {
                                    extend: 'colvis',

                                    //autoClose: true,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'column-btn',
                                    titleAttr: 'More'
                                },
                            ],
                            columnDefs: [{
                                targets: [1],
                                visible: false
                            }
                            ]
                        });
                    }, 500);
                }
                else if (ScrSecondPopupType == "scrBenfSecondPopup") {
                    setTimeout(function () {
                        $('#tblSCRBenficiaryDetailsSecond').dataTable({
                            "dom": 'Bfrltip',
                            destroy: true,
                            deferRender: true,
                            pagingType: "simple",
                            scrollX: true,
                            // scrollY: 600,
                            scrollY: false,
                            scrollCollapse: true,
                            scroller: true,
                            data: data.ReportDetailsSecond,
                            "language": {
                                "search": "",
                                "sZeroRecords": "No data available",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dt-buttons').addClass('pull-right buttons_line');
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                //$('.dataTables_filter input').attr('placeholder', 'Search');
                                $('.column-btn').click(function () {
                                    $column_btn_this = $(this)
                                    colvis_scroll();
                                });
                                $(document).on('click', '.dt-button-collection .dt-button', function () {
                                    colvis_inner_button();
                                });
                            },
                            aoColumns: [
                                { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                                { "data": "HICN", "title": "HICN", sClass: "hidden" },
                                {
                                    "data": "PatientLastName", "title": "Beneficiary Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {

                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"scr\",\"" + full['PatientLastName'] + "\" ,\"" + SpecialityType + "\"  ,\"" + PracticeId + "\",\"" + PhysicianId + "\" ,\"" + full['PatientId'] + "\",\"" + "\",\"" + "\" ,\"" + "\"  );return false'>" + data + "</a>";
                                    }
                                },
                                { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                                { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                                {
                                    "data": "PhysicianLastName", "title": "Assigned Physician", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                },
                                { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                                { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                                { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                                { "data": "EffectiveDateStr", "title": "Claim Effective Date", sClass: "text-center" },
                                { "data": "PlaceOfServiceCodes", "title": "Place of Service Codes", sClass: "text-center" },
                                {
                                    "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                    render: function (data, type, full, meta) {
                                        return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                    }
                                },

                                {
                                    "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                    render: function (data, type, full, meta) {
                                        return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                    }
                                },

                                {
                                    "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                    render: function (data, type, full, meta) {
                                        return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                    }
                                },

                                { "data": "CostString", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Cost of the Claim", sClass: "text-center", sType: "currency" }
                            ],
                            buttons: [
                                {
                                    extend: 'excel',
                                    filename: 'Data export-' + FARName,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'excel-btn',
                                    titleAttr: 'Export'
                                },
                                {
                                    extend: 'colvis',

                                    //autoClose: true,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'column-btn',
                                    titleAttr: 'More'
                                },
                            ],
                            columnDefs: [{
                                targets: [11, 12, 13],
                                visible: false
                            }
                            ]
                        });
                    }, 500);
                }

            }
            else if (data.ReportType == "hharanking") {
                setTimeout(function () {
                    $('#tblHHADetailsSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            {
                                "data": "EncounterId", "title": "EncounterID", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"hharanking\",\"" + full['PatientLastName'] + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "Admission Date", sClass: "text-center" },
                            { "data": "EncounterDischargeDate", "title": "Discharge Date", sClass: "text-center" },
                            { "data": "LengthOfStay", "title": "LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" },
                            { "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" }

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "snfranking") {
                setTimeout(function () {
                    $('#tblSNFDetailsSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            {
                                "data": "EncounterId", "title": "EncounterID", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"snfranking\",\"" + full['PatientLastName'] + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "Admission Date", sClass: "text-center" },
                            { "data": "EncounterDischargeDate", "title": "Discharge Date", sClass: "text-center" },
                            { "data": "LengthOfStay", "title": "LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" },
                            //{ "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" }
                            {
                                "data": "DischargeStatus", "title": "Discharge Status", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }

                            },

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "hospital") {
                setTimeout(function () {
                    $('#tblHospitalDetailsSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            {
                                "data": "EncounterId", "title": "EncounterID", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"hospital\",\"" + full['PatientLastName'] + "\" ,\"" + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\"  );return false'>" + data + "</a>";

                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "Admission Date", sClass: "text-center" },
                            { "data": "EncounterDischargeDate", "title": "Discharge Date", sClass: "text-center" },
                            { "data": "LengthOfStay", "title": "LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" },
                            { "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" }

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "utilizationadvancesummary") {

                var sourceCols;
                var tableName;
                var columnsmodifier = '';
                var columnDefsUAS;

                switch (UASType) {
                    case 'Admit':
                        tableName = "tblutilizationAdvanceSummaryAdmitDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center", "sType": "date", "bSortable": "true" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'Outpatient':
                        tableName = "tblutilizationAdvanceSummaryOutpatientDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center", "sType": "date", "bSortable": "true" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'OBS':
                        tableName = "tblutilizationAdvanceSummaryOBSDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center", "sType": "date", "bSortable": "true" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'Hospice':
                        tableName = "tblutilizationAdvanceSummaryHospiceDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center", "sType": "date", "bSortable": "true" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'Readmit':
                        tableName = "tblutilizationAdvanceSummaryReAdmitDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center", sType: "date", "bSortable": "true" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'ER':
                        tableName = "tblutilizationAdvanceSummaryERDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDate", "title": "Claim Date", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                                }

                            },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16';
                        columnDefsUAS = [{
                            targets: [15, 16],
                            visible: false
                        }];
                        break;

                    case 'SNF':
                        tableName = "tblutilizationAdvanceSummarySNFDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },
                            { "data": "ClaimFromDateStr", "title": "Claim from date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Through date", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "ClaimDateStr", "title": "Claim date", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost of claim", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "DiagnosisCodes", "title": "Diagnosis Group Code", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13';
                        columnDefsUAS = [{
                            targets: [10, 11, 12, 13],
                            visible: false
                        }];
                        break;

                    case 'SNFReadmit':
                        tableName = "tblutilizationAdvanceSummarySNFReadmitDetailsSecond";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDate", "title": "Claim Date", sClass: "text-center", sType: "date", "bSortable": "true"

                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '3,4,5,6,7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    /* Practice and physician Wise popup */

                    case 'AWV_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryAWVsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "Id", "title": "Id", sClass: "hidden" },
                            { "data": "HICN", "title": "HICN", sClass: "text-center" },
                            { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "RiskScore", "title": "Risk Score", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Assigned Practice", sClass: "text-center" },
                            { "data": "PhysicianName", "title": "Assigned Provider Name", sClass: "text-center" },
                            { "data": "RecentAWVCode", "title": "Recent AWV Code", sClass: "text-center" },
                            { "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center" },
                            { "data": "NextAWVDate", "title": "Next AWV Date", sClass: "text-center" },
                            { "data": "PastDueStr", "title": "Days Past Due", sClass: "text-center" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "ClaimDateAWV", "title": "Claim Date", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Physician Specialty", sClass: "text-center" }
                        ];
                        columnsmodifier = '4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26';
                        columnDefsUAS = [{
                            targets: [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26],
                            visible: false
                        }];
                        break;

                    case 'Admit_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryAdmitsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            { "data": "HICN", "title": "Medicare Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Admit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Admit" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'Readmit_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryReadmitsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            { "data": "HICN", "title": "Medicare Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Readmit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Readmit" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "NumberOfReAdmissions", "title": "Number of Readmissions", sClass: "text-center" },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number Of Encounters", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17,18';
                        columnDefsUAS = [{
                            targets: [15, 16, 17, 18],
                            visible: false
                        }];
                        break;

                    case 'ER_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryERsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "ER" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "ER" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "HICN", "title": "Medicare Id" },
                            { "data": "TotalERVisits", "title": "Total ER Visits", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div sclass='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div  name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'SNF_Pra_phy':
                        tableName = "tblutilizationAdvanceSummarySNFsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            {
                                "data": "HICN", "title": "Medicare Id", sClass: "text-center"
                            },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "SNF" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "SNF" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "MRAScore", "title": "MRA", sClass: "text-center" },
                            { "data": "Deceased", "title": "Deceased Status", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (data != null && data.length > 0) {

                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "TotalNumberOfUniqueEncounters", sClass: "text-center" },
                            { "data": "AverageLengthOfStay", "title": "Average LOS", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16';
                        columnDefsUAS = [{
                            targets: [13],
                            visible: false
                        }];
                        break;

                    case 'SNFReadmit_Pra_phy':
                        tableName = "tblutilizationAdvanceSummarySNFReadmitsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            { "data": "HICN", "title": "Medicare Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "SNFReadmit" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "SNFReadmit" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "NumberOfReAdmissions", "title": "Number of Readmissions", sClass: "text-center" },
                            { "data": "TotalNumberOfUniqueEncounters", "title": "Number Of Encounters", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17,18';
                        columnDefsUAS = [{
                            targets: [16, 17, 18],
                            visible: false
                        }];
                        break;

                    case 'Hospice_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryHospicesDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            {
                                "data": "HICN", "title": "Medicare Id", sClass: "text-center"
                            },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Hospice" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Hospice" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'Outpatient_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryOutpatientsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            { "data": "HICN", "title": "Medicare Id", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "Outpatient" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "Outpatient" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;

                    case 'OBS_Pra_phy':
                        tableName = "tblutilizationAdvanceSummaryOBSsDetails";
                        sourceCols = [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "PatientId", "title": "Id", sClass: "hidden" },
                            { "data": "Month1", "title": "Month", sClass: "hidden" },
                            { "data": "PhysicianId", "title": "PhysicianId", sClass: "hidden" },
                            { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                            {
                                "data": "HICN", "title": "Medicare Id", sClass: "text-center"
                            },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['PatientId'] + "\" , \"utilizationadvancesummary\",\"" + "OBS" + "\",\"" + full['PatientName'] + "\",\"" + full['PracticeId'] + "\",\"" + full['PhysicianId'] + "\",null,null,\"" + full['PatientName'] + "\",null,\"" + full['Month1'] + "\",\"" + "OBS" + "\", null );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "PhysicianLastName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "NumberOfAdmissions", "title": "Number of Admissions", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ICDCodes", "title": "Admitting Diagnosis Code (ICD Code)", "width": "150px", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }
                        ];
                        columnsmodifier = '7,8,9,10,11,12,13,14,15,16,17';
                        columnDefsUAS = [{
                            targets: [15, 16, 17],
                            visible: false
                        }];
                        break;
                }
                setTimeout(function () {
                    $('#' + tableName).dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        fixedHeader: true,
                        //scrollY: "350px",
                        scrollY: false,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        "columns": sourceCols,
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                columns: columnsmodifier,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn'
                            }
                        ],
                        columnDefs: columnDefsUAS,
                    });
                }, 500);

            }
            else if (data.ReportType == "servicefund") {

                if (FacilityName == "SNF") {
                    if ($.fn.DataTable.isDataTable('#tblservicefundDetailsSecondSNF')) {
                        $('#tblservicefundDetailsSecondSNF').DataTable().destroy();
                    }

                    setTimeout(function () {
                        $('#tblservicefundDetailsSecondSNF').dataTable({
                            "dom": 'Bfrltip',
                            data: data.ReportDetailsSecond,
                            destroy: true,
                            pagingType: "simple",
                            scrollX: true,
                            fixedHeader: true,
                            //scrollY: "350px",
                            scrollY: false,
                            "language": {
                                "search": "",
                                "sZeroRecords": "No data available ",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dt-buttons').addClass('pull-right buttons_line');
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                //$('.dataTables_filter input').attr('placeholder', 'Search');
                                colvis_inner_button();
                                $('.column-btn').click(function () {
                                    $column_btn_this = $(this)
                                    colvis_scroll();
                                });
                                $(document).on('click', '.dt-button-collection .dt-button', function () {
                                    colvis_inner_button();
                                });
                            },
                            aoColumns: [
                                { "data": "ClaimOrganizationID", "title": "FacilityId", sClass: "text-center" },
                                {
                                    "data": "ClaimOrganizationName", "title": "Facility Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        debugger
                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"servicefund\",\"" + "\" ,\"" + full['ClaimType'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['ClaimOrganizationID'] + "\" ,\"" + "\" ,\"" + full['ClaimOrganizationName'] + "\",\"" + full['Period'] + "\"  );return false'>" + data + "</a>";
                                    }
                                },
                                { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                                { "data": "AverageCostPerClaim", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Claim", sClass: "text-center", sType: "currency" },
                                { "data": "AverageCostPerPatient", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Patient", sClass: "text-center", sType: "currency" },
                                { "data": "AvgCostPerEncounter", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Encounter", sClass: "text-center", sType: "currency" },
                                { "data": "TotalNumberOfUniqueEncounters", "title": "Total Encounters", sClass: "text-center" },
                                { "data": "AverageEncounterPerPatient", "title": "Total Encounters/Patient", sClass: "text-center" },
                                { "data": "Cost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost by Facility", sClass: "text-center", sType: "currency" },
                                { "data": "DischargetoHospital", "title": "Discharge to Hospital", sClass: "text-center" },
                                { "data": "DischargetoHHA", "title": "Discharge to HHA", sClass: "text-center" },
                                { "data": "DischargetoSNF", "title": "Discharge to SNF", sClass: "text-center" },
                                { "data": "DischargetoHome", "title": "Discharge to Home", sClass: "text-center" }
                            ],

                            buttons: [
                                {
                                    extend: 'excel',
                                    filename: 'Data export-' + FARName,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'excel-btn',
                                    titleAttr: 'Export'
                                },
                                {
                                    extend: 'colvis',
                                    // autoClose: true,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'column-btn',
                                    titleAttr: 'More'
                                },
                            ]
                        });
                    }, 500);
                }
                else {
                    if ($.fn.DataTable.isDataTable('#tblservicefundDetailsSecond')) {
                        $('#tblservicefundDetailsSecond').DataTable().destroy();
                    }

                    setTimeout(function () {
                        $('#tblservicefundDetailsSecond').dataTable({
                            "dom": 'Bfrltip',
                            data: data.ReportDetailsSecond,
                            destroy: true,
                            pagingType: "simple",
                            scrollX: true,
                            fixedHeader: true,
                            //scrollY: "350px",
                            scrollY: false,
                            "language": {
                                "search": "",
                                "sZeroRecords": "No data available ",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dt-buttons').addClass('pull-right buttons_line');
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                //$('.dataTables_filter input').attr('placeholder', 'Search');
                                colvis_inner_button();
                                $('.column-btn').click(function () {
                                    $column_btn_this = $(this)
                                    colvis_scroll();
                                });
                                $(document).on('click', '.dt-button-collection .dt-button', function () {
                                    colvis_inner_button();
                                });
                            },
                            aoColumns: [
                                { "data": "ClaimOrganizationID", "title": "Facility NPI", sClass: "text-center" },
                                {
                                    "data": "ClaimOrganizationName", "title": "Facility Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        debugger
                                        return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"servicefund\",\"" + "\" ,\"" + full['ClaimType'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + "\" ,\"" + full['ClaimOrganizationID'] + "\" ,\"" + "\" ,\"" + full['ClaimOrganizationName'] + "\",\"" + full['Period'] + "\"  );return false'>" + data + "</a>";
                                    }
                                },
                                { "data": "TotalPatients", "title": "Total Patients", sClass: "text-center" },
                                { "data": "AverageCostPerClaim", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Claim", sClass: "text-center", sType: "currency" },
                                { "data": "AverageCostPerPatient", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Patient", sClass: "text-center", sType: "currency" },
                                { "data": "AvgCostPerEncounter", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Avg Cost/Encounter", sClass: "text-center", sType: "currency" },
                                { "data": "TotalNumberOfUniqueEncounters", "title": "Total Encounters", sClass: "text-center" },
                                { "data": "AverageEncounterPerPatient", "title": "Total Encounters/Patient", sClass: "text-center" },
                                { "data": "Cost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost by Facility", sClass: "text-center", sType: "currency" }
                            ],

                            buttons: [
                                {
                                    extend: 'excel',
                                    filename: 'Data export-' + FARName,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'excel-btn',
                                    titleAttr: 'Export'
                                },
                                {
                                    extend: 'colvis',
                                    // autoClose: true,
                                    exportOptions: {
                                        columns: ':visible'
                                    },
                                    className: 'column-btn',
                                    titleAttr: 'More'
                                },
                            ]
                        });
                    }, 500);
                }
            }
            else if (data.ReportType == "SERVICEFUNDINST") {
                debugger;
                setTimeout(function () {

                    $('#tblservicefundDetailsINSTSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        fixedHeader: true,
                        // scrollY: "350px",
                        scrollY: false,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "PracticeName", "title": "Assigned Practice Name", sClass: "text-center" },
                            {
                                "data": "PhysicianName", "title": "Claims Physician Name", sClass: "text-center",

                                "render": function (data, type, full, meta) {
                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupThird(\"" + full['Id'] + "\" , \"SERVICEFUNDINST\",\"" + full['PhysicianName'] + "\" ,\"" + full['SpecialityType'] + "\" , \"" + full['PracticeId'] + "\" ,\"" + full['PhysicianId'] + "\" ,\"" + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityName'] + "\" ,\"" + full['FacilityName'] + "\" ,\"" + full['Period'] + "\");return false'>" + data + "</a>";
                                }
                            },
                            { "data": "TotalClaims", "title": "Number Of Claims", sClass: "text-center" },
                            { "data": "NumberOfAssignedBeneficiaries", "title": "Number Of Beneficiaries", sClass: "text-center" },
                            { "data": "AverageCostPerClaimString", "title": "CostPerClaims", sClass: "text-center" },
                            { "data": "AverageCostPerPatientWithDollar", "title": "CostPerBenificiary", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" },

                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);
            }
            else if (data.ReportType == "SERVICEFUNDPHAR") {
                if ($.fn.DataTable.isDataTable('#tblservicefundDetailsPHARSecond')) {
                    $('#tblservicefundDetailsPHARSecond').DataTable().destroy();
                }
                setTimeout(function () {

                    $('#tblservicefundDetailsPHARSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        fixedHeader: true,
                        //scrollY: "350px",
                        scrollY: false,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        // order: [[6, "desc"]],
                        aoColumns: [
                            { "data": "Period", "title": "Period", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Assigned Practice Name", sClass: "text-center" },
                            { "data": "PCPName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "PatientFullName", "title": "PatientName", sClass: "text-center" },
                            { "data": "Id", "title": "PatientId", sClass: "hidden" },
                            { "data": "DateOfBirth", "title": "DOB", sClass: "hidden" },
                            { "data": "Therapeuticclass", "title": " Therapeutic class", sClass: "text-center" },
                            { "data": "RxNumber", "title": "Rx Number", sClass: "text-center" },
                            { "data": "FillDate", "title": "Fill Date", sClass: "hidden" },
                            { "data": "NDCCode", "title": "NDC Code", sClass: "text-center" },
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);
            }
            else if (data.ReportType == "er") {
                setTimeout(function () {
                    tblAdmissionDetails
                    $('#tblAdmissionDetailsSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        order: [[9, "desc"]],
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCS Code Description", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICD Code Description", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCC Code Description", sClass: "hidden" },
                            {
                                "data": "AvoidableERV", "title": "Avoidable ERV", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    if (full["AvoidableERV"] == 'Yes') {
                                        return data;
                                    } else {
                                        return '-';
                                    }
                                }
                            },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center", "sType": "date", "bSortable": "true"

                            },

                            {
                                "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center",

                            },
                            {
                                "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center",

                            },
                            {
                                data: { ICDCodes: "ICDCodes", ICDCodeDescription: "ICDCodeDescription" },
                                title: "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return '<span data-toggle="tooltip" title="' + data.ICDCodeDescription + '">' + data.ICDCodes + '</span>';
                                }
                            },
                            {
                               // "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                data: { HCPCSCode: "HCPCSCode", HCPCSCodeDescription: "HCPCSCodeDescription" },
                                title: "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return '<span data-toggle="tooltip" title="' + data.HCPCSCodeDescription + '">' + data.HCPCSCode + '</span>';
                                }

                            },

                            {
                                //"data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                //render: function (data, type, full, meta) {
                                //    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                //},
                                data: { HCCCodes: "HCCCodes", HCCCodeDescription: "HCCCodeDescription" },
                                title: "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return '<span data-toggle="tooltip" title="' + data.HCCCodeDescription + '">' + data.HCCCodes + '</span>';
                                }

                            },
                            { "data": "CostString", "title": "Cost ", sClass: "text-center", sType: "currency" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                },

                            },
                            { "data": "FacilityName", "title": "Facility Name/NPI", sClass: "text-center" },
                            { "data": "ClaimType", "title": "Claim type", sClass: "text-center" },
                            {
                                "data": "PlaceOfServiceCodes", "title": "Place of Service Code", "width": "30%", sClass: "text-center"

                            },
                           
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Claims  Physician Specialty", sClass: "text-center" },
                            { "data": "CostString", "title": "Part A ER Costs ", sClass: "text-center", sType: "currency" },
                            { "data": "CostString", "title": "Part A ER Costs ", sClass: "text-center", sType: "currency" },

                           

                           
                           
                            



                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }

            else if (data.ReportType == "admission") {
                setTimeout(function () {
                    tblAdmissionDetails
                    $('#tblAdmissionDetailsSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        order: [[9, "desc"]],
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            { "data": "CostString", "title": "Claim Cost ", sClass: "text-center", sType: "currency" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Claims  Physician Specialty", sClass: "text-center" },
                            {
                                "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center", "sType": "date", "bSortable": "true"

                            },
                            {
                                "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center",

                            },
                            {
                                "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center",

                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",


                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },

                            },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px'>" + data + "</div>";
                                },

                            }




                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "readmission") {
                setTimeout(function () {
                    tblAdmissionDetails
                    $('#tblReAdmissionDetailsSecond').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        order: [[9, "desc"]],
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claim Id", sClass: "text-center" },
                            {
                                "data": "ClaimDate", "title": "Claim Effective Date", sClass: "text-center", sType: "date", "bSortable": "true"

                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            {
                                "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                },
                            },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div  name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                                }
                            },
                            { "data": "CostString", "title": "Claim cost", sClass: "text-center", sType: "currency" },
                            {
                                "data": "ClaimFromDate", "title": "Claim From Date", sClass: "text-center",

                            },
                            {
                                "data": "ClaimThruDate", "title": "Claim Thru Date", sClass: "text-center",

                            },
                            { "data": "PlaceOfServiceCodes", "title": "Place Of Service Codes", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility Name", sClass: "text-center" },
                            { "data": "PhysicianSpecialty", "title": "Claims Physician Specialty", sClass: "text-center" }
                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else {
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}


function closeDetailsPopUpThird() {
    $('.fourth-modal-close').click();
}
function closeDetailsPopUpFirstSecondThird() {
    $('.second-modal-close').click();
    $('.third-modal-close').click();
    $('.fourth-modal-close').click();
}
function closeDetailsPopUpSecondThird() {
    $('.third-modal-close').click();
    $('.fourth-modal-close').click();
}
function closeDetailsPopUpThirdFourth() {
    $('.fourth-modal-close').click();
    $('.fifth-modal-close').click();
}
function closeDetailsPopUpFourth() {
    $('.fifth-modal-close').click();
}
function closeDetailsPopUpFirstSecondThirdFourth() {
    $('.second-modal-close').click();
    $('.third-modal-close').click();
    $('.fourth-modal-close').click();
    $('.fifth-modal-close').click();
}
function showDetailsPopupThird(Id, FARName, PatientName, SpecialityType, PracticeId, PhysicianId, PatientId, FacilityId, EncounterId, FacilityName, Period, HCPCSCode) {
    var currentYear = 1;
    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
    }

    $("#tblHHADetailsThird_wrapper").hide();
    $("#tblSNFDetailsThird_wrapper").hide();
    $("#tblHospitalDetailsThird_wrapper").hide();
    $("#tblSCRDetailsThird_wrapper").hide();
    $("#tblservicefunDetailsThird_wrapper").hide();
    $("#tblservicefundDetailsINSTThird_wrapper").hide();
    if (FARName == "hospital" || FARName == "hharanking" || FARName == "snfranking") {
        $(".modal .modal-title3").css("color", "white");
        $(".modal .modal-title3").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecondThird()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThird()'>" + PatientName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' '>" + EncounterId + "</a>" + " -> Details");
    }
    else if (FARName=="lr"){
        $(".modal .modal-title3").css("color", "white");
        $(".modal .modal-title3").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThird()'>" + PatientName + "</a>" + " -> Details");
    }
    else {
        $(".modal .modal-title3").css("color", "white");
        $(".modal .modal-title3").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecondThird()'>" + SpecialityType + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThird()'>" + PatientName + "</a>" + " -> Details");
    }

    var popup = 'thirdpopup';
    $("#ModalDetailsPopup3").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });


    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/DetailsPopupThird',
        data: JSON.stringify({
            Id: Id,
            FARName: FARName,
            secpopup: popup,
            practiceId: PracticeId,
            physicianId: PhysicianId,
            regionId: RegionId,
            patientId: PatientId,
            specialityType: SpecialityType,
            Year: currentYear,
            RowPhysicianId: '',
            FacilityId: FacilityId,
            EncounterId: EncounterId,
            Period: Period,
            MBI: PatientId,
            HCPCSCode:HCPCSCode,
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {

            if (data.ReportType == "hharanking") {
                setTimeout(function () {
                    $('#tblHHADetailsThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },
                            { "data": "ClaimFromDateStr", "title": "Claim from date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "ClaimDateStr", "title": "Claim Effective Date", sClass: "text-center" },
                            { "data": "CostString", "title": "Claim Cost", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },

                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                },

                            },

                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }

                            },

                            {
                                "data": "DiagnosisCodes", "title": "Diagnosis Group Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='Diagnosis' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }

                        ],


                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3,4,5, 6, 7, 8, 9, 10, 11,12',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "snfranking") {
                setTimeout(function () {
                    $('#tblSNFDetailsThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,

                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },
                            { "data": "ClaimFromDateStr", "title": "Claim from date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Through date", sClass: "text-center" },
                            { "data": "ClaimDateStr", "title": "Claim date", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost of claim", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }

                            },

                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    if (data != null && data > 0 && data != "") {
                                        return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                    }
                                    else {
                                        return 'N/A';
                                    }

                                }

                            },

                            {
                                "data": "DiagnosisCodes", "title": "Diagnosis Group Code", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    if (data != null && data > 0 && data != "")
                                        return data;

                                    else
                                        return 'N/A';
                                }
                            }

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": ' 4, 5, 6, 7, 8, 9, 10, 11,12',
                                autoClose: true,

                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "hospital") {
                setTimeout(function () {
                    $('#tblHospitalDetailsThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        // scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },
                            { "data": "ClaimFromDateStr", "title": "Claim from date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Through date", sClass: "text-center" },
                            { "data": "ClaimDateStr", "title": "Claim date", sClass: "text-center" },
                            { "data": "CostString", "title": "Cost of claim", sClass: "text-center" },
                            {
                                "data": "PhysicianLastName", "title": "Attending Physician", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return data + ', ' + full["PhysicianFirstName"];
                                }
                            },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }

                            },

                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }

                            },

                            { "data": "DiagnosisCodes", "title": "Diagnosis Group Code", sClass: "text-center" }

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "lr") {
                setTimeout(function () {
                    $('#tblLABDetailsThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        // scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },//,
                            { "data": "ClaimDate", "title": "Claim Effective Date", sClass: "text-center" },
                            { "data": "ClaimFromDate", "title": "Claim from date", sClass: "text-center" },
                            { "data": "ClaimFromDate", "title": "Through date", sClass: "text-center" },
                            //{ "data": "ClaimDateStr", "title": "Claim date", sClass: "text-center" },
                            { "data": "Cost", "title": "Cost", sClass: "text-center" },
                            {
                                "data": "ICDCodes", "title": "ICD Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip' title=\"" + full["ICDCodeDescription"] + "\">" + data + "</div>";
                                }

                            },
                           {
                               "data": "HCPCSCode", "title": "HCPCS Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip' title=\"" + full["HCPCSCodeDescription"] + "\">" + data + "</div>";
                                }

                            },

                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip' title=\"" + full["HCCCodeDescription"] + "\">" + data + "</div>";
                                }
                            },
                            

                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },

                            { "data": "FacilityName", "title": "Facility Name/NPI", sClass: "text-center" },

                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },

                            { "data": "PlaceOfServiceCodes", "title": "Place of Service Code", sClass: "text-center" },

                            { "data": "ClaimsPhysicianName", "title": "Claims Physician Name", sClass: "text-center" },

                            { "data": "ClaimPhysicianSpeciality", "title": "Claims Physician Specialty", sClass: "text-center" },

                        ],

                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12',
                                // autoClose: true,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "scr") {
                setTimeout(function () {
                    $('#tblSCRDetailsThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        //scrollY: 600,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                            { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                            { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                            {
                                "data": "MBI", "title": "PatientId", sClass: "text-center"
                            },
                            { "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center" },
                            { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                            { "data": "ClaimId", "title": "Claims ID", sClass: "text-center" },
                            { "data": "ClaimFromDateStr", "title": "Claim From Date", sClass: "text-center" },
                            { "data": "ClaimThruDateStr", "title": "Claim Thru Date", sClass: "text-center" },
                            { "data": "EffectiveDateStr", "title": "Claim Effective Date", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place of Service Codes", sClass: "text-center" },
                            { "data": "CostWithSymbol", "title": "Cost of claims", sClass: "text-center" },


                            {
                                "data": "ICDCodes", "title": "ICD Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='ICD' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCPCSCode", "title": "Procedure Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            },
                            {
                                "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center",
                                "render": function (data, type, full, meta) {
                                    return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                                }
                            }

                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '3, 4, 5,6,7,8,9,10,11,12,13,14,15,16',
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                        ,
                        columnDefs: [{
                            targets: [14, 15, 16],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else if (data.ReportType == "servicefund") {

                setTimeout(function () {
                    $('#tblservicefunDetailsThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,

                        pagingType: "simple",
                        scrollX: true,
                        scrollY: false,
                        scrollCollapse: true,
                        scroller: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            //  { "data": "FacilityId", "title": "FacilityId", sClass: "hidden" },
                            //   { "data": "FacilityName", "title": "FacilityName", sClass: "hidden" },
                            // { "data": "Id", "title": "Id", sClass: "hidden" },
                            {
                                "data": "MBI", "title": "PatientId", sClass: "text-center"
                            },
                            { "data": "DateOfBirth", "title": "DOB", sClass: "text-center" },
                            {
                                "data": "PatientName", "title": "Beneficiary Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupFourth(\"" + full['Id'] + "\" ,\"servicefund\",\"" + full['PatientName'] + "\" ,\"" + full['ClaimType'] + "\"  ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\"  ,\"" + full['Id'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + "\" ,\"" + full['Period'] + "\"   );return false'>" + data + full['PatientFirstName'] + "</a>";
                                }
                            },
                            { "data": "MRAScore", "title": "MRA", sClass: "text-center" },
                            { "data": "PhysicianName", "title": "Assigned PCP", sClass: "text-center" },

                            { "data": "TotalNumberOfUniqueEncounters", "title": "NumberOfEncounters", sClass: "text-center" },
                            { "data": "LastEncounterDate", "title": "Last Encounter Date", sClass: "text-center" }
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '0,1,2,3, 4, 5, 6',
                                autoClose: true,

                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);

            }

            else if (data.ReportType == "SERVICEFUNDINST") {
                if ($.fn.DataTable.isDataTable('#tblservicefundDetailsINSTThird')) {
                    $('#tblservicefundDetailsINSTThird').DataTable().destroy();
                }
                setTimeout(function () {
                    $('#tblservicefundDetailsINSTThird').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,

                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            //{"data": "Id", "title": "PatientId", sClass: "hidden"},
                            {
                                "data": "PatientName", "title": "Patient Name", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupFourth(\"" + full['Id'] + "\" , \"SERVICEFUNDINST\",\"" + full['PatientName'] + "\" ,\"" + SpecialityType + "\" ,\"" + PracticeId + "\"  ,\"" + PhysicianId + "\"  ,\"" + full['Id'] + "\" ,\"" + full['FacilityId'] + "\" ,\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\",\"" + full['Period'] + "\" );return false'>" + data + full['PatientFirstName'] + "</a>";
                                }
                            },
                            { "data": "PracticeName", "title": "Assigned Practice Name", sClass: "text-center" },
                            { "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "OrganizationNPIName", "title": "Organization NPI Name", sClass: "text-center" },
                            { "data": "ServicingProvider", "title": "Servicing Provider", sClass: "hidden" },
                            { "data": "CostString", "title": "Cost", sClass: "text-center" }

                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // "columns": ' 4, 5, 6, 7, 8, 9, 10, 11,12',
                                // autoClose: true,

                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                    });
                }, 500);
            }
            else {
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}
function showDetailsPopupFourth(Id, FARName, PatientName, SpecialityType, PracticeId, PhysicianId, PatientId, FacilityId, Claimtype, FacilityName, Month) {

    var currentYear = 1;
    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    PatientNameInsti = PatientName;
    $("#tblservicefunDetailsFourth_wrapper").hide();
    $("#tblservicefundDetailsINSTFourth_wrapper").hide();

    if (FARName == "SERVICEFUNDINST") {

        FacilityNameInsti = ClaimPhyProf;
    }
    if (FARName == "hospital" || FARName == "hharanking" || FARName == "snfranking") {
        $(".modal .modal-title4").css("color", "white");
        $(".modal .modal-title4").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecondThird()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThird()'>" + PatientName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' '>" + EncounterId + "</a>" + " -> Details");
    }
    else if (FARName == "servicefund" || FARName == "SERVICEFUNDINST") {
        $(".modal .modal-title4").css("color", "white");
        $(".modal .modal-title4").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThirdFourth()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + SpecialityType + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThirdFourth()'>" + FacilityNameInsti + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFourth()'>" + PatientName + "</a>" + " -> Details");
    }
    else {
        $(".modal .modal-title4").css("color", "white");
        $(".modal .modal-title4").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThirdFourth()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + SpecialityType + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThirdFourth()'>" + PatientName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFourth()'>" + EncounterId + "</a>" + " -> Details");
    }
    var popup = 'Fourthpopup';
    $("#ModalDetailsPopup4").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/DetailsPopupfourth',
        data: JSON.stringify({
            Id: Id,
            FARName: FARName,
            secpopup: popup,
            practiceId: PracticeId,
            physicianId: PhysicianId,
            regionId: RegionId,
            patientId: PatientId,
            specialityType: SpecialityType,
            Year: currentYear,
            RowPhysicianId: '',
            FacilityId: FacilityId,
            Claimtype: Claimtype,
            Month: Month,
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {

            if (data.ReportType == "servicefund") {
                setTimeout(function () {
                    $('#tblservicefunDetailsFourth').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,
                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            //{ "data": "FacilityId", "title": "FacilityId", sClass: "hidden" },
                            {
                                "data": "EncounterId", "title": "EncounterID", sClass: "text-center",
                                "render": function (data, type, full, meta) {

                                    return "<a href='javascript:void(0);' onclick='showDetailsPopupfifth(\"" + full['Id'] + "\" , \"servicefund\",\"" + full['PatientLastName'] + "\" ,\"" + full['ClaimType'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\",\"" + full['FacilityId'] + "\",\"" + full['EncounterId'] + "\" ,\"" + full['FacilityName'] + "\" ,\"" + full['Period'] + "\"  );return false'>" + data + "</a>";
                                }
                            },
                            { "data": "EncounterAdmissionDate", "title": "Date of Service", sClass: "text-center" },
                            { "data": "ServicingProvider", "title": " Servicing Provider", sClass: "text-center" },
                            {
                                "data": "ProcedureCodes", "title": "Procedure Codes", "width": "30%", sClass: "text-center",
                                render: function (data, type, full, meta) {
                                    return "<div class='text-wrap'>" + data + "</div>";
                                }
                            },
                            { "data": "EncounterDischargeDate", "title": "Last Encounter Date", sClass: "text-center" },
                            { "data": "CostString", "title": "Total Cost", sClass: "text-center" },
                            { "data": "DischargeStatus", "title": "Discharge Status", sClass: "text-center" },
                            { "data": "Deceased", "title": "Deceased Status", sClass: "text-center" },
                            { "data": "DateOfBirth", "title": "DateOfBirth", sClass: "text-center" },
                            { "data": "PracticeName", "title": "Assigned Practice", sClass: "text-center" },
                            { "data": "AverageLengthOfStay", "title": "LOS", sClass: "text-center" }
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                "columns": '0,1,2,3,4, 5, 6, 7,8,9,10',
                                // autoClose: true,

                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ],
                        columnDefs: [{
                            targets: [7, 8, 9, 10],
                            visible: false
                        }
                        ]

                    });
                }, 500);

            }
            else if (data.ReportType == "SERVICEFUNDINST") {

                setTimeout(function () {
                    $('#tblservicefundDetailsINSTFourth').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,

                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "Period", "title": "Period", sClass: "text-center" },
                            { "data": "PracticeName", "title": "PracticeName", sClass: "text-center" },
                            { "data": "PCPName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
                            { "data": "MBI", "title": "Patient ID", sClass: "text-center" },
                            {
                                "data": "DateOfBirth", "title": "Date Of Birth", sClass: "text-center", "render": function (data) {
                                    if (data != null && data.length > 0) {

                                        d = data.split(' ')[0];
                                        return d;
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "ClaimId", "title": "Claim Number", sClass: "text-center" },
                            { "data": "ClaimLineNumber", "title": "Claim Line", sClass: "text-center" },
                            { "data": "ClaimFromDate", "title": "From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "To Date", sClass: "text-center" },
                            { "data": "BillType", "title": "Bill Type", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place of Service", sClass: "text-center" },
                            { "data": "FacilityName", "title": "Facility", sClass: "text-center" },
                            { "data": "ServicingProvider", "title": "Service Provider", sClass: "text-center" },
                            { "data": "ProcedureCodes", "title": "Procedure Code", sClass: "text-center" },
                            { "data": "ProcCat", "title": "Procedure Category", sClass: "text-center" },
                            { "data": "ProcedureCodeModifiers", "title": "Procedure Modifier", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
                            { "data": "PaidAmount", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Paid Amount", sClass: "text-center", sType: "currency" },
                            { "data": "BilledAmount", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Billed Amount", sClass: "text-center", sType: "currency" },
                            { "data": "CopayAmount", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Copay", sClass: "text-center", sType: "currency" },
                            { "data": "DiagnosisCodes", "title": "Diagnosis Codes", sClass: "text-center" },
                            { "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center" },
                            { "data": "LOB", "title": "LOB", sClass: "text-center" },
                            { "data": "HelathPlan", "title": "Health Plan", sClass: "text-center" },
                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // "columns": ' 4, 5, 6, 7, 8, 9, 10, 11,12',
                                // autoClose: true,

                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                        ,
                        columnDefs: [{
                            targets: [16, 25, 26],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else {
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}
function showDetailsPopupfifth(Id, FARName, PatientName, SpecialityType, PracticeId, PhysicianId, PatientId, FacilityId, EncounterId, FacilityName, Month) {
    var currentYear = 1;
    if ($("#FARlast_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    $("#tblservicefunDetailsFifth_wrapper").hide();
    if (FARName == "SERVICEFUNDINST") {
        SpecialityType = SpecialtyProf;
        FacilityNameInsti = ClaimPhyProf;
        PatientNameInsti = PatientName;
    }
    if (FARName == "hospital" || FARName == "hharanking" || FARName == "snfranking") {
        $(".modal .modal-title5").css("color", "white");
        $(".modal .modal-title5").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpSecondThird()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThird()'>" + PatientName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' '>" + EncounterId + "</a>" + " -> Details");
    }
    else if (FARName == "servicefund" || FARName == "SERVICEFUNDINST") {
        $(".modal .modal-title5").css("color", "white");
        $(".modal .modal-title5").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThirdFourth()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + SpecialityType + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + FacilityNameInsti + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThirdFourth()'>" + PatientNameInsti + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFourth()'>" + EncounterId + "</a>" + " -> Details");
    }
    else if (FARName == "servicefundPL") {
        FARName = "servicefund"
        $(".modal .modal-title5").css("color", "white");
        $(".modal .modal-title5").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThirdFourth()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + SpecialityType + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + FacilityName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThirdFourth()'>" + PatientName + "</a>" + " -> Details");
        SpecialityType = serviceFundClaimType;
    }
    else {
        $(".modal .modal-title5").css("color", "white");
        $(".modal .modal-title5").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Reports </a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThirdFourth()'>" + detailtitle.split('-')[0] + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFirstSecondThird()'>" + SpecialityType + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpThirdFourth()'>" + PatientName + "</a>"
            + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUpFourth()'>" + EncounterId + "</a>" + " -> Details");
    }

    var popup = '';
    if (NetworkORPracticeFilter == 'Practicelevel')
        popup = 'fifthpopup_PL';
    else
        popup = 'fifthpopup';

    $("#ModalDetailsPopup5").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });


    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/DetailsPopupfifth',
        data: JSON.stringify({
            Id: Id,
            FARName: FARName,
            secpopup: popup,
            practiceId: PracticeId,
            physicianId: PhysicianId,
            regionId: RegionId,
            patientId: Id,
            specialityType: SpecialityType,
            Year: currentYear,
            RowPhysicianId: '',
            FacilityId: FacilityId,
            EncounterId: EncounterId,
            Month: Month
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        success: function (data) {

            if (data.ReportType == "servicefund") {

                setTimeout(function () {
                    $('#tblservicefunDetailsFifth').dataTable({
                        "dom": 'Bfrltip',
                        data: data.ReportDetailsSecond,
                        destroy: true,

                        pagingType: "simple",
                        scrollX: true,
                        "language": {
                            "search": "",
                            "sZeroRecords": "No data available ",
                            paginate: {
                                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                            }
                        },
                        initComplete: function () {
                            $('.dt-buttons').addClass('pull-right buttons_line');
                            $('.dataTables_filter input').addClass('form-control search_text_datatable');
                            $('.dataTables_length select').addClass('form-control selectbox_entries');
                            //$('.dataTables_filter input').attr('placeholder', 'Search');
                            colvis_inner_button();
                            $('.column-btn').click(function () {
                                $column_btn_this = $(this)
                                colvis_scroll();
                            });
                            $(document).on('click', '.dt-button-collection .dt-button', function () {
                                colvis_inner_button();
                            });
                        },
                        aoColumns: [
                            { "data": "Period", "title": "Period", sClass: "text-center" },
                            { "data": "PracticeName", "title": "PracticeName", sClass: "text-center" },
                            //{ "data": "PhysicianName", "title": "PCP Name", sClass: "text-center" },
                            //{ "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
                            //{ "data": "HICN", "title": "Patient ID", sClass: "text-center" },
                            { "data": "PracticeName", "title": "PCP Name", sClass: "text-center" },
                            { "data": "PatientLastName", "title": "Patient Name", sClass: "text-center" },
                            { "data": "MBI", "title": "Patient ID", sClass: "text-center" },
                            {
                                "data": "DateOfBirth", "title": "Date Of Birth", sClass: "text-center", "render": function (data) {
                                    if (data != null && data.length > 0) {

                                        d = data.split(' ')[0];
                                        return d;
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            },
                            { "data": "ClaimType", "title": "Claim Type", sClass: "text-center" },
                            { "data": "ClaimId", "title": "Claim Number", sClass: "text-center" },
                            { "data": "ClaimLineNumber", "title": "Claim Line", sClass: "text-center" },
                            { "data": "ClaimFromDate", "title": "From Date", sClass: "text-center" },
                            { "data": "ClaimThruDate", "title": "To Date", sClass: "text-center" },
                            { "data": "BillType", "title": "Bill Type", sClass: "text-center" },
                            { "data": "PlaceOfServiceCodes", "title": "Place of Service", sClass: "text-center" },


                            { "data": "FacilityName", "title": "Facility", sClass: "text-center" },
                            { "data": "ServicingProvider", "title": "Service Provider", sClass: "text-center" },
                            { "data": "ProcedureCodes", "title": "Procedure Code", sClass: "text-center" },
                            { "data": "ProcCat", "title": "Procedure Category", sClass: "text-center" },
                            { "data": "ProcedureCodeModifiers", "title": "Procedure Modifier", sClass: "text-center" },
                            { "data": "RevenueCode", "title": "Revenue Code", sClass: "text-center" },
                            { "data": "DRGCode", "title": "DRG Code", sClass: "text-center" },
                            { "data": "PaidAmount", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Paid Amount", sClass: "text-center", sType: "currency" },
                            { "data": "BilledAmount", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Billed Amount", sClass: "text-center", sType: "currency" },
                            { "data": "CopayAmount", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Copay", sClass: "text-center", sType: "currency" },
                            { "data": "DiagnosisCodes", "title": "Diagnosis Codes", sClass: "text-center" },
                            { "data": "HCCCodes", "title": "HCC Codes", sClass: "text-center" },
                            { "data": "LOB", "title": "LOB", sClass: "text-center" },
                            { "data": "HelathPlan", "title": "Health Plan", sClass: "text-center" },
                            { "data": "SubPlanIPA", "title": "Sub-PlanIPA", sClass: "text-center" }



                        ],
                        buttons: [
                            {
                                extend: 'excel',
                                filename: 'Data export-' + FARName,
                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'excel-btn',
                                titleAttr: 'Export'
                            },
                            {
                                extend: 'colvis',
                                // "columns": ' 4, 5, 6, 7, 8, 9, 10, 11,12',
                                // autoClose: true,

                                exportOptions: {
                                    columns: ':visible'
                                },
                                className: 'column-btn',
                                titleAttr: 'More'
                            },
                        ]
                        ,
                        columnDefs: [{
                            targets: [25, 26, 27],
                            visible: false
                        }
                        ]
                    });
                }, 500);

            }
            else {
                ValidationMessage("Unable to Process Request. Please Try Again Later.");
            }
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

var pracclinicalid;
var physclinicalid;
function ClinicalDetailsPoup(condition, titleName, practiceId, physicianId, RegId) {
    condition = condition.split('_').join(' ');
    //if (condition === 'Arthritis') {
    //    condition = 'Rheumatoid Arthritis/ Osteoarthritis';
    

    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    export_datayear = currentYear;
    practiceId = pracclinicalid;
    physicianId = physclinicalid;
    RegId = RegionId;
    $("#DivHCHNPatients").hide();
    $("#DivAssignmentPatients").hide();
    $("#DivclinicalDis").show();
    var url = serverRoot + '/Insights/Insights/ClinicalDetails';

    $("#DivclinicalDis").load(url, function () {
        //detailtitle = "Clinical Distribution ";
        if (titleName == "Diagnosis") {
            titleName = "Top expenditures";
        }
        detailtitle = titleName;
        $(".modal .modal-title").css("color", "white");
        $(".modal .modal-title").html("<a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle + "-" + condition + "</a>");
        $("#ModalClinicalDistribution").modal({
            show: true,
            backdrop: 'static',
            keyboard: false
        });

        $(".loader").show();

        if ($.fn.DataTable.isDataTable('#tblClinicalDistribution')) {
            $('#tblClinicalDistribution').DataTable().destroy();
        }

        table = $('#tblClinicalDistribution').dataTable({
            "dom": 'Bfrltip',
            destroy: true,
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            fixedHeader: true,
            // scrollY: "300px",
            scrollY: false,
            "scrollX": true,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/ClinicalDetails',
                "datatype": "json",
                "data": {
                    Condition: condition, PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Year: currentYear, IsAssignable: isAssignable
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
            },

            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                }
            },
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');

                colvis_inner_button();
                $('.column-btn').click(function () {
                    $column_btn_this = $(this)
                    colvis_scroll();
                });
                $(document).on('click', '.dt-button-collection .dt-button', function () {
                    colvis_inner_button();
                });

                var $searchInput = $('div.dataTables_filter input');

                $searchInput.unbind();

                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblClinicalDistribution").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblClinicalDistribution").dataTable().api();
                        dtable.search("").draw();
                    }

                });

            },
            order: [[15, "desc"]],
            aoColumns: [
                { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                { "data": "HICN", "title": "HICN", sClass: "text-center" },

                { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                {
                    "data": "LastName", "title": "Beneficiary Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {

                        return "<a href='javascript:void(0);'onclick = 'showPatientDetails(\"" + full['Id'] + "\",\"" + full['PatientId'] + "\" , \"" + full['ConditionCategory'] + "\",\"" + practiceId + "\",\"" + physicianId + "\",\"" + currentYear + "\",\"" + full['LastName'] + ", " + full['FirstName'] + "\",\"" + full['CostWithDollar'] + "\",\"" + full['MBI'] + "\");return false' > " + data + ', ' + full['FirstName'] + "</a > ";

                        return data + ', ' + full['FirstName'];

                    }
                },
                { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center" },
                {
                    "data": "PracticeName", "title": "Practice Name", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },
                {
                    "data": "PhysicianName", "title": "Assigned Physician", sClass: "text-center"
                },
                {
                    "data": "HCCCode", "title": "HCC codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "HCPCSCodes", "title": "Procedure Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='HCPCS' class='text-wrap width-200px ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "ICDCode", "title": "ICD Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "RevenueCode", "title": "Product Revenue Center Code", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },
                {
                    "data": "PlaceOfServiceCode", "title": "Place of Service Code", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },
                { "data": "ConditionCost", "title": "Condition Cost YTD", sClass: "text-center" },
                { "data": "CostWithDollar", "title": "Total Cost", sClass: "text-center" }
            ],

            buttons: [
                {
                    extend: 'excel',
                    filename: 'Data export-' + condition,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        ExportToExcel('ClinicalDetails', 'tblClinicalDistribution', condition);
                    }
                },
                {
                    extend: 'colvis',
                    "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,14,15',
                    //autoClose: true,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },
            ]
            ,
            columnDefs: [{
                targets: [3, 10, 11, 12, 13],
                visible: false
            }]
        });
        oTable = table.fnSettings();
    })
}

function HighRiskDetailsPoup(condition) {
    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    //alert(condition);
    export_datayear = currentYear;
    $("#DivHCHNPatients").hide();
    $("#DivclinicalDis").show();
    var url = serverRoot + "/Insights/Insights/ClinicalDetails";
    $("#DivclinicalDis").load(url, function () {
        detailtitle = "High Risk Patients";
        $(".modal .modal-title").css("color", "white");
        $(".modal .modal-title").html("<a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + detailtitle + " -" + condition + "</a>");
        $("#ModalClinicalDistribution").modal({
            show: true,
            backdrop: 'static',
            keyboard: false
        });
        //modalheight();
        $(".loader").show();
        table = $('#tblClinicalDistribution').dataTable({
            "dom": 'Bfrltip',
            destroy: true,
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            fixedHeader: true,
            //scrollY: "300px",
            scrollY: false,
            "scrollX": true,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/ClinicalDetails',
                "datatype": "json",
                "data": {
                    Condition: condition, PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Year: currentYear, IsAssignable: isAssignable
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
            },

            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                }
            },
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                $('.column-btn').click(function () {
                    $column_btn_this = $(this)
                    colvis_scroll();
                });
                $(document).on('click', '.dt-button-collection .dt-button', function () {
                    colvis_inner_button();
                });

                var $searchInput = $('div.dataTables_filter input');

                $searchInput.unbind();

                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblClinicalDistribution").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblClinicalDistribution").dataTable().api();
                        dtable.search("").draw();
                    }

                });

            },
            order: [[15, "desc"]],
            aoColumns: [
                { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                { "data": "HICN", "title": "HICN", sClass: "text-center" },

                { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
                {
                    "data": "LastName", "title": "Beneficiary Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {

                        return "<a href='javascript:void(0);' onclick='showPatientDetails(\"" + full['Id'] + "\",\"" + full['PatientId'] + "\" , \"" + condition + "\",\"" + practiceId + "\",\"" + physicianId + "\",\"" + currentYear + "\",\"" + full['LastName'] + ", " + full['FirstName'] + "\",\"" + full['CostWithDollar'] + "\",\"" + full['MBI'] + "\");return false'>" + data + ', ' + full['FirstName'] + "</a>";
                    }
                },
                { "data": "DateOfBirth", "title": "Patient’s DOB", sClass: "text-center" },
                {
                    "data": "PracticeName", "title": "Practice Name", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },
                {
                    "data": "PhysicianName", "title": "Assigned Physician", sClass: "text-center"
                },
                {
                    "data": "HCCCode", "title": "HCC Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='HCC' class='ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "HCPCSCodes", "title": "Procedure Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='HCPCS' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "ICDCode", "title": "ICD Codes", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<div name='ICD' class='ertooltip'>" + data + "</div>";
                    }
                },
                {
                    "data": "RevenueCode", "title": "Product Revenue Center Code", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },
                {
                    "data": "PlaceOfServiceCode", "title": "Place of Service Code", "width": "30%", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap width-200px'>" + data + "</div>";
                    },

                },
                { "data": "ConditionCost", "title": "Condition Cost YTD", sClass: "text-center", sType: "currency" },
                { "data": "CostWithDollar", "title": "Total cost", sClass: "text-center", sType: "currency" }
            ],

            buttons: [
                {
                    extend: 'excel',
                    filename: 'Data export-' + condition,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        ExportToExcel('ClinicalDetails', 'tblClinicalDistribution', condition);
                    }
                },
                {
                    extend: 'colvis',
                    "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,13,14',
                    //autoClose: true,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },
            ]
            ,
            columnDefs: [{
                targets: [3, 10, 12, 13],
                visible: false
            }]
        });
        oTable = table.fnSettings();
    })
}


function HCHNPatientsDetailsPoup(Name) {
    $("#DivclinicalDis").hide();
    $("#DivHCHNPatients").show();
    detailtitle = "HCHN Details";
    var url = serverRoot + "/Insights/Insights/HCHNPatientsDetails";
    $("#DivHCHNPatients").load(url, function () {

        $(".modal .modal-title").css("color", "white");
        $(".modal .modal-title").html(Name + " Patient List");
        $("#ModalClinicalDistribution").modal({
            show: true,
            backdrop: 'static',
            keyboard: false
        });
        var currentYear = 1;
        if ($("#last_year").is(':checked')) {
            currentYear = currentYear - 1;
        }
        export_datayear = currentYear;
        $(".loader").show();
        table = $('#tblHCHNPatients').dataTable({
            "dom": 'Bfrltip',
            "destroy": true,
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            fixedHeader: true,
            //scrollY: "300px",
            scrollY: false,
            "scrollX": true,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/HCHNPatientsDetails',
                "datatype": "json",
                "data": {
                    PracticeName: Name,
                    Year: currentYear,
                    regionId: RegionId,
                    IsAssignable: isAssignable
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
            },

            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>',
                    processing: "Loading..."
                }
            },
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                $('.column-btn').click(function () {
                    $column_btn_this = $(this)
                    colvis_scroll();
                });
                $(document).on('click', '.dt-button-collection .dt-button', function () {
                    colvis_inner_button();
                });

                var $searchInput = $('div.dataTables_filter input');

                $searchInput.unbind();

                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblHCHNPatients").dataTable().api();
                        dtable.search(this.value).draw();
                    }
                    if (this.value.length == 0) {
                        var dtable = $("#tblHCHNPatients").dataTable().api();
                        dtable.search("").draw();
                    }

                });

            },
            order: [[11, "desc"]],
            aoColumns: [
                { "data": "HCPCSCodeDescription", "title": "HCPCSCodeDescription", sClass: "hidden" },
                { "data": "ICDCodeDescription", "title": "ICDCodeDescription", sClass: "hidden" },
                { "data": "HCCCodeDescription", "title": "HCCCodeDescription", sClass: "hidden" },
                { "data": "HICN", "title": "HICN", sClass: "text-center" },
                { "data": "MBI", "title": "PatientId", sClass: "text-center" },
                {
                    "data": "LastName", "title": "Beneficiary Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return data + ', ' + full["FirstName"];
                    }
                },
                { "data": "DateOfBirth", "title": "Patient DOB", sClass: "text-center" },
                { "data": "PracticeName", "title": "Assigned Practice", sClass: "text-center" },
                { "data": "PhysicianName", "title": "Assigned Physician", sClass: "text-center" },
                {
                    "data": "HCCCode", "title": "HCC Codes", sClass: "text-center",
                    render: function (data, type, full, meta) {
                        return "<div name='HCC' class='text-wrap width-200 ertooltip'>" + data + "</div>";
                    }
                },

                { "data": "HighRiskQualifiedCriteria", "title": "Qualified Criteria", sClass: "text-center" },
                { "data": "CostString", "title": "Total Cost", sClass: "text-center", sType: "currency" }
            ],


            buttons: [
                {
                    extend: 'excel',
                    filename: 'Data export-HCHN',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        ExportToExcel('HCHNPatients', 'tblHCHNPatients', Name);
                    }
                },
                {
                    extend: 'colvis',
                    "columns": '3, 4, 5, 6, 7,8,9,10,11',
                    //autoClose: true,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },

            ]
            ,
            columnDefs: [{
                targets: [3],
                visible: false
            }]
        });
        oTable = table.fnSettings();
    })
}


function PatientCensuspopup(condition) {

    detailtitle = "PatientCensusDetails";

    var url = serverRoot + "/Insights/Insights/PatientCensusDetails";


    $(".modal .modal-title").css("color", "white");
    $(".modal .modal-title").html(condition + " Patient List");
    $("#ModalPatientCensusPopup").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    export_datayear = currentYear;
    $(".loader").show();
    table = $('#tblPatientCensuspopup').dataTable({
        "dom": 'Bfrltip',
        destroy: true,
        "processing": true,
        "serverSide": true,
        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
        pagingType: "simple",
        scrollX: true,
        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            }
        },

        //scrollY: "300px",
        scrollY: false,
        "ajax": {
            "type": "POST",
            "url": serverRoot + '/Insights/Insights/PatientCensusDetails',
            "datatype": "json",
            "data": {
                Condition: condition,
                PracticeId: practiceId,
                PhysicianId: physicianId,
                regionId: RegionId,
                Year: currentYear,
                IsAssignable: isAssignable
            },
            "complete": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            },
        },


        initComplete: function () {
            debugger;
            var api = this.api();
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');
            $('.column-btn').click(function () {
                $column_btn_this = $(this)
                colvis_scroll();
            });
            $(document).on('click', '.dt-button-collection .dt-button', function () {
                colvis_inner_button();
            });

            var $searchInput = $('div.dataTables_filter input');

            $searchInput.unbind();

            $searchInput.bind('keyup', function (e) {
                if (this.value.length > 3) {
                    var dtable = $("#tblPatientCensuspopup").dataTable().api();
                    dtable.search(this.value).draw();
                }
                if (this.value.length == 0) {
                    var dtable = $("#tblPatientCensuspopup").dataTable().api();
                    dtable.search("").draw();
                }

            });

            if ((condition == 'Current') || (condition == 'Dropped')) {
                debugger;
                
                api.column(2).visible(true);
                api.column(5).visible(true);
                api.column(6).visible(false);
                api.column(8).visible(false);
                api.column(9).visible(false);
                api.column(10).visible(false);
            }
            else if ((condition == 'Added')) {
                api.column(2).visible(true);
                api.column(5).visible(true);
                api.column(6).visible(false);
                api.column(8).visible(false);
                api.column(9).visible(false);
                api.column(10).visible(false);
            }
            else {
                api.column(2).visible(true);
                api.column(5).visible(true);
                api.column(6).visible(true);
                api.column(8).visible(false);
                api.column(9).visible(false);
                api.column(10).visible(false);
            }


        },
        order: [[7, "desc"]],
        aoColumns: [
            { "data": "HICN", "title": "HICN", sClass: "text-center" },

            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
            { "data": "Typedesc", "title": "Status", sClass: "text-center" },
            {
                "data": "LastNameEncrypted", "title": "Patient Name", sClass: "text-center",
                "render": function (data, type, full, meta) {
                    return data + ', ' + full["FirstNameEncrypted"];
                }
            },

            { "data": "DateOfBirthEncrypted", "title": "DOB", sClass: "text-center" },
            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
            { "data": "Deceased", "title": "Date Of Death", sClass: "text-center" },

            { "data": "CostString", "title": "Total Cost", sClass: "text-center", sType: "currency" },
            { "data": "PreviousAttribution", "title": "Previous Attribution", sClass: "text-center" },
            { "data": "PreviousAttributionName", "title": "Previous Attribution Name", sClass: "text-center" },
            { "data": "PreviousAttributionDate", "title": "Previous Attribution Termed Date", sClass: "text-center" },

        ],




        buttons: [
            {
                extend: 'excel',
                title: 'Data export-' + condition,
                exportOptions: {
                    columns: ':visible'
                },
                className: 'excel-btn',
                titleAttr: 'Export',
                action: function (e, dt, node, config) {
                    ExportToExcel('PatientCensus', 'tblPatientCensuspopup', condition);
                }
            },
            {
                extend: 'colvis', 
                "columns": '1,2,3,4,5,6,7',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'column-btn',
                titleAttr: 'More'
            },

        ]
        ,
        columnDefs: [{
            targets: [0],
            visible: false
        }]
    });
    oTable = table.fnSettings();
}


function ValidationMessage(message) {

    $("#btnok").css("display", "block");
    var url = serverRoot + "/Insights/Insights/Confirm";
    $("#InfoDialog").load(url, function () {
        $("#bootstrapmodalInfo111 .modal-title").html("Error");
        $("#bootstrapmodalInfo111 .modal-body").html(message);
        $("#bootstrapmodalInfo111 .modal-body").css({ "color": "red" });
        $("#btnok").addClass("btn btn-danger");
        $("#bootstrapmodalInfo111").modal({
            show: true,
            backdrop: 'static',
            keyboard: false
        });
        return false;
    })


}

$(document).ready(function () {
    serverRoot = $('#hdnServerRootURL').val();
    if (window.location.hostname == 'localhost')
        serverRoot = '';

    //$('.report_update_date').html(updated_date);
    //$('#awv-chart').attr('checked', true).triggerHandler('click');
    //$('#flu_shot-chart').attr('checked', true).triggerHandler('click');

    select_category_report_incrementid();
    select_report_incrementid();
    hidden_practiceq_incrementid();
    hidden_ppq_incrementid();
    GetCurrentVersusPriorReportDetails(1, 'AWV', null, null)
    //select_Locationcategory_report_incrementid();
    //hidden_Location_incrementid();
});




//auto increment id by dropdown
function select_report_incrementid() {
    var i = 0;
    $('.select_options .child_option').each(function () {
        i++;
        var childID = 'child' + i;
        $(this).attr('id', childID);
        //$(this).val(i);
    });
};

function select_category_report_incrementid() {
    var i = 0;
    $('.select_options .category_option').each(function () {
        i++;
        var optionID = 'option' + i;
        $(this).attr('id', optionID);
        //$(this).val(i);
    });
};
function hidden_practiceq_incrementid() {
    var i = 0;
    $('.select_options .hidden_Regionq').each(function () {
        i++;
        var optionID = 'hidden_Regionq' + i;
        $(this).attr('id', optionID);
        //$(this).val(i);
    });
};
function hidden_ppq_incrementid() {
    var i = 0;
    $('.select_options .hidden_practiceq').each(function () {
        i++;
        var optionID = 'hidden_practiceq' + i;
        $(this).attr('id', optionID);
        //$(this).val(i);
    });
};
//auto increment id by dropdown
$(document).click(function () {
    $('.options').hide();
    $(".select_arrow_dropdown").removeClass("glyphicon-menu-up");
});

$('.options').hide();

$(".dropdown .txt").click(function (e) {

    $('.options').toggle();
    $(".select_arrow_dropdown").toggleClass("glyphicon-menu-up");
    e.stopPropagation();
});
var selectallstatus;
$("#select_all").click(function (e) {

    $(".options").hide();
    $('.txt_val').text($(this).text());
    $(".select_arrow_dropdown").removeClass("glyphicon-menu-up");
    childselection = "false";
    parentselection = "false";
    selectallstatus = null;
    practiceId = null;
    physicianId = null;
    pracclinicalid = null;
    physclinicalid = null;
    RegionId = null;
    isAssignable = null
    var currentYear = 1;
    if ($("#last_year").is(':checked')) {

        ReloadReportDashboard(practiceId, physicianId, RegionId, currentYear - 1, currentYear - 1, 1, 12, isAssignable);
    }
    else if ($("#year_to_date").is(':checked')) {
        ReloadReportDashboard(practiceId, physicianId, RegionId, currentYear, currentYear, -1, -1, isAssignable);
    }
    else {
        ReloadReportDashboard(practiceId, physicianId, RegionId, 1800, currentYear, -1, -1, isAssignable);
    }
    // ReloadReportDashboard(practiceId, physicianId, null, Lstyear, null, null, null, null);
    e.stopPropagation();
});



$(".category_option .glyphicon_arrow_select").click(function (e) {

    $(this).toggleClass("glyphicon_arrow_selected").closest(".category_option").siblings().find(".glyphicon_arrow_select").removeClass("glyphicon_arrow_selected");
    $(this).parent().siblings(".child_option").toggle();
    $(this).closest(".category_option").siblings().find(".child_option").hide();
    e.stopPropagation();

});
var ParentLocationid;
var RegionId = null;

var parentpractid;
var parentselection;
var isAssignable = null;
$(".category_option .category_label").click(function (e) {

    childselection = "false";
    parentselection = "true";
    parentpractid = $(this).closest(".category_option").attr("id");
    // alert(parentpractid);
    // parentpractid = event.target.id;
    $('.txt_val').text($(this).text());
    $(".select_arrow_dropdown").removeClass("glyphicon-menu-up");
    $(this).addClass('selected').siblings().removeClass('selected');
    $('.options').hide();
    if (parentselection == "true") {
        physicianId = null;
        practiceId = null;
        var getptid = parentpractid.split("n");
        //alert(getptid[1]);
        RegionId = $("#hidden_Regionq" + getptid[1]).val();
        if (RegionId == "assignables") {
            practiceId = null;
            pracclinicalid = null;
            RegionId = null;
            isAssignable = true;
        } else {
            practiceId = $("#hidden_practiceq" + getptid[1]).val();
            pracclinicalid = $("#hidden_practiceq" + getptid[1]).val();
        }

        physclinicalid = null;
        var currentYear = 1;
        radio_id = $('.reports_radio_align .radio-button input:checked').attr('id');
        switch (radio_id) {
            case 'year_to_date':
                ReloadReportDashboard(practiceId, null, RegionId, currentYear, currentYear, -1, -1, isAssignable);
                break;
            case 'life_to_date':
                ReloadReportDashboard(practiceId, null, RegionId, 1800, currentYear, -1, -1, isAssignable);
                break;
            case 'last_year':
                ReloadReportDashboard(practiceId, null, RegionId, currentYear - 1, currentYear - 1, 1, 12, isAssignable);
                break;
            case 'custom_date':
                var fDate = $("#FromDate").datepicker('getDate');
                var tDate = $("#ToDate").datepicker('getDate');
                if ((fDate != null) && (tDate != null)) {
                    var Fromyear = fDate.getFullYear();
                    var Tooyear = tDate.getFullYear();

                    var Frommonth = fDate.getMonth() + 1;
                    var Toomonth = tDate.getMonth() + 1;
                    ReloadReportDashboard(practiceId, null, RegionId, Fromyear, Tooyear, Frommonth, Toomonth, isAssignable);
                }
                break;
        };

        // ReloadReportDashboard(practiceId, physicianId);
    }
    e.stopPropagation();
});

var child_id;
var childselection;
$('.options .child_option').click(function (e) {
    $('.loader').show();
    childselection = "true";
    parentselection = "false";
    child_id = $(this).attr("id");

    $('.txt_val').text($("#" + child_id).text());
    $(".select_arrow_dropdown").removeClass("glyphicon-menu-up");
    $("#" + child_id).addClass('selected').siblings().removeClass('selected');
    $('.options').hide();

    if (childselection == "true") {
        document.getElementById('currentVsPriorLoader').style.display = "block";
        document.getElementById('currentVsPriorWrapper').style.display = "none";
        var res = child_id.split("d");
        var getid = $("#hidden_practiceq" + res[1]).val();

        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = pp[1];
        physicianId = null;
        pracclinicalid = pp[0];
        // physclinicalid = pp[0];
        physclinicalid = null;
        isAssignable = null;
        var currentYear = 1;

        var radio_id = $('.reports_radio_align .radio-button input:checked').attr('id');

        switch (radio_id) {
            case 'year_to_date':
                ReloadReportDashboard(practiceId, physicianId, RegionId, currentYear, currentYear, -1, -1, isAssignable);
                break;
            case 'life_to_date':
                ReloadReportDashboard(practiceId, physicianId, RegionId, 1800, currentYear, -1, -1, isAssignable);
                break;
            case 'last_year':
                ReloadReportDashboard(practiceId, physicianId, RegionId, currentYear - 1, currentYear - 1, 1, 12, isAssignable);
                break;
            case 'custom_date':
                var fDate = $("#FromDate").datepicker('getDate');
                var tDate = $("#ToDate").datepicker('getDate');
                if ((fDate != null) && (tDate != null)) {
                    var Fromyear = fDate.getFullYear();
                    var Tooyear = tDate.getFullYear();

                    var Frommonth = fDate.getMonth() + 1;
                    var Toomonth = tDate.getMonth() + 1;

                    ReloadReportDashboard(practiceId, physicianId, RegionId, Fromyear, Tooyear, Frommonth, Toomonth, isAssignable);
                }
                break;
        };
        document.getElementById('currentVsPriorLoader').style.display = "none";
        document.getElementById('currentVsPriorWrapper').style.display = "block";
        //  ReloadReportDashboard(practiceId, physicianId);
    }
    e.stopPropagation();

});

function ReloadReportDashboard(practid, physid, Regid, Presentyear, lastyear, frommonth, Tomonth, isAssignable) {
    $('.loader').show();
    setTimeout(function () {
        ReloadReports(practid, physid, Regid, Presentyear, lastyear, frommonth, Tomonth, isAssignable);
        GetClinicalDistribution(practid, physid, Regid, isAssignable);
        GetPatientCensus(practid, physid, Regid, Presentyear, lastyear, frommonth, Tomonth, isAssignable);
        GetBenchmarkReportDetails(practid, physid, Regid, Presentyear, lastyear, frommonth, Tomonth, isAssignable);
        ReloadLabUtilization(practiceId, physicianId, RegionId, isAssignable);
        $('#awv-chart').attr('checked', true).triggerHandler('click');
        $('#awv-chart').prop('checked', true);
        resize();
        resizereportwidget();
        $('.loader').fadeOut('slow');
    }, 1000);
}

function common_report_modal() {
    $('#modal_common').find('.modal-title').text(radio_title);
    $("#modal_common").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    //modalheight();
};

var radio_title;

$('.radio_date_click').click(function () {
    debugger;
    $('.loader').show();
    var radio_id = $(this).prev('input[type=radio]').attr('id');
    var PratiID = null;
    var physID = null;
    var RegID = null;
    if (pracclinicalid != null) {
        PratiID = pracclinicalid;
    }
    //if (physclinicalid != null) {
    //    physID = physclinicalid;
    //}
    if (RegionId != null) {
        RegID = RegionId;
    }
    if (isAssignable) {
        PratiID = null;
        RegID = null;
    }
    var currentYear = 1;
    last_year = false;
    switch (radio_id) {
        case 'year_to_date':
            $('.date_range_main_div').addClass('hidden');
            ReloadReportDashboard(PratiID, physID, RegID, currentYear, currentYear, -1, -1, isAssignable);
            cleartextboxdate();
            break;
        case 'life_to_date':
            $('.date_range_main_div').addClass('hidden');
            ReloadReportDashboard(PratiID, physID, RegID, 1800, currentYear, -1, -1, isAssignable);
            cleartextboxdate();
            break;
        case 'last_year':
            $('.date_range_main_div').addClass('hidden');
            debugger;
            last_year = true;
            ReloadReportDashboard(PratiID, physID, RegID, (currentYear - 1), (currentYear - 1), 1, 12, isAssignable);
            cleartextboxdate();
            break;
        case 'custom_date':
            $('.date_range_main_div').removeClass('hidden');
            $('.loader').fadeOut('slow');
            break;
    };
});
function cleartextboxdate() {
    $("#FromDate").val("");
    $("#ToDate").val("");

    $('#FromDate').datepicker('setDate', null);
    $('#ToDate').datepicker('setDate', null);
}

$('.FARradio_date_click').click(function () {
    var radio_id = $(this).prev('input[type=radio]').attr('id');
    var currentYear = 1;
    var ByMonthORPraOrPhyDataFilter = $("input[name='UtilizationAdvanceSummaryReport']:checked").val();
    var ByMonthORLocationDataFilter = $("input[name='SettleMonth']:checked").val();
    var NetworkOrPracticeLevel = $('input[name=servicefund]:checked').val();
    console.log('radio_id', radio_id);
    switch (radio_id) {
        case 'FARyear_on_year':
            $('#FARyear_on_year').prop('checked', true);
            $('#FARlast_year').prop('checked', false);
            //if (GlobalTitleData != "readmission") {
            ServerProcessing_FARs(GlobalTitleData, currentYear, ByMonthORPraOrPhyDataFilter, NetworkOrPracticeLevel, ByMonthORLocationDataFilter, servicefundPMPMBool);
            //} else {
            //    FrequentlyAccessedReport(GlobalTitleData, currentYear);
            //}

            break;
        case 'FARlife_to_date':
            FrequentlyAccessedReport(GlobalTitleData, 1800);
            break;
        case 'FARlast_year':
            $('#FARyear_on_year').prop('checked', false);
            $('#FARlast_year').prop('checked', true);
            //if (GlobalTitleData != "readmission") {
            ServerProcessing_FARs(GlobalTitleData, (currentYear - 1), ByMonthORPraOrPhyDataFilter, NetworkOrPracticeLevel, ByMonthORLocationDataFilter, servicefundPMPMBool);
            //} else {
            //    FrequentlyAccessedReport(GlobalTitleData, (currentYear - 1));
            //}

            break;
    };
});
$('.UtilizationAdvanceSummary_Filter_click').click(function () {


    var radio_id = $(this).prev('input[type=radio]').attr('id');
    var ByMonthORPraOrPhyDataFilter = $('#' + radio_id + '').val()
    var selectedYearDateFilter = $("input[name='FARReportYearDate']:checked").val();
    var currentYear = 1;

    switch (selectedYearDateFilter) {

        case 'YTD (Year to date)':
            Filter_UtilizationAdvanceSummary_Month_PraAndPhy(currentYear, ByMonthORPraOrPhyDataFilter);
            break;
        case 'LY(Last year)':
            Filter_UtilizationAdvanceSummary_Month_PraAndPhy(currentYear - 1, ByMonthORPraOrPhyDataFilter);
            break;
    }

});
$('.agreegatepmpm').click(function () {
    debugger
    if ($(this).attr('id') == 'agreegate') {
        $("#agreegate").addClass('agreegateClass');
        $("#pmpm").removeClass('pmpmClass');
    }
    else {
        $("#agreegate").removeClass('agreegateClass');
        $("#pmpm").addClass('pmpmClass');
    }
    servicefundPMPMBool = ($('#pmpm').hasClass('pmpmClass') == true) ? true : false;

    var radio_id = $(this).prev('input[type=radio]').attr('id');
    var selectedYearDateFilter = $("input[name='FARReportYearDate']:checked").val();
    var currentYear = 1;

    switch (selectedYearDateFilter) {
        case 'YTD (Year to date)':
            Filter_servicefund_NetworkAndPractice(currentYear, NetworkORPracticeFilter, servicefundPMPMBool);
            break;
        case 'LY(Last year)':
            Filter_servicefund_NetworkAndPractice(currentYear - 1, NetworkORPracticeFilter, servicefundPMPMBool);
            break;
    }
});
$('.servicefund_Filter_click').click(function () {

    var radio_id = $(this).prev('input[type=radio]').attr('id');
    NetworkORPracticeFilter = $('#' + radio_id + '').val()
    var selectedYearDateFilter = $("input[name='FARReportYearDate']:checked").val();
    var currentYear = 1;

    switch (selectedYearDateFilter) {
        case 'YTD (Year to date)':
            Filter_servicefund_NetworkAndPractice(currentYear, NetworkORPracticeFilter, servicefundPMPMBool);
            break;
        case 'LY(Last year)':
            Filter_servicefund_NetworkAndPractice(currentYear - 1, NetworkORPracticeFilter, servicefundPMPMBool);
            break;
    }

});
$('.SettleMonth_Filter_click').click(function () {
    var radio_id = $(this).prev('input[type=radio]').attr('id');
    var ByMonthORLocationDataFilter = $('#' + radio_id + '').val()
    var selectedYearDateFilter = $("input[name='FARReportYearDate']:checked").val();
    var currentYear = 1;

    switch (selectedYearDateFilter) {
        case 'YTD (Year to date)':
            Filter_SettledMonth_MonthAndLocation(currentYear, ByMonthORLocationDataFilter);
            break;
        case 'LY(Last year)':
            Filter_SettledMonth_MonthAndLocation(currentYear - 1, ByMonthORLocationDataFilter);
            break;
    }

});

function Filter_SettledMonth_MonthAndLocation(yearFilter, ByMonthORLocationDataFilter) {
    var Type;
    switch (GlobalTitleData) {
        case 'Setmon':
            Type = 'SETTLEDMONTH';

            if ($.fn.DataTable.isDataTable('#tblSetteledMonth')) {
                $('#tblSetteledMonth').DataTable().destroy();

                $('#tblSetteledMonth').empty();
            }

            break;

        case 'summaryreport':
            Type = 'SUMMARYREPORT';

            if ($.fn.DataTable.isDataTable('#tblSummaryReport')) {
                $('#tblSummaryReport').DataTable().destroy();

                $('#tblSummaryReport').empty();
            }

            break;

    }
    if (parentselection == "true") {
        var phyId = practiceId;
        var praId = physicianId;

        var getptid = parentpractid.split("n");

    }
    else {
        childselection = "false";
    }

    $("#tblReportsClaimsDetails_wrapper").hide();
    if (childselection == "true") {
        var res = child_id.split("d");
        var getid = $('#hidden_Physicianq' + res[1]).val();
        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = null;
        physicianId = pp[1];
    }
    $("#hdnReportType").val(Type);
    if ((Type.toUpperCase()) == "AWV") {
        $("#lastyear").hide();
        $("#currentyear").hide();
    }
    else {
        $("#lastyear").show();
        $("#currentyear").show();
    }

    var reportParams = {
        ReportName: Type,
        PracticeId: practiceId,
        PhysicianId: physicianId,
        Year: yearFilter,
        regionId: RegionId,
        SettleMonthFilter: ByMonthORLocationDataFilter
    };
    export_datayear = yearFilter;

    var sourceCols;

    switch (ByMonthORLocationDataFilter) {
        case 'ByMonth':
            if (Type == 'SETTLEDMONTH') {
                sourceCols = [
                    {
                        "data": "MonthMembership", "title": "Month", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailPopup_Server(\"" + full['Id'] + "\" , \"SettledMonth\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + practiceId + "\",\"" + physicianId + "\");return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Membership", "title": "Membership", sClass: "text-center" },
                    { "data": "IPAPremium", "title": "IPA Premium", sClass: "text-center", sType: "currency" },
                    { "data": "CostString", "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                    { "data": "Reinsurance", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center", sType: "currency" },
                    { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center", sType: "currency" },
                    { "data": "GrossSurplus", "title": "Surplus/Deficit", sClass: "text-center", sType: "currency" }
                ];
            }
            else if (Type == 'SUMMARYREPORT') {
                sourceCols = [
                    {
                        "data": "MonthMembership", "title": "Month", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailPopup_Server(\"" + full['Id'] + "\" , \"SUMMARYREPORT\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + practiceId + "\",\"" + physicianId + "\");return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Membership", "title": "Membership", sClass: "text-center" },
                    { "data": "IPAPremium", "title": "IPA Premium", sClass: "text-center", sType: "currency" },
                    { "data": "CostString", "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                    { "data": "InstitutionalCosts", "title": "Institutional Cost", sClass: "text-center", sType: "currency" },
                    { "data": "ProfessionalCosts", "title": "Professional Cost", sClass: "text-center", sType: "currency" },
                    { "data": "Pharmacycost", "title": "Pharmacy Cost", sClass: "text-center", sType: "currency" },
                    { "data": "OtherCosts", "title": "Other Costs", sClass: "text-center" },
                    { "data": "GrossSurplus", "title": "Surplus/Deficit", sClass: "text-center", sType: "currency" },
                    { "data": "Reinsurance", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center", sType: "currency" },
                    { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center", sType: "currency" },
                ];
            }
            break;

        case 'ByLocation':
            if (Type == 'SETTLEDMONTH') {
                sourceCols = [
                    { "data": "Location", "title": "Location", sClass: "text-center" },
                    { "data": "Membership", "title": "Membership", sClass: "text-center" },
                    { "data": "IPAPremium", "title": "IPA Premium", sClass: "text-center", sType: "currency" },
                    { "data": "CostString", "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                    { "data": "Reinsurance", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center", sType: "currency" },
                    { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center", sType: "currency" },
                    { "data": "GrossSurplus", "title": "Surplus/Deficit", sClass: "text-center", sType: "currency" }
                ];
            }
            else if (Type == 'SUMMARYREPORT') {
                sourceCols = [
                    {
                        "data": "Location", "title": "Location", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailPopup_Server(\"" + full['Id'] + "\" , \"SUMMARYREPORT\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + full['Id'] + "\",\"" + physicianId + "\");return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Membership", "title": "Membership", sClass: "text-center" },
                    { "data": "IPAPremium", "title": "IPA Premium", sClass: "text-center", sType: "currency" },
                    { "data": "CostString", "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                    { "data": "Reinsurance", "title": "Reinsurance Recovered/Stop Loss", sClass: "text-center", sType: "currency" },
                    { "data": "RiskSharing", "title": "Risk Sharing", sClass: "text-center", sType: "currency" },
                    { "data": "GrossSurplus", "title": "Surplus/Deficit", sClass: "text-center", sType: "currency" }
                ];
                break;
            }
    }

    if (Type == 'SETTLEDMONTH') {
        table = $('#tblSetteledMonth').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            scrollX: true,
            fixedHeader: true,
            scrollY: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                "data": reportParams,
                "dataSrc": function (data) {

                    //Graph       
                    var Values = new Array();
                    var Items = new Array();
                    $.each(data.Graph, function (i, item) {
                        Values.push([data.Graph[i].Value]);
                        Items.push([data.Graph[i].Item]);
                    });

                    var temp = new Highcharts.Chart({
                        chart: {
                            type: 'column',
                            renderTo: 'tblSetteledMonthgraph'
                        },
                        title: {
                            text: ''
                        },

                        xAxis: {
                            title:
                            {
                                text: (ByMonthORLocationDataFilter == 'ByMonth' ? 'Month' : 'Location'),
                                style:
                                {
                                    color: '#c0c0c0',
                                }
                            },

                            categories: Items

                        },
                        yAxis: {
                            labels: {
                                format: '{value}'
                            },
                            title:
                            {
                                text: 'Total Expenses',
                                style:
                                {
                                    color: '#c0c0c0',
                                }
                            },

                            plotLines: [{
                                color: '#FF0000',
                                width: 3,
                                //  value: data.benchmark[12].Value,
                                id: 'plotline-1'
                            }]
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                            }

                        },
                        credits: { enabled: false },
                        series: [{
                            color: '#2582cf',
                            type: 'column',
                            data: Values,
                            showInLegend: false
                        }]

                    });

                    return data.data;
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                }
            },
            "language": {
                "search": "",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
            },
            "columns": sourceCols,
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                $('.column-btn').click(function () {
                    colvis_scroll();
                });

                var $searchInput = $('div.dataTables_filter input');
                $searchInput.unbind();
                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblAdmission").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblAdmission").dataTable().api();
                        dtable.search("").draw();
                    }
                });
            },
            buttons: [
                {
                    extend: 'print',
                    title: 'Data export-' + Type,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'print-btn',
                    titleAttr: 'Print'
                },
                {
                    extend: 'excel',
                    filename: 'Data export-' + Type,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        ExportToExcel('Reports', 'tblSetteledMonth', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ByMonthORLocationDataFilter);
                    }
                },
                {
                    extend: 'pdf',
                    filename: 'Data export-' + Type,
                    title: Type,
                    pageSize: 'A4',
                    orientation: 'portrait',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'pdf-btn',
                    titleAttr: 'Pdf',
                    action: function (e, dt, node, config) {
                        ConvertGraphtoBase('Reports', 'tblSetteledMonth', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ByMonthORLocationDataFilter);
                    }
                },
                {
                    extend: 'colvis',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },
            ],
        });
        oTable = table.fnSettings();
    }
    else if (Type == 'SUMMARYREPORT') {
        table = $('#tblSummaryReport').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            scrollX: true,
            fixedHeader: true,
            scrollY: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                "data": reportParams,
                "dataSrc": function (data) {
                    //Graph       
                    var Values = new Array();
                    var Items = new Array();
                    $.each(data.Graph, function (i, item) {
                        Values.push([data.Graph[i].Value]);
                        Items.push([data.Graph[i].Item]);
                    });
                    var temp = new Highcharts.Chart({
                        chart: {
                            type: 'column',
                            renderTo: 'tblSummaryReportgraph'
                        },
                        title: {
                            text: ''
                        },

                        xAxis: {
                            title:
                            {
                                text: (ByMonthORLocationDataFilter == 'ByMonth' ? 'Month' : 'Location'),
                                style:
                                {
                                    color: '#c0c0c0',
                                }
                            },

                            categories: Items

                        },
                        yAxis: {
                            labels: {
                                format: '{value}'
                            },
                            title:
                            {
                                text: 'Total Expenses',
                                style:
                                {
                                    color: '#c0c0c0',
                                }
                            },

                            plotLines: [{
                                color: '#FF0000',
                                width: 3,
                                //  value: data.benchmark[12].Value,
                                id: 'plotline-1'
                            }]
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                            }

                        },
                        credits: { enabled: false },
                        series: [{
                            color: '#2582cf',
                            type: 'column',
                            data: Values,
                            showInLegend: false
                        }]

                    });

                    var returnData = data.data
                    var arrayLength = returnData.length;
                    for (var i = 0; i < arrayLength; i++) {
                        returnData[i].IPAPremium = ('$' + returnData[i].IPAPremium).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        returnData[i].InstitutionalCosts = ('$' + returnData[i].InstitutionalCosts).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        returnData[i].ProfessionalCosts = ('$' + returnData[i].ProfessionalCosts).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        returnData[i].Pharmacycost = ('$' + returnData[i].Pharmacycost).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        returnData[i].OtherCosts = ('$' + returnData[i].OtherCosts).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    }

                    return returnData;
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                }
            },
            "language": {
                "search": "",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
                // sProcessing: "<div class='col-xs-12 loader'></div>"
            },
            "columns": sourceCols,
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                $('.column-btn').click(function () {
                    colvis_scroll();
                });

                var $searchInput = $('div.dataTables_filter input');
                $searchInput.unbind();
                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $("#tblSummaryReport").dataTable().api();
                        dtable.search(this.value).draw();
                    }

                    if (this.value.length == 0) {
                        var dtable = $("#tblSummaryReport").dataTable().api();
                        dtable.search("").draw();
                    }

                });
            },
            buttons: [
                //{
                //    extend: 'print',
                //    title: 'Data export-' + Type,
                //    exportOptions: {
                //        columns: ':visible'
                //    },
                //    className: 'print-btn',
                //    titleAttr: 'Print'
                //},
                {
                    extend: 'excel',
                    filename: 'Data export-' + Type,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {

                        ExportToExcel('Reports', 'tblSummaryReport', '', '', '', '', '', '', '', '', '', '', '', '', '', ByMonthORLocationDataFilter);
                    }
                },
                //{
                //    extend: 'pdf',
                //    filename: 'Data export-' + Type,
                //    title: Type,
                //    pageSize: 'A4',
                //    orientation: 'portrait',
                //    exportOptions: {
                //        columns: ':visible'
                //    },
                //    className: 'pdf-btn',
                //    titleAttr: 'Pdf',
                //    action: function (e, dt, node, config) {

                //        ConvertGraphtoBase('Reports', 'tblSummaryReport', '', '', '', '', '', '', '', '', '', '', '', ByMonthORLocationDataFilter);
                //    }
                //},
                {
                    extend: 'colvis',
                    // "columns": '3, 4, 5, 6, 7, 8, 9, 10, 11,12,13,14',
                    // autoClose: true,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },
            ]
        });
        oTable = table.fnSettings();
    }


}

function Filter_UtilizationAdvanceSummary_Month_PraAndPhy(Year, ByMonthORPraOrPhyDataFilter) {
    var Type;

    switch (GlobalTitleData) {
        case 'utilizationAdvanceSummary':
            Type = 'UTILIZATIONADVANCESUMMARY';

            if ($.fn.DataTable.isDataTable('#tblutilizationAdvanceSummary')) {
                $('#tblutilizationAdvanceSummary').DataTable().destroy();

                $('#tblutilizationAdvanceSummary').empty();
            }
            if ($.fn.DataTable.isDataTable('#tblutilizationAdvanceSummaryPractice')) {

                $('#tblutilizationAdvanceSummaryPractice').DataTable().destroy();
                $('#tblutilizationAdvanceSummaryPractice').empty();
            }

            if ($.fn.DataTable.isDataTable('#tblutilizationAdvanceSummaryPhysician')) {

                $('#tblutilizationAdvanceSummaryPhysician').DataTable().destroy();
                $('#tblutilizationAdvanceSummaryPhysician').empty();
            }


            break;

    }
    if (parentselection == "true") {
        var phyId = practiceId;
        var praId = physicianId;

        var getptid = parentpractid.split("n");

    }
    else {
        childselection = "false";
    }

    $("#tblReportsClaimsDetails_wrapper").hide();

    if (childselection == "true") {
        var res = child_id.split("d");
        var getid = $('#hidden_Physicianq' + res[1]).val();
        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = null;
        physicianId = pp[1];
    }
    $("#hdnReportType").val(Type);
    if ((Type.toUpperCase()) == "AWV") {
        $("#lastyear").hide();
        $("#currentyear").hide();
    }
    else {
        $("#lastyear").show();
        $("#currentyear").show();
    }
    var reportParams = {
        ReportName: Type,
        PracticeId: practiceId,
        PhysicianId: physicianId,
        Year: Year,
        regionId: RegionId,
        UASFilter: ByMonthORPraOrPhyDataFilter
    };
    export_datayear = Year;

    var sourceCols;
    switch (ByMonthORPraOrPhyDataFilter) {
        case 'ByMonth':
            tableName = "tblutilizationAdvanceSummary";
            if (Type == 'UTILIZATIONADVANCESUMMARY') {
                sourceCols = [
                    { "data": "Period", "title": "Id", sClass: "hidden" },
                    { "data": "Period", "title": "Period", sClass: "text-center" },
                    {
                        "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                        render: function (data, type, full, meta) {
                            return data;
                        },
                    },
                    { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                    { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                    {
                        "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "AWV" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "AWV" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    {
                        "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    {
                        "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Admit" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Admit" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                    {
                        "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                    { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    {
                        "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Readmit" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Readmit" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "ERCount", "title": "ER Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "ER" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "ER" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNF" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "SNF" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                    {
                        "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                    { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    {
                        "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "SNFReadmit" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "SNFReadmit" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Hospice" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Hospice" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "Outpatient" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "Outpatient" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },

                    {
                        "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['Period'] + " " + "OBS" + "\",null,\"" + [phyId] + "\",null,null,null,null,null,\"" + full['Period'] + "\",\"" + "OBS" + "\", \"" + "ByMonth" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ];
            }
            break;

        case 'ByPractice':
            tableName = "tblutilizationAdvanceSummaryPractice";
            if (Type == 'UTILIZATIONADVANCESUMMARY') {
                sourceCols = [
                    { "data": "PracticeId", "title": "Id", sClass: "hidden" },
                    {
                        "data": "PracticeName", "title": "Office Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "PracticeMonth" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                    { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                    {
                        "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "AWV" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    {
                        "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    {
                        "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Admit" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    // { "data": "TotalAdmitLOS", "title": "Total Admit LOS", sClass: "text-center" },
                    { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                    {
                        "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                    { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    {
                        "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Readmit" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "ERCount", "title": "ER Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "ER" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "SNF" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                    {
                        "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                    { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    {
                        "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "SNFReadmit" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Hospice" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "Outpatient" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"utilizationadvancesummary\",\"" + full['PracticeName'] + "\",null,\"" + full['PracticeId'] + "\",null,null,null,null,null,null,\"" + "OBS" + "\", \"" + "ByPractice" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ];
            }
            break;

        case 'ByPhysician':
            tableName = "tblutilizationAdvanceSummaryPhysician";
            if (Type == 'UTILIZATIONADVANCESUMMARY') {
                sourceCols = [
                    // { "data": "day", "title": "Days In Period", sClass: "text-center" },
                    //{ "data": "Period", "title": "Provider Name", sClass: "text-center" },

                    { "data": "PhysicianId", "title": "Id", sClass: "hidden" },
                    {
                        "data": "PhysicianName", "title": "Provider Name", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "PhysicianMonth" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    //{
                    //    "data": "MemberMonth", "title": "Member Months", sClass: "text-center",
                    //    render: function (data, type, full, meta) {

                    //        return data;
                    //    },
                    //},
                    { "data": "MemberClaims", "title": "Member Claims", sClass: "text-center" },
                    // { "data": "TotalCost1", "title": "Total Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "PMPM1", "title": "PMPM", sClass: "text-center" },
                    {
                        "data": "AWVCompleted", "title": "AWV Completed", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "AWV" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    {
                        "data": "AWVCompletedin", "title": "AWV % Completed", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    {
                        "data": "AdmitCount", "title": "Admit Count", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Admit" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Admit1000", "title": "Admit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "AdmitCost", "title": "Admit Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    // { "data": "TotalAdmitLOS", "title": "Total Admit LOS", sClass: "text-center" },
                    { "data": "ALOS", "title": "ALOS", sClass: "text-center" },
                    {
                        "data": "ReadmitRate", "title": "Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "BedDays", "title": "Bed Days", sClass: "text-center" },
                    { "data": "BedDays1000", "title": "Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    {
                        "data": "ReadmitCount", "title": "Readmit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Readmit" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Readmit1000", "title": "Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "AvgCost", "title": "Avg Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "ERCount", "title": "ER Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "ER" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "ER1000", "title": "ER/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },



                    { "data": "ERCost", "title": "ER Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "SNFCount", "title": "SNF Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "SNF" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "SNF1000", "title": "SNF/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "SNFCost", "title": "SNF Cost", sClass: "text-center", sType: "currency", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "SNFALOS", "title": "SNF ALOS", sClass: "text-center" },
                    {
                        "data": "SNFReadmitRate", "title": "SNF Readmit Rate", sClass: "text-center",

                        "render": function (data, type, full, meta) {
                            if (data == '')
                                data = '';
                            else
                                data = data + '%';
                            return data;
                        }
                    },
                    { "data": "SNFBedDays", "title": "SNF Bed Days", sClass: "text-center" },

                    { "data": "SNFBedDays1000", "title": "SNF Bed Days/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    {
                        "data": "SNFReadmitCount", "title": "SNF Readmit Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "SNFReadmit" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },

                    { "data": "SNFReadmit1000", "title": "SNF Readmit/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },



                    { "data": "SNFAVGCost", "title": "SNF AVG Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "HospiceCount", "title": "Hospice Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Hospice" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "Hospice1000", "title": "Hospice/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "HospiceCost", "title": "Hospice Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        "data": "OUTCOUNT", "title": "Outpatient COUNT", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "Outpatient" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "OUT1000", "title": "OUT/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "OUTCost", "title": "OUT Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },

                    {
                        "data": "OBSCount", "title": "OBS Count", sClass: "text-center",
                        "render": function (data, type, full, meta) {
                            return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\" , \"utilizationadvancesummary\",\"" + full['PhysicianLastName'] + " " + full['PhysicianFirstName'] + "\",null,null,\"" + full['PhysicianId'] + "\",null,null,null,null,null,\"" + "OBS" + "\", \"" + "ByPhysician" + "\" );return false'>" + data + "</a>";
                        }
                    },
                    { "data": "OBS1000", "title": "OBS/1000", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                    { "data": "OBSCost", "title": "OBS Cost", sClass: "text-center", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                ];
            }
            break;
    }
    if (Type == 'UTILIZATIONADVANCESUMMARY') {
        table = $('#' + tableName).dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            pagingType: "simple",
            scrollX: true,
            "language": {
                "search": "",
                "ZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
                sProcessing: "<div class='col-xs-12 loader'></div>",
            },
            scrollX: true,
            fixedHeader: true,
            //scrollY: "350px",
            scrollY: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
                "data": reportParams,
                "complete": function (data) {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                    $(".serverloader").fadeOut("slow");
                }
            },
            order: [[1, "asc"]],
            "columns": sourceCols,
            initComplete: function () {
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dataTables_length select').addClass('form-control selectbox_entries');
                $('.column-btn').click(function () {
                    colvis_scroll();
                });
                var $searchInput = $('div.dataTables_filter input');
                $searchInput.unbind();
                $searchInput.bind('keyup', function (e) {
                    if (this.value.length > 3) {
                        var dtable = $('#' + tableName).dataTable().api();
                        dtable.search(this.value).draw();
                    }
                    if (this.value.length == 0) {
                        var dtable = $('#' + tableName).dataTable().api();
                        dtable.search("").draw();
                    }
                });
            },
            buttons: [
                //{
                //    extend: 'print',
                //    title: 'Data export-' + Type,
                //    exportOptions: {
                //        columns: ':visible'
                //    },
                //    className: 'print-btn',
                //    titleAttr: 'Print'
                //},
                {
                    extend: 'excel',
                    filename: 'Data export-' + Type,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {
                        ExportToExcel('Reports', tableName, '', '', '', '', '', '', '', '', '', '', '', ByMonthORPraOrPhyDataFilter);
                    }
                },
                //{
                //    extend: 'pdf',
                //    filename: 'Data export-' + Type,
                //    title: Type,
                //    pageSize: 'LEGAL',
                //    orientation: 'landscape',
                //    exportOptions: {
                //        columns: ':visible'
                //    },
                //    className: 'pdf-btn',
                //    titleAttr: 'Pdf',
                //    action: function (e, dt, node, config) {
                //        ConvertGraphtoBase('Reports', tableName, '', '', '', '', '', '', '', '', '', ByMonthORPraOrPhyDataFilter);
                //    }
                //},
                {
                    extend: 'colvis',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'column-btn',
                    titleAttr: 'More'
                },
            ]
        });
        oTable = table.fnSettings();
    }
}
function Filter_servicefund_NetworkAndPractice(yearFilter, NetworkORPracticeFilter, servicefundPMPMBool) {
    ($.fn.DataTable.isDataTable('#tblServiceFund'))
    $('#tblServiceFund').DataTable().destroy();
    $('#tblServiceFund').empty();

    var Type = 'SERVICEFUND';


    if (parentselection == "true") {
        var phyId = practiceId;
        var praId = physicianId;

        var getptid = parentpractid.split("n");

    }
    else {
        childselection = "false";
    }

    $("#tblReportsClaimsDetails_wrapper").hide();
    if (childselection == "true") {
        var res = child_id.split("d");
        var getid = $('#hidden_Physicianq' + res[1]).val();
        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = null;
        physicianId = pp[1];
    }
    var reportParams = {
        ReportName: Type,
        PracticeId: practiceId,
        PhysicianId: physicianId,
        Year: yearFilter,
        regionId: RegionId,
        servicefundFilters: NetworkORPracticeFilter,
        servicefundPMPM: servicefundPMPMBool
    };
    export_datayear = yearFilter;

    var sourceCols;

    switch (NetworkORPracticeFilter) {

        case 'NetworkLevel':

            sourceCols = [
                { "data": "Period", "title": "Period", sClass: "text-center" },
                //  { "data": "PracticeName", "title": "Practice", sClass: "hidden" },
                //{ "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                {
                    "data": "InstitutionalCosts", "title": "Institutional", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUND\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\",\"" + "\",\"" + "\",\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                    }
                },
                {
                    "data": "ProfessionalCosts", "title": "Professional", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUNDINST\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\",\"" + "\",\"" + "\",\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                    }
                },
                {
                    "data": "Pharmacycost", "title": "Pharmacy", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<a href='javascript:void(0);' onclick='showDetailsPopup(\"" + full['Id'] + "\", \"SERVICEFUNDPHAR\",\"" + "\" ,\"" + full['PhysicianId'] + "\" , \"" + practiceId + "\" ,\"" + physicianId + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\" ,\"" + "\" ,\"" + full['PatientId'] + "\" ,\"" + "\",\"" + "\",\"" + "\",\"" + full['Period'] + "\");return false'>" + "$" + data + "</a>";
                    }
                },

                { "data": "PCPCAP", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "PCP Cap", sClass: "text-center", sType: "currency" },
                { "data": "SpecialistCap", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Specialty Cap", sClass: "text-center", sType: "currency" },
                { "data": "Reinsurance", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Expense", sClass: "text-center", sType: "currency" },
                { "data": "ReinsuranceRecoveries", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Reinsurance Recoveries", sClass: "text-center", sType: "currency" },

                { "data": "OtherCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Other", sClass: "text-center", sType: "currency" },
                { "data": "IBNR", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "IBNR", sClass: "text-center", sType: "currency" },
                { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                { "data": "Surplus", "title": "Surplus/(Deficit)", sClass: "text-center" },
                { "data": "AverageMLR", "title": "MLR", sClass: "text-center" },
                //  { "data": "LOB", "title": "LOB", sClass: "text-center" },
                //  { "data": "HelathPlan", "title": "Health Plan", sClass: "text-center" },
                //   { "data": "SubPlanIPA", "title": "Sub-PlanIPA", sClass: "text-center" }
            ];
            break;

        case 'Practicelevel':

            sourceCols = [
                { "data": "Period", "title": "Period", sClass: "text-center" },
                {
                    "data": "PracticeName", "title": "Practice", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return "<a href='javascript:void(0);' onclick = 'showDetailPopup_Server(\"" + full['Id'] + "\" , \"servicefund\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + full['PracticeId'] + "\",\"" + physicianId + "\",\"" + "\" ,\"" + "\" ,\"" + full['PracticeName'] + "\" ,\"" + "\" ,\"" + full['Period'] + "\");return false' > " + data + "</a > ";
                        //onclick='showDetailPopup_Server(\"" + full['Id'] + "\" , \"servicefund\",\"" + full['PatientLastName'] + " " + full['PatientFirstName'] + "\",\"" + full['MonthMembership'] + "\",\"" + practiceId + "\",\"" + physicianId + "\");return false'>" + data + "</a>";
                    }
                },
                // { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                //  { "data": "PracticeId", "title": "PracticeId", sClass: "hidden" },
                { "data": "MemberMonths", "title": "Member Month", sClass: "text-center" },
                { "data": "RiskScore", "title": "Riskscore", sClass: "text-center" },
                { "data": "TotalPremium", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Premium", sClass: "text-center", sType: "currency" },
                { "data": "FUNDING", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Funding", sClass: "text-center", sType: "currency" },
                {
                    "data": "InstitutionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Institutional", sClass: "text-center", sType: "currency"

                },
                {
                    "data": "ProfessionalCosts", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Professional", sClass: "text-center", sType: "currency"

                },
                {
                    "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Pharmacy", sClass: "text-center", sType: "currency"

                },

                { "data": "PCPCAP", "title": "PcpCap", sClass: "text-center" },
                { "data": "SpecialistCap", "title": "SpecialistCap", sClass: "text-center" },
                { "data": "Reinsurance", "title": "Reinsurance Expense", sClass: "text-center" },
                { "data": "ReinsuranceRecoveries", "title": "Reinsurance Recoveries", sClass: "text-center" },

                { "data": "OtherCosts", "title": "Other", sClass: "text-center" },
                { "data": "IBNR", "title": "IBNR", sClass: "text-center" },
                { "data": "TotalExpenditure", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Expenditure", sClass: "text-center", sType: "currency" },
                { "data": "Surplus", "title": "Surplus", sClass: "text-center" },
                { "data": "AverageMLR", "title": "MLR", sClass: "text-center" }
            ];
            break;
    }

    if ($.fn.DataTable.isDataTable('#tblServiceFund')) {
        $('#tblServiceFund').DataTable().destroy();
    }
    table = $('#tblServiceFund').dataTable({
        "dom": 'Bfrltip',
        "processing": true,
        "serverSide": true,
        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
        pagingType: "simple",
        scrollX: true,
        fixedHeader: true,
        scrollY: false,
        "ajax": {
            "type": "POST",
            "url": serverRoot + '/Insights/Insights/GetServerProcessingFAR',
            "data": reportParams,
            "dataSrc": function (data) {
                //Graph  
                var Values = new Array();
                var Items = new Array();
                $.each(data.Graph, function (i, item) {
                    Values.push([data.Graph[i].Value]);
                    Items.push([data.Graph[i].Item]);
                });
                var temp = new Highcharts.Chart({
                    chart: {
                        type: 'column',
                        renderTo: 'tblServiceFundGraph'
                    },
                    title: {
                        text: ''
                    },

                    xAxis: {
                        title:
                        {
                            text: 'Month',
                            style:
                            {
                                color: '#c0c0c0',
                            }
                        },

                        categories: Items

                    },
                    yAxis: {
                        labels: {
                            format: '{value}'
                        },
                        title:
                        {
                            text: 'Net Surplus/Deficit',
                            style:
                            {
                                color: '#c0c0c0',
                            }
                        },

                        plotLines: [{
                            color: '#FF0000',
                            width: 3,
                            //  value: data.benchmark[12].Value,
                            id: 'plotline-1'
                        }]
                    },
                    tooltip: {
                        formatter: function () {
                            return '<b>Net Surplus/(Deficit)</b>:' + '$' + Highcharts.numberFormat(this.y, 2, '.', ',');
                        }

                    },
                    credits: { enabled: false },
                    series: [{
                        color: '#2582cf',
                        type: 'column',
                        data: Values,
                        showInLegend: false
                    }]

                });

                return data.data;
            },
            "complete": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            },
            "error": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            }
        },
        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            },
            sProcessing: "<div class='col-xs-12 loader'></div>"
        },
        "columns": sourceCols,
        initComplete: function () {
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');
            $('.column-btn').click(function () {
                colvis_scroll();
            });

            var $searchInput = $('div.dataTables_filter input');
            $searchInput.unbind();
            $searchInput.bind('keyup', function (e) {
                if (this.value.length > 3) {
                    var dtable = $("#tblServiceFund").dataTable().api();
                    dtable.search(this.value).draw();
                }

                if (this.value.length == 0) {
                    var dtable = $("#tblServiceFund").dataTable().api();
                    dtable.search("").draw();
                }

            });
        },

        buttons: [
            //{
            //    extend: 'print',
            //    title: 'Data export-' + Type,
            //    exportOptions: {
            //        columns: ':visible'
            //    },
            //    className: 'print-btn',
            //    titleAttr: 'Print'
            //},
            {
                extend: 'excel',
                filename: 'Data export-' + Type,
                exportOptions: {
                    columns: ':visible'
                },
                className: 'excel-btn',
                titleAttr: 'Export',
                action: function (e, dt, node, config) {
                    ExportToExcel('Reports', "tblServiceFund", '', '', '', '', '', '', '', '', '', '', '', '', NetworkORPracticeFilter, '', servicefundPMPMBool);
                }
            },
            //},
            //{
            //    extend: 'pdf',
            //    filename: 'Data export-' + Type,
            //    title: Type,
            //    pageSize: 'LEGAL',
            //    orientation: 'landscape',
            //    exportOptions: {
            //        columns: ':visible'
            //    },
            //    className: 'pdf-btn',
            //    titleAttr: 'Pdf',
            //    action: function (e, dt, node, config) {
            //        ConvertGraphtoBase('Reports', "tblServiceFund", '', '', '', '', '', '', '', '', '', '', NetworkORPracticeFilter, '', servicefundPMPMBool);
            //    }
            {
                extend: 'colvis',
                //autoClose: true,
                exportOptions: {
                    columns: ':visible'
                },
                className: 'column-btn',
                titleAttr: 'More'
            },
        ]
        // , columnDefs: [{
        //      targets: [19,20,21],
        //      visible: false
        //   }
        //  ]
    });
    oTable = table.fnSettings();



}
function RefreshReportDashboard() {

    try {
        var PratiID = null;
        var physID = null;
        if (pracclinicalid != null) { PratiID = pracclinicalid; }
        if (physclinicalid != null) { physID = physclinicalid; }

        var fDate = $("#FromDate").datepicker('getDate');
        var tDate = $("#ToDate").datepicker('getDate');
        if ((fDate != null) && (tDate != null)) {
            var Frommonth = fDate.getMonth() + 1;
            var Toomonth = tDate.getMonth() + 1;

            var Fromyear = fDate.getFullYear();
            var Tooyear = tDate.getFullYear();

            if (Fromyear <= Tooyear) {
                ReloadReportDashboard(PratiID, physID, Fromyear, Tooyear, Frommonth, Toomonth);
            }
        }
        else if (($("#FromDate").val().length == 7) && ($("#ToDate").val().length == 7)) {
            var f = $("#FromDate").val().split('/');
            var t = $("#ToDate").val().split('/');
            ReloadReportDashboard(PratiID, physID, f[1], t[1], f[0], t[0]);
        }
    } catch (e) { }
}

//current v/s prior widget
//graph

//current vs prior widget modal
$('.current_widget_click').click(function () {

    current_prior = $(this).attr('data-title');
    current_prior_graph_modal();
    current_prior_graph();
});

function current_prior_graph_modal() {
    //$('#current_prior').find('.modal-title').text(radio_title);
    $("#current_prior").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    //modalheight();
};

$('.current_widget_click').click(function () {

    current_prior = $(this).attr('data-title');
    current_prior_graph_modal();
    //current_prior_graph();
});

$('.current_radio_align .radio-button input').click(function () {

    //;
    $('.' + $(this).attr('id')).show().siblings().hide();
    var Year = 1;
    if (last_year == true) {
        Year = Year - 1;
    }

    if (parentselection == "true") {
        var phyId = practiceId;
        var praId = physicianId;
        physicianId = null;
        var getptid = parentpractid.split("n");
    }
    if (childselection == "true") {
        var res = child_id.split("d");
        var getid = $("#hidden_practiceq" + res[1]).val();
        var pp = getid.split("|")
        practiceId = pp[0];
        RegionId = pp[1];
    }

    console.log('radio name', $(this).attr('title'));
    $("#hdnReportType").val($(this).attr('title'));
    if ($(this).attr('title') === 'AWV' || $(this).attr('title') === 'FluShots') {
        new GetCurrentVersusPriorReportDetails(Year, $(this).attr('title'), practiceId, physicianId);
    }
    else {
        //new GetCurrentVersusPriorKPISpendDetails(Year, $(this).attr('title'), practiceId, physicianId);
        BindDatatableKPISpend($(this).attr('title'), Year);
    }
});

/*  Current versus Prior */

function GetChartTemplate(dataSeriesModel, gridModel, reportName) {
    debugger
    console.log('Model data', gridModel + '------' + reportName);
    var gridModel = gridModel;
    var chart = {
        type: 'column',
        inverted: true,
    };
    var xAxis = {
        categories: ['Last Year', 'Current Year', 'End of Year'],
        title: {
            text: null
        },
        lineWidth: 1,
        minorGridLineWidth: 0,
        gridLineWidth: 0,
        tickLength: 0
    };
    var yAxis = {
        min: 0,
        title: {
            text: null
        },
        maxPadding: 0,
        allowDecimals: false,
        gridLineWidth: 0,
        lineWidth: 1,
        labels: { enabled: false }
    };
    var tooltip = {
        enabled: false
    };
    var plotOptions = {
        column: {
            grouping: false,
            shadow: false,
            borderWidth: 0,
            events: {
                legendItemClick: function () {
                    return false;
                }
            },
            point: {
                events: {
                    click: function (event) {
                        gridModel = gridModel === 'FLU-Shots' ? 'FluShots' : gridModel;
                        switch (this.category) {
                            case 'Current Year':
                                $(".modal .modal-title").html("Current Vs Prior > " + gridModel + " > YTD");

                                break;
                            case 'Last Year':
                                $(".modal .modal-title").html("Current Vs Prior > " + gridModel + " > LY");
                                break;
                        }
                        var Year = 'Current';
                        if (event.point.category === 'Last Year') {
                            Year = 'Prior';
                        }

                        BindDatatable(gridModel, Year, event.point.colorIndex);
                    }
                }
            }
        },
        scatter: {
            marker: {
                symbol: 'line',
                lineWidth: 2,
                radius: 23,
                lineColor: '#940ead'
            }
        }

    };
    var title = {
        text: '',
        style: {
            display: 'none'
        }
    };
    var legend = {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'top',
        symbolHeight: 12,
        symbolWidth: 12,
        symbolRadius: 0,
        x: 0,
        reversed: false
    };
    var credits = { enabled: false };
    var series = dataSeriesModel;
    this.GetJsonValue = function () {

        var json = {};
        json.chart = chart;
        json.title = title;
        json.xAxis = xAxis;
        json.yAxis = yAxis;
        json.tooltip = tooltip;
        json.plotOptions = plotOptions;
        json.legend = legend;
        json.credits = credits;
        json.series = series;
        return json;
    }

    this.GetJsonValueRender = function (renderTo) {
        chart.renderTo = renderTo;
        var json = {};
        json.chart = chart;
        json.title = title;
        json.xAxis = xAxis;
        json.yAxis = yAxis;
        json.tooltip = tooltip;
        json.plotOptions = plotOptions;
        json.legend = legend;
        json.credits = credits;
        json.series = series;
        return json;
    }
}

function BindDatatable(reportName, YearStatus, IsCompleted) {
    debugger;
    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }

    $("#hdnIsCompleted").val(IsCompleted);
    $("#DivCurrentvsprior").html('');
    $("#current_prior_table").modal('show');
    $("#hdnReportType").val(reportName);
    if (reportName === 'AWV') {
        $("#DivCurrentvsprior").append('<table id="Currentvsprior" class="table tblFAR table-striped" style="width:100%"></table>');
        var table = $('#Currentvsprior').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            destroy: true,
            cache: false,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            "iDisplayLength": 10,
            pagingType: "simple",
            scrollX: true,
            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
            },
            fixedHeader: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetCurrentVersusPriorReportDetails',
                "data": {
                    Year: currentYear,
                    YearStatus: YearStatus,
                    CurrentVersusPriorName: reportName,
                    PracticeId: practiceId,
                    PhysicianId: physicianId,
                    regionId: RegionId,
                    IsCompleted: IsCompleted,
                    IsAssignable: isAssignable
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    oTable = table.fnSettings();
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                }
            },
            initComplete: function () {
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_length select').removeClass('form-control selectbox_entries');
                $('.table-responsive').css('table-layout', 'fixed');
                $('.dataTables_length').css('display', 'none');
            },
            aoColumns: [
                {
                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return data + ', ' + full["PatientFirstName"];
                    }
                },
                {
                    "data": "PhysicianLastName", "title": "Assigned Provider Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        if (data != null && data.length > 0) {
                            return data + ', ' + full["PhysicianFirstName"];
                        }
                        else {
                            return 'N/A';
                        }
                    }
                },
                { "data": "RecentAWVCode", "title": "Recent AWV Code", sclass: "text-center" },
                { "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center" },
                { "data": "NextAWVDate", "title": "Next AWV Scheduled", sClass: "text-center" }
            ],
            buttons: [

                {
                    extend: 'excel',
                    filename: 'Data Export-Patient Audits',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {

                        ExportToExcel('Currentvsprior', 'Currentvsprior', '', '', Year, Year);
                    }
                }
            ],
        });
    }
    else {
        $("#DivCurrentvsprior").append('<table id="CurrentvspriorFLU" class="table tblFAR table-striped" style="width:100%"></table>');
        table = $('#CurrentvspriorFLU').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            destroy: true,
            cache: false,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            "iDisplayLength": 10,
            pagingType: "simple",
            scrollX: true,
            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
            },
            scrollX: true,
            fixedHeader: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetCurrentVersusPriorReportDetails',
                "data": {
                    Year: currentYear,
                    YearStatus: YearStatus,
                    CurrentVersusPriorName: reportName,
                    PracticeId: practiceId,
                    PhysicianId: physicianId,
                    regionId: RegionId,
                    IsCompleted: IsCompleted,
                    IsAssignable: isAssignable
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    oTable = table.fnSettings();
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                }
            },
            initComplete: function () {
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_length select').removeClass('form-control selectbox_entries');
                $('.table-responsive').css('table-layout', 'fixed');
                $('.dataTables_info').css('float', 'right');
                $('.dataTables_info').css('position', 'inherit');
                $('.dataTables_length').css('display', 'none');
            },
            aoColumns: [
                {
                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center", defaultContent: "",
                    "render": function (data, type, full, meta) {
                        return data + ', ' + full["PatientFirstName"];
                    }
                },
                {
                    "data": "PhysicianLastName", "title": "Assigned Provider Name", sClass: "text-center", defaultContent: "",
                    "render": function (data, type, full, meta) {
                        return data + ', ' + full["PhysicianFirstName"];
                    }
                },
                { "data": "RecentFluShotCode", "title": "Recent Flu Shot Code", sClass: "text-center", defaultContent: "" },
                { "data": "MostRecentFluShotDate", "title": "Most Recent Flu Shot Date", sClass: "text-center", defaultContent: "" }
            ],
            buttons: [

                {
                    extend: 'excel',
                    filename: 'Data Export-Patient Audits',
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {

                        ExportToExcel('Currentvsprior', 'CurrentvspriorFLU', '', '', YearStatus, currentYear);

                    }
                }
            ],
        });
    }

}

function GetTableTemplate(gridModel, reportName, year) {

    $(".loader").show();
    var dom = 'Bfrltip';

    var bSort = true;
    var destroy = true;
    var deferRender = true;
    var fixedHeader = true;
    var scrollY = "350px";
    var pagingType = "simple";
    var language = {
        "search": "",
        "sZeroRecords": "No data available",
        paginate: {
            next: '<i class="glyphicon glyphicon-triangle-right"></i>',
            previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
        }
    };
    var initComplete = function () {

        $('.dt-buttons').addClass('pull-right buttons_line');
        $('.dataTables_filter input').addClass('form-control search_text_datatable');
        $('.dataTables_length select').addClass('form-control selectbox_entries');
        $('.selectbox_entries').change(function () {
            resize();
        });
        $('.column-btn').click(function () {
            $column_btn_this = $(this)
            colvis_scroll();
        });
        $(document).on('click', '.dt-button-collection .dt-button', function () {
            colvis_inner_button();
        });
        //datatablerowspan();
    };

    console.log('bind table', gridModel.Data, gridModel.FieldName);
    // var order = [[1, "desc"]];
    var data = gridModel.Data;
    var aoColumns = gridModel.FieldName;
    var rowcolors = gridModel.rowcolor;
    var buttons = [
        {
            extend: 'print',
            title: 'Data export-' + reportName,
            exportOptions: {
                columns: ':visible'
            },
            className: 'print-btn',
            titleAttr: 'Print'
        },
        {
            extend: 'excel',
            filename: 'Data export-' + reportName,
            exportOptions: {
                columns: ':visible'
            },
            className: 'excel-btn',
            titleAttr: 'Export'
        },

        {
            extend: 'pdf',
            filename: 'Data export-' + reportName,
            pageSize: 'LEGAL',
            orientation: 'landscape',
            exportOptions: {

                columns: ':visible'
            },
            className: 'pdf-btn',
            titleAttr: 'Pdf',
            action: function (e, dt, node, config) {

                var tableName = '';
                var currentPriorReportName = $("input:radio.CurrentvsPriorradio:checked")[0].title.toLocaleUpperCase();
                switch (currentPriorReportName) {
                    case 'KPI': tableName = 'kpi-tables';

                        break;
                    case 'SPEND': tableName = 'spend-tables';

                        break;
                    case 'ATTRIBUTION': tableName = 'attribution-tables';

                        break;
                    case 'AWV': tableName = 'Currentvsprior';

                        break;
                    case 'FLUSHOTS': tableName = 'Currentvsprior';

                        break;
                }
                ConvertGraphtoBase('currentvsprior', tableName, '', currentPriorReportName, '', '', '', '', physicianId, practiceId, year);
            }

        },];



    this.GetJsonValue = function () {

        var json = {};
        json.dom = dom;
        json.destroy = destroy;
        json.fixedHeader = fixedHeader;
        json.scrollY = scrollY;
        json.deferRender = deferRender;
        json.iDisplayLength = 10;
        json.pagingType = pagingType;
        json.language = language;
        json.initComplete = initComplete;
        json.bSort = bSort;
        //    json.rowsGroup = rowsGroup;
        //  json.order = order;
        json.aoColumns = aoColumns;
        json.createdRow = rowcolors;
        json.buttons = buttons;
        json.data = data;
        return json;
    }

    $(".loader").fadeOut("slow");

}

function GetCurrentVersusPriorReportDetails(year, reportName, practiceId, physicianId) {

    $(".loader").show();
    document.getElementById('currentVsPriorLoader').style.display = "block";
    document.getElementById('currentVsPriorWrapper').style.display = "none";
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetCurrentVersusPriorGraph',
        data: JSON.stringify({
            Year: year,
            CurrentVersusPriorName: reportName,
            PracticeId: practiceId,
            PhysicianId: physicianId,
            regionId: RegionId,
            IsAssignable: isAssignable
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        language: {
            search: "",
            sZeroRecords: "No data available",

        },
        success: function (data) {
            switch (reportName) {
                case 'AWV':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindAWVRecord();
                    break;
                case 'FluShots':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindFLURecord();
                    break;
                case 'CCM':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindCCMRecord();
                    //practice_ultilise();
                    break;
                case 'KPI':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindKPIRecord();
                    break;
                case 'SPEND':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindSPENDRecord();
                    break;
                case 'Attribution':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindAttributionRecord();
                    break;
            }
          

        },
        complete: function () {
            $(".loader").fadeOut("slow");
            document.getElementById('currentVsPriorWrapper').style.display = "block";
            document.getElementById('currentVsPriorLoader').style.display = "none";
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}

function CurrentVersusPriorReport(data) {

    //var json = {};
    //json.CurrentYearDetails = JSON.parse(data.CurrentYearDetails);
    //json.LastYearDetails = JSON.parse(data.LastYearDetails);
    //this.CurrentVersusPriorGrid = json;
    this.CurrentVersusPriorGraph = JSON.parse(data.CurrentVersusPriorGraph);
}

CurrentVersusPriorReport.prototype.bindAWVRecord = function () {

    new BindCurrentversusPriorChart(this.CurrentVersusPriorGraph, 'AWV', practiceId, physicianId)
};
CurrentVersusPriorReport.prototype.bindFLURecord = function () {

    new BindCurrentversusPriorChart(this.CurrentVersusPriorGraph, 'FLU-Shots', this.CurrentVersusPriorGrid)
};
CurrentVersusPriorReport.prototype.bindCCMRecord = function () {

    this.TableFieldDetails = [
        {
            "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
            "render": function (data, type, full, meta) {
                return data + ', ' + full["PatientFirstName"];
            }
        },
        {
            "data": "PhysicianLastName", "title": "Provider Name", sClass: "text-center",
            "render": function (data, type, full, meta) {
                return data + ', ' + full["PhysicianFirstName"];
            }
        },
        { "data": "HCCConditionNames", "title": "HCC Condition Name", sClass: "text-center" },
        { "data": "BillableTime", "title": "Billable Time for Current Month", sClass: "text-center" },
    ];
    var data = new GetCCMGraphDetails(this.CurrentVersusPriorGrid);
    debugger;

    currentyear_total = data.CurrentYearDetails.map(function (a) { return a.Total; });//.map(a => a.Total);
    lastyear_total = data.LastYearDetails.map(function (a) { return a.Total; });
    currentyear_complete = data.CurrentYearDetails.map(function (a) { return a.Completed; });
    lastyear_complete = data.LastYearDetails.map(function (a) { return a.Completed; });
    graph_PracticesName = data.PracticeDetails.map(function (a) { return a.Name; });

    var gridData = {};
    gridData.Current = data.CurrentYearDetails;
    gridData.Prior = data.LastYearDetails;
    gridData.tableFieldDetails = this.TableFieldDetails;

    new CCMChart(gridData);
    new BindCurrentversusPriorChart(this.CurrentVersusPriorGraph, this.CurrentVersusPriorGrid, 'CCM')
};
CurrentVersusPriorReport.prototype.bindKPIRecord = function () {

    var finalObj = this.CurrentVersusPriorGrid.CurrentYearDetails.concat(this.CurrentVersusPriorGrid.LastYearDetails);
    this.SortedData = finalObj.sort(function (a, b) {

        var o1 = a["PracticeName"].toLowerCase();
        var o2 = b["PracticeName"].toLowerCase();

        var p1 = a["Year"];
        var p2 = b["Year"];
        if (o1 < o2) return -1;
        if (o1 > o2) return 1;
        if (p1 < p2) return -1;
        if (p1 > p2) return 1;
        return 0;
    });
    this.rowcreated = function (row, data, dataIndex) {
        var currentyear = 1;
        if (data["Year"] == currentyear) {
            $(row).addClass('current_prior_datatable_current');
        } else {

            $(row).addClass('current_prior_datatable_lastyear');
        }
    }
    this.TableFieldDetails = [
        //{ "data": "Id", "title": "Id", sClass: "hidden" },
        { "data": "PracticeName", "title": "", sClass: "text-center" },
        //{ "data": "NumberOfAssignedBeneficiaries", "title": "Assigned Beneficiaries", sClass: "text-center" },
        { "data": "PYF", "title": "YTD Person Years", sClass: "text-center" },
        { "data": "PMPMString", "title": "PMPM", sClass: "text-center" },
        { "data": "InpatientAdmits", "title": "Inpatient Admits/1000", sClass: "text-center" },
        { "data": "ERAdmits", "title": "ER Visits/1000", sClass: "text-center" },
        { "data": "ERVisitsPMPMString", "title": "ER Visits PMPM", sClass: "currency" },
        { "data": "SNFVisitsPMPMString", "title": "SNF PMPM", sClass: "currency" },
        { "data": "HHAVisitsPMPMString", "title": "HHA PMPM", sClass: "currency" },
        { "data": "PartBPMPMString", "title": "Part-B PMPM", sClass: "currency" },
        //{ "data": "TotalCostYear2String", "title": "Total Cost-Year",  sType: "currency" },
        { "data": "TotalCostYear2", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost-Year", sClass: "text-center", sType: "currency" },
    ];
    this.rowColor = function (row, data, dataIndex) {
        var year = 1
        if (data["Year"] == year) {
            $(row).find('td:not(:first-child)').css("background-color", "#d4e5df");
        }
        else {
            $(row).find('td:not(:first-child)').css("background-color", "#eeddc9");
        }
    };
    console.log('kpi data', this.SortedData);
    var gridDetails = {};
    gridDetails.Data = this.SortedData;
    gridDetails.FieldName = this.TableFieldDetails;
    gridDetails.rowColor = this.rowColor;
    oTable = this.TableFieldDetails;
    new BindCurrentversusPriorTable(gridDetails, 'KPI');
};
CurrentVersusPriorReport.prototype.bindSPENDRecord = function () {

    var finalObj = this.CurrentVersusPriorGrid.CurrentYearDetails.concat(this.CurrentVersusPriorGrid.LastYearDetails);
    this.SortedData = finalObj.sort(function (a, b) {

        var o1 = a["PracticeName"].toLowerCase();
        var o2 = b["PracticeName"].toLowerCase();
        var p1 = a["Year"];
        var p2 = b["Year"];

        if (o1 < o2) return -1;
        if (o1 > o2) return 1;
        if (p1 < p2) return -1;
        if (p1 > p2) return 1;
        return 0;
    });
    this.rowcreated = function (row, data, dataIndex) {
        var currentyear = 1;
        if (data["Year"] == currentyear) {
            $(row).addClass('current_prior_datatable_current');
        } else {

            $(row).addClass('current_prior_datatable_lastyear');
        }
    }
    this.TableFieldDetails = [
        { "data": "PracticeName", "title": "", sClass: "text-center" },
        { "data": "BenchmarkPMPYString", "title": "PMPY Benchmark", sClass: "currency" },
        { "data": "ActualPMPYString", "title": "PMPY Actual", sClass: "currency" },
        { "data": "InpatientCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Inpatient", sClass: "text-center", sType: "currency" },
        { "data": "OutpatientCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Outpatients", sClass: "text-center", sType: "currency" },
        { "data": "ERCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "ER", sClass: "currency" },
        { "data": "SNFCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "SNF", sClass: "currency" },
        { "data": "HHACost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "HHA", sClass: "currency" },
        { "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Part B Rx Cost", sClass: "currency" }
    ];
    var gridDetails = {};
    gridDetails.Data = this.SortedData;
    gridDetails.FieldName = this.TableFieldDetails;
    gridDetails.rowcolor = this.rowcreated;
    oTable = this.TableFieldDetails;
    new BindCurrentversusPriorTable(gridDetails, 'SPEND');
};
CurrentVersusPriorReport.prototype.bindAttributionRecord = function () {

    var finalObj = this.CurrentVersusPriorGrid.CurrentYearDetails.concat(this.CurrentVersusPriorGrid.LastYearDetails);
    this.SortedData = finalObj.sort(function (a, b) {

        var o1 = a["PracticeName"].toLowerCase();
        var o2 = b["PracticeName"].toLowerCase();
        var p1 = a["Year"];
        var p2 = b["Year"];

        if (o1 < o2) return -1;
        if (o1 > o2) return 1;
        if (p1 < p2) return -1;
        if (p1 > p2) return 1;
        return 0;
    });
    this.TableFieldDetails = [
        { "data": "PracticeName", "title": "", sClass: "text-center" },
        { "data": "AttributedLives", "title": "Attributed lives", sClass: "text-center" },
        { "data": "Eligibles", "title": "Eligible's", sClass: "text-center" },
        { "data": "PatientsWithoutClaims", "title": "Patients With no Claims", sClass: "text-center" },
        { "data": "PCPVisits", "title": "In network PCP visits", sClass: "text-center" },
        { "data": "CCM", "title": "CCM", sClass: "text-center" },
        { "data": "HCHN", "title": "HCHN", sClass: "text-center" }
    ];
    var gridDetails = {};
    gridDetails.Data = this.SortedData;
    gridDetails.FieldName = this.TableFieldDetails;
    new BindCurrentversusPriorTable(gridDetails, 'Attribution');
};


function bindAWVRecord(reportName) {

    this.CurrentVersusPriorGrid.TableFieldDetails = [
        {
            "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
            "render": function (data, type, full, meta) {
                return data + ', ' + full["PatientFirstName"];
            }
        },
        {
            "data": "PhysicianLastName", "title": "Provider Name", sClass: "text-center",
            "render": function (data, type, full, meta) {
                if (data != null && data.length > 0) {
                    return data + ', ' + full["PhysicianFirstName"];
                }
                else {
                    return 'N/A';
                }
            }
        },
        { "data": "RecentAWVCode", "title": "Recent AWV Code", sclass: "text-center" },
        {
            "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center",
        },
        {
            "data": "NextAWVDate", "title": "Next AWV Scheduled", sClass: "text-center",
        }
    ];

    new BindCurrentversusPriorChart(this.CurrentVersusPriorGrid, 'AWV', practiceId, physicianId)
};

function BindCurrentversusPriorTable(gridmodel, reportName, year) {
    console.log('BindCurrentversusPriorTable', gridmodel, reportName, year);

    //$(".loader").show();
    this.rendertable = null;
    var isgroupting = false;
    switch (reportName) {
        case 'KPI': this.rendertable = 'kpi-tables'
            isgroupting = true;
            break;
        case 'SPEND': this.rendertable = 'spend-tables'
            isgroupting = true;
            break;
        case 'Attribution': this.rendertable = 'attribution-tables'
            isgroupting = true;
            break;
        case 'AWV': this.rendertable = 'Currentvsprior',
            $("#current_prior_table").modal('show');
            break;
        case 'FLU-Shots': this.rendertable = 'Currentvsprior',
            $("#current_prior_table").modal('show');
            break;
    }

    var objtable = new GetTableTemplate(gridmodel, reportName, year);
    var obj = objtable.GetJsonValue();
    id_current_prior = this.rendertable;
    if ($.fn.DataTable.isDataTable('#' + id_current_prior)) {
        $('#' + id_current_prior).DataTable().destroy();
        $('#' + id_current_prior).html('')
    }
    setTimeout(function () {
        $('#' + id_current_prior).dataTable(obj);
        if (isgroupting == true) {
            datatablerowspan();
        }

        $('#' + id_current_prior).on('draw.dt', function () {
            if (isgroupting == true) {
                datatablerowspan();
            }
        });
    }, 500);

}
function BindCurrentversusPriorChart(graphModel, reportName) {
    console.log('chart', graphModel, reportName);
    console.log('chart', graphModel, reportName);
    var lastyear = 0;
    if (graphModel != null) {
        if (graphModel.length >= 2 && graphModel[1] != null) {
            currentyear_total = graphModel[1].TotalPatientCount;
            currentyear_complete = graphModel[1].CompletedPatientCount;
        }
        else {
            currentyear_total = 0;
            currentyear_complete = 0;
        }

        if (graphModel[0] != null) {
            lastyear_total = graphModel[0].TotalPatientCount;
            lastyear_complete = graphModel[0].CompletedPatientCount;
        }
        else {
            lastyear_total = 0;
            lastyear_complete = 0;
        }

        if (reportName == "AWV" && graphModel[0] != null) {
            lastyear = graphModel[0].TotalPatientCount; // this is for the last year count purple line

        } else {
            lastyear = 0;
        }
    }

    this.rendertable = null;
    switch (reportName) {
        case 'AWV': this.rendertable = 'awv-charts'
            break;
        case 'FLU-Shots': this.rendertable = 'flu_shot-charts'
            break;
        case 'CCM': this.rendertable = 'ccm-charts'
            break;
    }

    this.GraphDataSeries = [{
        name: 'Last Year',
        data: [{
            color: '#eeddc9',
            y: currentyear_total,
            dataLabels: {
                allowOverlap: true,
                enabled: true,
                y: -35,
                align: 'right',
                color: '#2482ce',
                formatter: function () {
                    return '<p class="currentyeartitle"> Total: ' + currentyear_total + '</p>';
                },
            },
        },
        {
            color: '#d4e4e1',
            y: lastyear_total,
            dataLabels: {
                allowOverlap: true,
                enabled: true,
                y: -35,
                align: 'right',
                color: '#2482ce',
                formatter: function () {
                    return '<p class="currentyeartitle"> Total: ' + lastyear_total + '</p>';
                },
            },
        }]
    },
    {
        name: 'Current Year',
        data: [{
            //showInLegend: false,
            color: 'rgb(255,198,106)',
            y: currentyear_complete,
            dataLabels: {
                enabled: true,
                y: 35,
                color: '#2482ce',
                align: 'center',
                formatter: function () {
                    return '<p class="currentyeartitle"> Completed: ' + currentyear_complete + '</p> ';
                },
            },
        },
        {
            //showInLegend: false,
            color: '#66ced9',
            y: lastyear_complete,
            dataLabels: {
                enabled: true,
                y: 35,
                color: '#2482ce',
                align: 'center',
                formatter: function () {
                    return '<p class="currentyeartitle"> Completed: ' + lastyear_complete + '</p> ';
                },
            },
        }]
    },
    {
        name: 'End of Year',
        type: 'scatter',
        color: '#940ead',
        //zIndex: 20,
        data: [{
            y: lastyear,
        },
        {
            y: currentyear_complete
        }]
    }

    ];

    var json = new GetChartTemplate(this.GraphDataSeries, reportName);

    Highcharts.Renderer.prototype.symbols.line = function (x, y, width, height) {
        return ['M', x, y + width / 2, 'L', x + height, y + width / 2];
    };


    Highcharts.setOptions({
        colors: ['rgb(255,198,106)', '#63c8d4']
    });


    //$('#' + this.rendertable).highcharts(json.GetJsonValue());

    var CurVsPriorChart = new Highcharts.Chart(json.GetJsonValueRender(this.rendertable));
}

function datatablerowspan() {
    //$('#' + id_current_prior).find('tbody tr:nth-of-type(odd) td:first-child').attr('rowspan', '2').addClass('data_firstcolumn_align');
    //$('#' + id_current_prior).find('tbody tr:nth-of-type(even) td:first-child').addClass('hidden');
}

function CCMChart(gridModel) {
    //var current_wdth = ($('.current_prior_width_div').width() - 150);
    //Highcharts.Renderer.prototype.symbols.line = function (x, y, width, height) {
    //    return ['M', x, y + width / 2, 'L', x + height, y + width / 2];
    //};

    var gridModel = gridModel;

    var temp = new Highcharts.Chart({
        chart: {
            type: 'column',
            renderTo: 'ccm-charts',
            inverted: true,
        },
        title: { text: '' },
        // xAxis: { categories: ['Practice A', 'Practice B', 'Practice C'], gridLineWidth: 0, tickLength: 0 },
        xAxis: { categories: graph_PracticesName, gridLineWidth: 0, tickLength: 0, min: 0, max: 4, scrollbar: { enabled: true } },
        yAxis: [{ title: { text: '' }, min: 0, gridLineWidth: 0, tickLength: 0, lineWidth: 1, labels: { enabled: false } },
        { title: { text: '' }, min: 0, gridLineWidth: 0, tickLength: 0, lineWidth: 0, labels: { enabled: false }, opposite: true }],
        tooltip: { shared: false, enabled: false },
        plotOptions: {
            column: {
                grouping: false, shadow: false, borderWidth: 0,
                events: {
                    legendItemClick: function () { return false; }
                },
                point: {
                    events: {
                        click: function (event) {
                            var _category = this.category;
                            var gridDetails = {};
                            switch (this.series.name) {
                                case 'Current Year':

                                    gridModel.Current.map(function (element) {
                                        if (element.PName == _category) {
                                            gridDetails.Data = element.Data;
                                        }
                                    });
                                    gridDetails.FieldName = gridModel.tableFieldDetails;
                                    new BindCurrentversusPriorTable(gridDetails, 'CurrentvspriorPopUp');
                                    break;
                                case 'Last Year':
                                    gridModel.Prior.map(function (element) {
                                        if (element.PName == _category) {
                                            gridDetails.Data = element.Data;
                                        }
                                    });
                                    gridDetails.FieldName = gridModel.tableFieldDetails;
                                    new BindCurrentversusPriorTable(gridDetails, 'CurrentvspriorPopUp');
                                    break;
                            }
                            // popuptable();
                        }
                    }
                },
                dataLabels: {
                    enabled: true, inside: false, style: { textOutline: false },
                }
            },
        },
        legend: { layout: 'vertical', align: 'right', verticalAlign: 'top', symbolHeight: 12, symbolWidth: 12, symbolRadius: 0, x: 0, reversed: false },
        credits: { enabled: false },
        series: [
            {
                name: 'Last Year',
                showInLegend: false,
                color: '#eeddc9',
                allowOverlap: true,
                data: lastyear_total,
                stacking: 'percent',
                dataLabels: {
                    enabled: true,
                    align: 'right',
                    color: '#2482ce',
                    formatter: function () { return '<p class="currentyeartitle"> Total: ' + parseInt(this.y) + '</p> '; }
                },
                pointPadding: 0.2,
                pointPlacement: 0.2,
                yAxis: 1
            },
            {
                name: 'Last Year',
                color: 'rgb(255,198,106)',
                data: lastyear_complete,
                stacking: 'percent',
                dataLabels: {
                    enabled: true,
                    align: 'right',
                    color: '#fff',
                    formatter: function () { return '<p class="currentyeartitle"> Completed: ' + parseInt(this.y) + '</p> '; },
                },
                pointPadding: 0.2,
                pointPlacement: 0.2,
                yAxis: 1
            },
            {
                name: 'Current Year',
                showInLegend: false,
                color: '#d4e4e1',
                allowOverlap: true,
                data: currentyear_total,
                stacking: 'percent',
                dataLabels: {
                    enabled: true,
                    color: '#2482ce',
                    align: 'right',
                    formatter: function () { return '<p class="currentyeartitle"> Total: ' + parseInt(this.y) + '</p> '; },
                },
                pointPadding: 0.2,
                pointPlacement: -0.2
            },
            {
                name: 'Current Year',
                color: '#66ced9',
                data: currentyear_complete,
                dataLabels: {
                    enabled: true,
                    align: 'right',
                    color: '#fff',
                    formatter: function () { return '<p class="currentyeartitle"> Completed: ' + parseInt(this.y) + '</p> '; },
                },
                pointPadding: 0.2,
                pointPlacement: -0.2
            }]
    });
};

function GetCCMGraphDetails(data) {

    debugger;
    var finalObj = data.CurrentYearDetails.concat(data.LastYearDetails);

    this.PracticeDetails = new _practicedetails();
    this.CurrentYearDetails = new _getCountDetails(this.PracticeDetails, data.CurrentYearDetails);

    this.LastYearDetails = new _getCountDetails(this.PracticeDetails, data.LastYearDetails);

    function _getCountDetails(practiceDetails, array) {
        var _dummyArray = [];

        for (i = 0; i < practiceDetails.length; i++) {

            var item = {};
            var _array = array.filter(function (element) { return element.PracticeId == practiceDetails[i].Id })

            item.Data = _array;
            item.PName = practiceDetails[i].Name;
            //item.Total = _array.length;
            item.Total = _array.length == 0 ? 0.005 : _array.length;
            item.Completed = _array.filter(function (element) { return (element.BillableTime != 0) }).length;

            _dummyArray.push(item);
        }
        return _dummyArray;
    }

    function _practicedetails() {

        var practiceDetails = [];
        var uniqueNames = [];
        for (i = 0; i < finalObj.length; i++) {

            if (uniqueNames.indexOf(finalObj[i].PracticeId) === -1) {
                var _arr = {};
                _arr.Id = finalObj[i].PracticeId;
                _arr.Name = finalObj[i].PracticeName;
                uniqueNames.push(finalObj[i].PracticeId);
                practiceDetails.push(_arr);
            }
        }
        return practiceDetails;
    }
}

/*CareManger Function*/
function doConfirm(msg, yesFn, noFn) {
    var confirmBox = $("#confirmBox");
    confirmBox.find(".message").text(msg);
    confirmBox.find(".yes,.no").unbind().click(function () {
        confirmBox.hide();
    });
    confirmBox.find(".yes").click(yesFn);
    confirmBox.find(".no").click(noFn);

    confirmBox.show();
    confirmBox.autoClose();

}
var tableName;
$(function () {

    serverRoot = $('#hdnServerRootURL').val();
    if (window.location.hostname == 'localhost')
        serverRoot = '';

    $("#tblCareManagerPatient").on('click', 'tbody td .remove', function () {
        var table = $("#tblCareManagerPatient").DataTable();
        var cellClicked = table.cell(this).data();
        var rowClicked = $(this).closest('tr');
        var patientId = table.row(rowClicked).data().PatientId;
        doConfirm("Are you sure you want to remove this record?", function yes() {

            table.row(rowClicked).remove().draw();

            $.ajax({
                type: "POST",
                url: serverRoot + '/Insights/Insights/CareManagerGrid',
                data: JSON.stringify({
                    IsRemoved: true, Id: patientId
                }),
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {

                },
                complete: function () {
                    //$(".loader").fadeOut("slow");
                },
                error: function (xhr) {
                    //$(".loader").fadeOut("slow");
                    ValidationMessage("Error updating patient status.");
                }
            });
        }, function no() {
        });
    })
});


var caseManagerRemovedList = [];
var caseManagerAddedList = [];
var careManagerAction = '';
var currentSelectedGroup = '';
var caseManagerList = '';

$('#CareSource').on("select2:select", function (e) {
    if (careManagerAction == "Add") {
        $("#CaseManager").find(".multi-selct span.select2-selection__choice__remove").attr("style", "display:none");
    }

});

$('#CareSource').on("select2:unselect", function (e) {

    var removedObj = { Id: e.params.data.id, Name: e.params.data.text }
    //List contians caremangers removed from the group
    caseManagerRemovedList.push(removedObj.Id);
    $("#CareDestination").append('<option value="' + e.params.data.id + '">' + e.params.data.text + '</option>');
    // $("#CareSource option[value=" + e.params.data.id + "]").remove();
});

function addOrRemoveCaseMangerFromGroup() {
    var selectedoptionsCount = $('#CareSource option:selected').length;
    $('#CareSource option:selected').each(function () {

        var addedObj = { Id: $(this).val() }
        if (Number(selectedoptionsCount) == 1) {
            caseManagerAddedList.push(addedObj.Id);
        }
        else {
            caseManagerAddedList.push(addedObj.Id);
        }
        ///$("#CareSource option[value=" + $(this).val() + "]").remove();
    });



    caseManagerList = caseManagerAddedList;


    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/UpdateCareManagerGroup',
        data: JSON.stringify({
            GroupId: currentSelectedGroup, Action: careManagerAction, CareManagerIds: caseManagerList
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: function (data) {
            alert(careManagerAction + " successfully");
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

$("#myCRModal").on('show.bs.modal', function (event) {
    $("#confirmBox").hide();
    $(this).find('.CM_height_modal-body').css({
        "max-height": windowheight - 80,
        "overflow": "auto"
    });
    var widgetName = $(event.relatedTarget).data('title');
    $(".loader").show();
    switch (widgetName) {
        case 'newpatienttracker':
            $(this).find('.modal-title').text("New Patient Tracker");
            tableName = '#tblCareManagerPatient';
            $('#care_manager_patientGrid').show().siblings("div").hide();
            $.ajax({
                type: "POST",
                url: serverRoot + '/Insights/Insights/CareManagerGrid',
                data: JSON.stringify({
                    IsRemoved: false, Id: ""
                }),
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    setTimeout(function () {

                        $('#tblCareManagerPatient').dataTable({
                            "dom": 'frlt<"dt-buttons">ip',
                            destroy: true,
                            cache: false,
                            pagingType: "simple",
                            data: data.PatientTrackerGrid,
                            scrollX: true,
                            "language": {
                                "search": "",
                                "emptyTable": "No data available.",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {

                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                $('.dataTables_filter input').attr('placeholder', 'Search');
                            },
                            order: [[8, "desc"]],
                            aoColumns: [
                                // { "data": "Id", "title": "Id", sClass: "hidden" },
                                { "data": "PatientId", "title": "PatientId", sClass: "hidden" },
                                { "data": "EmailAddress", "title": "EmailAddress", sClass: "hidden" },
                                {
                                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return data + ', ' + full["PatientFirstName"];
                                    }
                                },
                                {
                                    "data": "Risk", "title": "Risk", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        switch (data) {
                                            case "3":
                                                return "<img src=" + serverRoot + "/Images/flag-Green.svg style='width:15px;height:15px;'/>";
                                                break;
                                            case "2":
                                                return "<img src=" + serverRoot + "/Images/flag_yellow.svg style='width:15px;height:15px;'/>";
                                                break;
                                            case "1":
                                                return "<img src=" + serverRoot + "/Images/flag_red.svg style='width:15px;height:15px;' />";
                                                break;
                                            default:
                                                return "<img src=" + serverRoot + "/Images/flag_Grey.svg style='width:15px;height:15px;' />";
                                                break;

                                        }
                                    }
                                },
                                { "data": "GroupName", "title": "Group", sClass: "text-center" },
                                {
                                    "data": "Conditions", "title": "Conditions", sClass: "text-center text-wrap",
                                    "render": function (data, type, full, meta) {
                                        return "<div class='text-wrap'>" + data + "</div>";
                                    }
                                },
                                {
                                    "data": "PhysicianLastName", "title": "PCP", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return data + ', ' + full["PhysicianFirstName"];
                                    }
                                },
                                { "data": "RiskScore", "title": "Risk Score", sClass: "text-center" },
                                {
                                    "data": "CostString", "title": "Total Cost", sClass: "text-center", sType: "currency"

                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='showCreateCarePlanPopup(\"Create Care Plan\",\"" + full['PatientId'] + "\");return false'><img src=" + serverRoot + "/images/document-02.svg style='width:15px;height:15px;' title='Create care plan'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='showCRModalPopup(\"Compose Message\",\"" + full['EmailId'] + "\",\"" + '' + "\");return false'><img src=" + serverRoot + "/images/mail-02.svg style='width:15px;height:15px;' title='Send a message'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a onclick=SetPhpPatientID('" + full["PatientId"] + "') href='javascript:void(0);'><img src=" + serverRoot + "/images/go-to-php-01.svg style='width:15px;height:15px;' title='Go to PHP'/></a>"
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='schedulePatientAppointment(\"" + full['PatientId'] + "\");return false'><img src=" + serverRoot + "/images/Calender-01.svg style='width:15px;height:15px;' title='Schedule Appointment'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a class='remove' href='javascript:void(0);'onclick='return false;'><img src=" + serverRoot + "/images/close-01.svg style='width:15px;height:15px;' title='Remove'/></a>";
                                    }
                                }
                            ]
                        });
                        var toolBar = "&nbsp;&nbsp;<img src=" + serverRoot + "/images/document-02.svg style=width:15px;height:15px; title=Create care plan/>&nbsp;Create care plan&nbsp;&nbsp;&nbsp;<img src=" + serverRoot + "/images/mail-02.svg style=width:15px;height:15px; title=Send a message/>&nbsp;Send a message&nbsp;&nbsp;&nbsp;";
                        toolBar += "<img src=" + serverRoot + "/images/go-to-php-01.svg style=width:15px;height:15px; title=Go to PHP/>&nbsp;Go to PHP&nbsp;&nbsp;&nbsp;<img src=" + serverRoot + "/images/Calender-01.svg style=width:15px;height:15px; title=Schedule Appointment/>&nbsp;Schedule Appointment&nbsp;&nbsp;&nbsp;";
                        toolBar += "<img src=" + serverRoot + "/images/close-01.svg style=width:15px;height:15px; title=Remove/>&nbsp;Remove";
                        $("div.dt-buttons").html(toolBar);

                    }, 500);
                },
                complete: function () {
                    $(".loader").fadeOut("slow");
                },
                error: function (xhr) {
                    $(".loader").fadeOut("slow");
                    ValidationMessage("Unable to Process Request. Please Try Again Later.");
                }
            });
            break;
        case 'casetracker':
            $(this).find('.modal-title').text("Case Tracker");
            tableName = '#tblCareManagerCaseTracker';
            $('#care_manager_casetracker').show().siblings("div").hide();
            $.ajax({
                type: "POST",
                url: serverRoot + '/Insights/Insights/CareManagerCaseTracker',
                data: JSON.stringify({
                    IsRemoved: false, Id: ""
                }),
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    setTimeout(function () {

                        $('#tblCareManagerCaseTracker').dataTable({
                            "dom": 'frlt<"dt-buttons">ip',
                            destroy: true,
                            cache: false,
                            pagingType: "simple",
                            data: data.CaseTrackerList,
                            scrollX: true,
                            "language": {
                                "search": "",
                                "emptyTable": "No data available.",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                $('.dataTables_filter input').attr('placeholder', 'Search');
                            },
                            aoColumns: [
                                // { "data": "Id", "title": "Id", sClass: "hidden" },
                                { "data": "PatientId", "title": "PatientId", sClass: "hidden" },
                                { "data": "EmailAddress", "title": "EmailAddress", sClass: "hidden" },
                                {
                                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return data + ', ' + full["PatientFirstName"];
                                    }
                                },
                                {
                                    "data": "GroupOwnerFullName", "title": "Case Managers", sClass: "text-center"
                                    //,
                                    //"render": function (data, type, full, meta) {
                                    //    return "<a href='javascript:void(0);' onclick='return false'>" + data + ', ' + full["CareManagerFirstName"] + "</a>";
                                    //}
                                },
                                {
                                    "data": "Risk", "title": "Risk", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        switch (data) {
                                            case "3":
                                                return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag-Green.svg style='width:15px;height:15px;'/></a>";
                                                break;
                                            case "2":
                                                return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag_yellow.svg style='width:15px;height:15px;'/></a>";
                                                break;
                                            case "1":
                                                return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag_red.svg style='width:15px;height:15px;' /></a>";
                                                break;
                                            default:
                                                return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag_Grey.svg style='width:15px;height:15px;' /></a>";
                                                break;

                                        }
                                    }
                                },
                                { "data": "GroupName", "title": "Group", sClass: "text-center" },
                                { "data": "Status", "title": "Status", sClass: "text-center" },
                                {
                                    "data": "Conditions", "title": "Conditions", sClass: "text-center text-wrap",
                                    "render": function (data, type, full, meta) {
                                        return "<div class='text-wrap'>" + data + "</div>";
                                    }
                                },
                                { "data": "EffectiveDate", "title": "Effective Date", sClass: "text-center" },
                                { "data": "UpdatedDate", "title": "Last Updated On", sClass: "text-center" },

                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='showCreateCarePlanPopup(\"Create Care Plan\",\"" + full['PatientId'] + "\");return false'><img src=" + serverRoot + "/images/document-02.svg style='width:15px;height:15px;' title='Create care plan'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='showCRModalPopup(\"Compose Message\",\"" + full['EmailId'] + "\",\"" + '' + "\");return false'><img src=" + serverRoot + "/images/mail-02.svg style='width:15px;height:15px;' title='Send a message'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a onclick=SetPhpPatientID('" + full["PatientId"] + "') href='javascript:void(0);'><img src=" + serverRoot + "/images/go-to-php-01.svg style='width:15px;height:15px;' title='Go to PHP'/></a>"
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='schedulePatientAppointment(\"" + full['PatientId'] + "\");return false'><img src=" + serverRoot + "/images/Calender-01.svg style='width:15px;height:15px;' title='Schedule Appointment'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        ////href=' + serverRoot + '/Insights/Insights/DownloadClinicalDocument/' + data + '>' + 'Download' + '</a>'
                                        return '<a class="download"; href=' + serverRoot + '/Insights/Insights/DownloadClinicalDocument/' + full['CarePlanReportId'] + '><img src=' + serverRoot + '/Images/Adobe-01.svg style="width:15px;height:15px;" title="Download PDF"/></a>'

                                        //"<a class='download';href='javascript:void(0);' onclick=downloadCarePlan(\"" + full['FileRepositoryId'] + "\"); return false'><img src=" + serverRoot + "/Images/Adobe-01.svg style='width:15px;height:15px;' title='Download PDF'/></a>";
                                    }
                                }
                            ]
                        });

                        var toolBar = "&nbsp;&nbsp;<img src=" + serverRoot + "/images/document-02.svg style=width:15px;height:15px; title=Create care plan/>&nbsp;Create care plan&nbsp;&nbsp;&nbsp;<img src=" + serverRoot + "/images/mail-02.svg style=width:15px;height:15px; title=Send a message/>&nbsp;Send a message&nbsp;&nbsp;&nbsp;";
                        toolBar += "<img src=" + serverRoot + "/images/go-to-php-01.svg style=width:15px;height:15px; title=Go to PHP/>&nbsp;Go to PHP&nbsp;&nbsp;&nbsp;<img src=" + serverRoot + "/images/Calender-01.svg style=width:15px;height:15px; title=Schedule Appointment/>&nbsp;Schedule Appointment&nbsp;&nbsp;&nbsp;";
                        toolBar += "<img src=" + serverRoot + "/images/Adobe-01.svg style=width:15px;height:15px; title=Download PDF/>&nbsp;Download PDF";
                        $("div.dt-buttons").html(toolBar);
                    }, 500);
                },
                complete: function () {
                    $(".loader").fadeOut("slow");
                },
                error: function (xhr) {
                    $(".loader").fadeOut("slow");
                    ValidationMessage("Unable to Process Request. Please Try Again Later.");
                }
            });
            break;
        case 'caseassigner':
            $(this).find('.modal-title').text("Case Assigner");
            tableName = '#tblCareManagerCaseAssigner';
            $('#care_manager_caseassigner').show().siblings("div").hide();
            $.ajax({
                type: "POST",
                url: serverRoot + '/Insights/ CareGroupManagement/CareManagerCaseAssigner',
                data: JSON.stringify({
                    IsRemoved: false, Id: ""
                }),
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    setTimeout(function () {

                        $('#tblCareManagerCaseAssigner').dataTable({
                            "dom": 'frlt<"dt-buttons">ip',
                            destroy: true,
                            cache: false,
                            pagingType: "simple",
                            data: data.CaseAssignerList,
                            scrollX: true,
                            "language": {
                                "search": "",
                                "emptyTable": "No data available.",
                                paginate: {
                                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                                }
                            },
                            initComplete: function () {
                                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                                $('.dataTables_length select').addClass('form-control selectbox_entries');
                                $('.dataTables_filter input').attr('placeholder', 'Search');
                            },
                            aoColumns: [
                                //{ "data": "GroupId", "title": "Group Id", sClass: "hidden" },
                                { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                                { "data": "GroupName", "title": "Group", sClass: "text-center" },
                                { "data": "GroupOwnerFullName", "title": "Group Owner", sClass: "text-center" },
                                {
                                    "data": "CareManagers", "title": "Case Managers", sClass: "text-center",
                                    "render": function (data, type, full, meta) {
                                        return "<div class='text-wrap'>" + data + "</div>";
                                    }
                                },
                                { "data": "PatientCount", "title": "No. of Patients", sClass: "text-center" },
                                { "data": "EffectiveDate", "title": "Effective Date", sClass: "text-center" },
                                { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='showCareAssignerPopup(\"Add Case Manager\",\"" + full['GroupId'] + "\",\"Add\",\"" + full['GroupName'] + "\");return false'><img src=" + serverRoot + "/Images/person-plus-01.svg style='widt*/h:15px;height:15px;' title='Add case manager'/></a>";
                                    }
                                },
                                {
                                    "data": null, "targets": 'no-sort', "orderable": false,
                                    "render": function (data, type, full, meta) {
                                        return "<a href='javascript:void(0);'onclick='showCareAssignerPopup(\"Remove Case Manager\",\"" + full['GroupId'] + "\",\"Remove\",\"" + full['GroupName'] + "\");return false'><img src=" + serverRoot + "/Images/person-minus-01.svg style='width:15px;height:15px;' title='Remove case manager'/></a>*/";
                                    }
                                }
                                //,
                                //{
                                //    "data": null, "targets": 'no-sort', "orderable": false,
                                //    "render": function (data, type, full, meta) {
                                //        return "<a href='javascript:void(0);'onclick='return false'><img src=" + serverRoot + "/Images/edit-01.svg style='width:15px;height:15px;' title='Edit Group'/></a>";
                                //    }
                                //},
                                //{
                                //    "data": null, "targets": 'no-sort', "orderable": false,
                                //    "render": function (data, type, full, meta) {
                                //        return "<a class='delete';href='javascript:void(0);'onclick='return false;'><img src=" + serverRoot + "/Images/close-02.svg style='width:15px;height:15px;' title='Delete Group'/></a>";
                                //    }
                                //}
                            ]
                        });
                        var toolBar = "&nbsp;&nbsp;<img src=" + serverRoot + "/Images/person-plus-01.svg style=width:15px;height:15px; title=Add Case Manager/>&nbsp;Add Case Manager&nbsp;&nbsp;&nbsp;";
                        toolBar += "<img src=" + serverRoot + "/Images/person-minus-01.svg style=width:15px;height:15px; title=Go to PHP/>&nbsp;Remove Case Manager&nbsp;&nbsp;";
                        //toolBar += "<img src=" + serverRoot + "/Images/edit-01.svg style=width:15px;height:15px; title=Edit Group/>&nbsp;Edit Group&nbsp;&nbsp;<img src=" + serverRoot + "/Images/close-02.svg style=width:15px;height:15px; title=Delete Group/>&nbsp;Delete Group";
                        $("div.dt-buttons").html(toolBar);
                    }, 500);
                },
                complete: function () {
                    $(".loader").fadeOut("slow");
                },
                error: function (xhr) {
                    $(".loader").fadeOut("slow");
                    ValidationMessage("Unable to Process Request. Please Try Again Later.");
                }
            });
    }

});


function showCRModalPopup(title, NameFirst, NameLast) {
    $("#CRModalPopup .modal-body").html("");
    $("#CRModalPopup").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#CRModalPopup .modal-title").css("color", "white");
    $("#CRModalPopup .modal-title").html(title);


    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/ CareGroupManagement/ComposeMessage',
        ata: JSON.stringify({
            NameFirst: NameFirst,
            NameLast: NameLast
        }),
        contentType: 'application/html; charset=utf-8',
        dataType: 'html',
        success: function (view) {

            $("#CRModalPopup .modal-body").html(view);
            $("#CRModalPopup .MsgPopup").css("overflow", "auto");
            $("#composemail").show();
            $('input.form-control').val('');
            $("#messageModel_MsgTo").val(NameFirst + " " + NameLast);
            $(".Editor-editor").text("");
            editor_value = "#composemail";
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}


function showCreateCarePlanPopup(title, patientId) {
    $("#CarePlanModal .modal-body").html("");
    $("#CarePlanModal").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#CarePlanModal .modal-title").css("color", "white");
    $("#CarePlanModal .modal-title").html(title);

    var createPlanWindow = $(window).height();
    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetIgniteCreateCarePlan',
        data: JSON.stringify({
            PatientId: patientId
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: function (data) {
            $("#CarePlanModal .crMsgPopup").css("overflow", "hidden");
            $("#CarePlanModal .modal-body").html('<iframe id="careplaniframe" sandbox="allow-same-origin allow-scripts allow-popups allow-forms allow-modals allow-downloads" src="' + data.IgniteCarePlanURL + '" style="width:100%; height:82vh" scrolling="yes" frameborder=0></iframe>');
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

function showCareAssignerPopup(title, groupId, action, owner) {
    var popup = $("#CaseManager");
    popup.modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    popup.find(".modal-title").html(title);
    $("#btnAddOrRemoveCaseManger").text(action);
    $("#groupOwnerName").text(owner);

    careManagerAction = action;
    currentSelectedGroup = groupId;
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/AddOrRemoveCaseManager',
        data: JSON.stringify({
            GroupId: groupId
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: function (data) {
            caseManagerRemovedList = [];
            caseManagerAddedList = [];
            $("#CareSource").find('option').remove().end();
            //$("#CareDestination").find('option').remove().end();

            if (action == "Add") {
                $.each(data.CaseManagerSoruce, function (index, item) {
                    $("#CareSource").append('<option value="' + item.Id + '">' + item.GroupOwnerFullName + '</option>');
                });
            }
            else {
                $.each(data.CaseManagerDestination, function (index, item) {
                    $("#CareSource").append('<option value="' + item.Id + '">' + item.GroupOwnerFullName + '</option>');
                });
            }

        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}

$("#myCRSearchModal").on('show.bs.modal', function (event) {
    var title = $(event.relatedTarget).data('title');
    var patientName = $('#PatientName').val();
    var resource = $('#SearchResource option:selected').val();
    var condition = $('#SearchCondition option:selected').val();
    var riskTypes = [];
    $('input[name=SearchRiskType]:checked').each(function () {
        if ($(this)[0].checked == true)
            riskTypes.push($(this)[0].value);

    });
    var riskType = riskTypes.join(',');
    $(this).find('.modal-title').text(title);
    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetSearchPatients',
        data: JSON.stringify({
            PatientName: patientName,
            Resource: resource,
            Condition: condition,
            RiskType: riskType
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            $('#tblCMPatientLookUp').dataTable({
                "dom": 'frltip',
                destroy: true,
                pagingType: "simple",
                data: data.patientList,
                scrollX: true,
                "language": {
                    "search": "",
                    "sZeroRecords": "No data available",
                    paginate: {
                        next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                        previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                    }
                },
                initComplete: function () {
                    $('.dt-buttons').addClass('pull-right buttons_line');
                    $('.dataTables_filter input').addClass('form-control search_text_datatable');
                    $('.dataTables_length select').addClass('form-control selectbox_entries');
                    $('.dataTables_filter input').attr('placeholder', 'Search');
                    $('.column-btn').click(function () {
                        $column_btn_this = $(this)
                        colvis_scroll();
                    });
                    $(document).on('click', '.dt-button-collection .dt-button', function () {
                        colvis_inner_button();
                    });
                },
                aoColumns: [
                    { "data": "Id", "title": "Id", sClass: "hidden table_id" },
                    { "data": "LastName", "title": "Last Name", sClass: "text-center" },
                    { "data": "FirstName", "title": "First Name", sClass: "text-center" },
                    {
                        "data": "DateOfBirth", "title": "Date Of Birth", sClass: "text-center", "render": function (data) {
                            if (data != null && data.length > 0) {

                                d = data.split(' ')[0];
                                return d;
                            }
                            else {
                                return '';
                            }
                        }
                    },
                    { "data": "PhoneNumber1", "title": "Phone Number", sClass: "text-center" },
                    { "data": "SSN", "title": "SSN", sClass: "text-center" },
                    { "data": "RiskProfile", "title": "RiskProfile", sClass: "text-center" }
                ]
            });
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            //Show the mmodal popup.
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
});

//$(".addCaseAssinger").click(function () {

//    $("#CareDestination option:selected").each(function () {
//        $(this).val();
//    });
//});

function AssignmentDetailsPoup(assignment) {
    //$("#ModalClinicalDistribution1 .modal-body").html("");
    $("#DivclinicalDis").hide();
    $("#DivAssignmentPatients").show();
    $("tblAssignmentPatients_wrapper").hide();
    $("#ModalClinicalDistribution").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#ModalClinicalDistribution .modal-title").css("color", "white");
    $("#ModalClinicalDistribution .modal-title").html(assignment + " Patient List");
    //$(".loader").show();
    if ($.fn.DataTable.isDataTable('#tblAssignmentPatients')) {
        $('#tblAssignmentPatients').DataTable().destroy();
    }

    $('#tblAssignmentPatients').dataTable({
        "dom": 'frlt<"dt-buttons">ip',

        "processing": true,
        "serverSide": true,
        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
        pagingType: "simple",
        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            },
            sProcessing: "<div class='col-xs-12 loader'></div>"
        },
        scrollX: true,
        "ajax": {
            "type": "POST",
            "url": serverRoot + '/Insights/Insights/GetCareManagerAssignmentDetails',
            "data": {
                Assignment: assignment
            },
            "complete": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            },
            "error": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            }
        },

        initComplete: function () {
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');
            $('.column-btn').click(function () {
                colvis_scroll();
            });

            var $searchInput = $('div.dataTables_filter input');
            $searchInput.unbind();
            $searchInput.bind('keyup', function (e) {
                if (this.value.length > 3) {
                    var dtable = $("#tblAssignmentPatients").dataTable().api();
                    dtable.search(this.value).draw();
                }
                if (this.value.length == 0) { var dtable = $("#tblAssignmentPatients").dataTable().api(); dtable.search("").draw(); }
            });
        },
        aoColumns: [
            { "data": "PatientId", "title": "PatientId", sClass: "hidden" },
            { "data": "EmailAddress", "title": "EmailAddress", sClass: "hidden" },
            { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
            { "data": "GroupOwnerFullName", "title": "Case Manager", sClass: "text-center", "orderable": false },
            {
                "data": "Risk", "title": "Risk", sClass: "text-center",
                "render": function (data, type, full, meta) {
                    switch (data) {
                        case "3":
                            return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag-Green.svg style='width:15px;height:15px;'/></a>";
                            break;
                        case "2":
                            return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag_yellow.svg style='width:15px;height:15px;'/></a>";
                            break;
                        case "1":
                            return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag_red.svg style='width:15px;height:15px;' /></a>";
                            break;
                        default:
                            return "<a href='javascript:void(0);'><img src=" + serverRoot + "/Images/flag_Grey.svg style='width:15px;height:15px;' /></a>";
                            break;

                    }
                }
            },
            { "data": "GroupName", "title": "Group", sClass: "text-center" },
            { "data": "Status", "title": "Status", sClass: "text-center" },
            {
                "data": "Conditions", "title": "Conditions", sClass: "text-center text-wrap",
                "render": function (data, type, full, meta) {
                    return "<div class='text-wrap'>" + data + "</div>";
                }
            },
            { "data": "EffectiveDate", "title": "Effective Date", sClass: "text-center" },
            { "data": "UpdatedDate", "title": "Last Updated On", sClass: "text-center" },
            {
                "data": null, "targets": 'no-sort', "orderable": false,
                "render": function (data, type, full, meta) {
                    return "<a href='javascript:void(0);'onclick='showCreateCarePlanPopup(\"Create Care Plan\",\"" + full['PatientId'] + "\");return false'><img src='https://gc9.bridgelive.net/Base502_June2019//images/document-02.svg' style='width:15px;height:15px;' title='Create care plan'/></a>";
                }
            },
            {
                "data": null, "targets": 'no-sort', "orderable": false,
                "render": function (data, type, full, meta) {
                    return "<a href='javascript:void(0);'onclick='showCRModalPopup(\"Compose Message\",\"" + full['EmailId'] + "\",\"" + '' + "\");return false'><img src='https://gc9.bridgelive.net/Base502_June2019//images/mail-02.svg' style='width:15px;height:15px;' title='Send a message'/></a>";
                }
            },
            {
                "data": null, "targets": 'no-sort', "orderable": false,
                "render": function (data, type, full, meta) {
                    return "<a onclick=SetPhpPatientID('" + full["PatientId"] + "')  href='javascript:void(0);'><img src='https://gc9.bridgelive.net/Base502_June2019//images/go-to-php-01.svg' style='width:15px;height:15px;' title='Go to PHP'/></a>"
                }
            },
            {
                "data": null, "targets": 'no-sort', "orderable": false,
                "render": function (data, type, full, meta) {
                    return "<a href='javascript:void(0);'onclick='schedulePatientAppointment(\"" + full['PatientId'] + "\");return false'><img src='https://gc9.bridgelive.net/Base502_June2019//images/Calender-01.svg' style='width:15px;height:15px;' title='Schedule Appointment'/></a>";
                }
            },
            {
                "data": null, "targets": 'no-sort', "orderable": false,
                "render": function (data, type, full, meta) {
                    return '<a class="download"; href=' + serverRoot + '/Insights/Insights/DownloadClinicalDocument/' + full['CarePlanReportId'] + '><img src=' + serverRoot + '/Images/Adobe-01.svg style="width:15px;height:15px;" title="Download PDF"/></a>'
                    //"<a class='download';href='javascript:void(0);'onclick='downloadCarePlan(\"" + full["PatientId"] + "\");return false'><img src=" + serverRoot + "/Images/Adobe-01.svg style='width:15px;height:15px;' title='Download PDF'/></a>";
                }
            }
        ]
    });
    var toolBar = "&nbsp;&nbsp;<img src=" + serverRoot + "/images/document-02.svg style=width:15px;height:15px; title=Create care plan/>&nbsp;Create care plan&nbsp;&nbsp;<img src=" + serverRoot + "/images/mail-02.svg style=width:15px;height:15px; title=Send a message/>&nbsp;Send a message&nbsp;&nbsp;";
    toolBar += "<img src=" + serverRoot + "/images/go-to-php-01.svg style=width:15px;height:15px; title=Go to PHP/>&nbsp;Go to PHP&nbsp;&nbsp;<img src=" + serverRoot + "/images/Calender-01.svg style=width:15px;height:15px; title=Schedule Appointment/>&nbsp;Schedule Appointment&nbsp;&nbsp;";
    toolBar += "<img src=" + serverRoot + "/images/Adobe-01.svg style=width:15px;height:15px; title=Download PDF/>&nbsp;Download PDF";
    $("div.dt-buttons").html(toolBar);

}

function schedulePatientAppointment(patientId) {

    $("#CarePlanModal .modal-body").html("");
    $("#CarePlanModal").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });
    $("#CarePlanModal .modal-title").css("color", "white");
    $("#CarePlanModal .modal-title").html("Appointment Scheduler");
    var createPlanWindow = $(window).height() - 150;
    $(".loader").show();
    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetIgnitePatientScheduler',
        data: JSON.stringify({
            PatientId: patientId
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: function (data) {

            $("#CarePlanModal .modal-body").html('<iframe id="appointmentIframe" sandbox="allow-same-origin allow-scripts allow-popups allow-forms allow-modals" src="' + data.IgnitePatientSchedulerUrl + '" style="width:100%; height: ' + createPlanWindow + 'px;"></iframe>');
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });

}



function assignCharts() {

    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetCareManagerAssignment',
        dataType: "json",
        contentType: 'application/json; charset=utf-8',
        async: false,
        processData: false,
        cache: false,
        success: function (data) {

            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'assignment_care',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return Math.round(this.percentage * 100) / 100 + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.point.name + '</b>: ' + this.y;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return this.name + ' ';
                    },
                    itemStyle: {
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: [["Assigned", data.AssignmentPatient[0].AssignedCount], ["Unassigned", data.AssignmentPatient[0].UnAssignedCount]],
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            click: function () {
                                AssignmentDetailsPoup(this.name)
                            }
                        }
                    }
                }]
            });
        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
            //Show the mmodal popup.
            // ValidationMessage("Unable to Process Request. Please Try Again Later.5");           
        }
    });

}


function LabUtilizationDetailsPoup(SliceName, PieChartName) {
    debugger;

    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    var pietitle;
    var tableName;
    export_datayear = currentYear;

    if (PieChartName === "PROVIDER") {
        pietitle = "By Provider";
        tableName = 'tblLabUtilizationByProvider';
        $("#DivLabOrder").hide();
        $("#DivLabProvider").show();
    }
    else {
        pietitle = "By Ordered";
        tableName = 'tblLabUtilizationByOrder';
        $("#DivLabProvider").hide();
        $("#DivLabOrder").show();
    }


    //var url = serverRoot + '/Insights/Insights/GetLabUtilizationDetails';

    //$("#DivLabProvider").load(url, function () {
    $(".modal .modal-title").css("color", "white");
    $(".modal .modal-title").html("<a style='margin-left:0px; color: white;' href='javascript:void(0);' onclick='closePopUp()'> Lab Utilization " + pietitle + " </a>"
        + " -> <a style='color: white;' href='javascript:void(0);' onclick='closeDetailsPopUp()'>" + SliceName + "</a>"
    );
    $("#ModalLabUtilization").modal({
        show: true,
        backdrop: 'static',
        keyboard: false
    });

    $(".loader").show();

    table = $('#' + tableName).dataTable({
        "dom": 'Bfrltip',
        destroy: true,
        "processing": true,
        "serverSide": true,
        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
        pagingType: "simple",
        "scrollX": true,
        fixedHeader: true,
        //scrollY: "350px",
        scrollY: false,
        "ajax": {
            "type": "POST",
            "url": serverRoot + '/Insights/Insights/GetLabUtilizationDetails',
            "datatype": "json",
            "data": {
                SliceName: SliceName, PieChartName: PieChartName, PracticeId: practiceId, PhysicianId: physicianId, Year: currentYear, regionId: RegionId, IsAssignable: isAssignable
            },
            "complete": function () {
                $(".loader").fadeOut("slow");
                $(".serverloader").fadeOut("slow");
            },
        },

        "language": {
            "search": "",
            "sZeroRecords": "No data available",
            paginate: {
                next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
            }
        },
        initComplete: function () {
            $('.dt-buttons').addClass('pull-right buttons_line');
            $('.dataTables_filter input').addClass('form-control search_text_datatable');
            $('.dataTables_length select').addClass('form-control selectbox_entries');
            $('.column-btn').click(function () {
                $column_btn_this = $(this)
                colvis_scroll();
            });
            $(document).on('click', '.dt-button-collection .dt-button', function () {
                colvis_inner_button();
            });

            var $searchInput = $('div.dataTables_filter input');

            $searchInput.unbind();

            $searchInput.bind('keyup', function (e) {
                if (this.value.length > 3) {
                    var dtable = $('#' + tableName).dataTable().api();
                    dtable.search(this.value).draw();
                }

                if (this.value.length == 0) {
                    var dtable = $('#' + tableName).dataTable().api();
                    dtable.search("").draw();
                }

            });

        },
        order: [[6, "desc"]],
        aoColumns: [
            { "data": "HICN", "title": "HICN", sClass: "text-center" },
            { "data": "MBI", "title": "Patient Id", sClass: "text-center" },
            { "data": "ClaimID", "title": "Claim ID", sClass: "text-center" },
            { "data": "PracticeName", "title": "Practice Name", sClass: "text-center" },
            // { "data": "PatientId", "title": "PatientId", sClass: "text-center" },
            { "data": "PatientName", "title": "Patient Name", sClass: "text-center" },
            { "data": "DateOfBirth", "title": "Date Of Birth", sClass: "text-center" },
            { "data": "TotalCost", "title": "Total Cost", sClass: "text-center" },
        ],

        buttons: [
            {
                extend: 'excel',
                filename: 'Data export-',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'excel-btn',
                titleAttr: 'Export',
                action: function (e, dt, node, config) {
                    ExportToExcel(PieChartName, tableName, SliceName);
                }
            },
            {
                extend: 'colvis',
                "columns": '0,1,2,3,4,5',
                exportOptions: {
                    columns: ':visible'
                },
                className: 'column-btn',
                titleAttr: 'More'
            },
        ],
        columnDefs: [{
            targets: [0],
            visible: false
        }]
    });
    oTable = table.fnSettings();
    //});

}



function ReloadLabUtilization(practiceId, physicianId, RegionId, isAssignable) {

    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    $(".loader").show();

    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetLabUtilization',
        data: JSON.stringify({
            PracticeId: practiceId, PhysicianId: physicianId, regionId: RegionId, Year: currentYear, IsAssignable: isAssignable
        }),
        dataType: "json",
        contentType: 'application/json; charset=utf-8',
        async: false,
        processData: false,
        cache: false,
        success: function (data) {

            //Lab Utilization By Provider
            var LabUtilizationByProvider = data.LabUtilizationByProvider;
            var LabUtilizationByOrder = data.LabUtilizationByOrder;
            var labName = Array();
            var count = Array();
            var dataByProvider = Array();
            if (LabUtilizationByProvider != null) {
                for (i = 0; i < LabUtilizationByProvider.length; i++) {
                    labName[i] = LabUtilizationByProvider[i].LabName;
                    count[i] = LabUtilizationByProvider[i].Count;
                }

                for (j = 0; j < labName.length; j++) {
                    var temp = new Array(labName[j], count[j]);
                    dataByProvider[j] = temp;
                }
            }

            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'labUtilization_Provider',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return Math.round(this.percentage * 100) / 100 + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.point.name + '</b>: ' + this.y;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return this.name + ' ';
                    },
                    itemStyle: {
                        width: '70px',
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: dataByProvider,
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            click: function () {
                                LabUtilizationDetailsPoup(this.name, "PROVIDER")
                            }
                        }
                    }
                }]
            });

            //Lab Utilization By Order
            var OrderName = Array();
            var OrderCount = Array();
            var dataByOrder = Array();
            if (LabUtilizationByOrder != null) {
                for (i = 0; i < LabUtilizationByOrder.length; i++) {
                    OrderName[i] = LabUtilizationByOrder[i].OrderCode;
                    OrderCount[i] = LabUtilizationByOrder[i].Count;
                }

                for (j = 0; j < OrderName.length; j++) {
                    var temp = new Array(OrderName[j], OrderCount[j]);
                    dataByOrder[j] = temp;
                }

            }
            Highcharts.setOptions({
                colors: ['#5a9bd3', '#ff6d6d', '#a5a5a5', '#ffbf03', '#4471c4', '#009997', '#265e91']
            });
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'labUtilization_Order',
                    type: 'pie'
                },
                title: {
                    text: ''
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            color: '#000000',
                            connectorColor: '#000000',
                            formatter: function () {
                                return Math.round(this.percentage * 100) / 100 + ' %';
                            },
                            distance: -10,
                            color: 'white'
                        }
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.point.name + '</b>: ' + this.y;
                    }
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    symbolRadius: 0,
                    labelFormatter: function () {
                        return this.name + ' ';
                    },
                    itemStyle: {
                        width: '70px',
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        fontWeight: 'normal',
                        fontSize: '10',
                        fontfamily: 'Roboto-Regular'
                    }
                },
                credits: { enabled: false },
                series: [{
                    name: 'Browsers',
                    data: dataByOrder,
                    size: '120%',
                    innerSize: '50%',
                    showInLegend: true,
                    dataLabels: {
                        enabled: false
                    },
                    point: {
                        events: {
                            click: function () {
                                LabUtilizationDetailsPoup(this.name, "ORDER")
                            }
                        }
                    }
                }]
            });

        },
        complete: function () {
            $(".loader").fadeOut("slow");
        },
        error: function (xhr) {
            $(".loader").fadeOut("slow");
        }
    });

}
function formatDate(inputDates) {
    debugger;

    var newDate = '';
    if (inputDates != null && inputDates != "N/A") {

        var eachDate = inputDates.split(',');
        for (i = 0; i < eachDate.length; i++) {
            var date = new Date(eachDate[i]);
            if (!isNaN(date.getTime())) {
                var day = date.getDate().toString();
                var month = (date.getMonth() + 1).toString();
                // Months use 0 index.
                var formattedDate = (month[1] ? month : '0' + month[0]) + '/' +
                    (day[1] ? day : '0' + day[0]) + '/' +
                    date.getFullYear();
                newDate += formattedDate + ', ';
            }
        }

    }
    if (inputDates != "N/A")
        newDate = newDate.slice(0, -2);
    else
        newDate = "N/A";
    return newDate;
}


function GetCurrentVersusPriorKPISpendDetails(year, reportName, practiceId, physicianId) {

    $(".loader").show();
    document.getElementById('currentVsPriorLoader').style.display = "block";
    document.getElementById('currentVsPriorWrapper').style.display = "none";
    $.ajax({
        type: "POST",
        //url: serverRoot + '/Insights/Insights/GetCurrentVersusPriorGraph',
        url: serverRoot + '/Insights/Insights/GetCurrentVersusPriorReportDetails',
        data: JSON.stringify({
            Year: currentYear,
            YearStatus: YearStatus,
            CurrentVersusPriorName: reportName,
            PracticeId: practiceId,
            PhysicianId: physicianId,
            regionId: RegionId,
            IsAssignable: isAssignable
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        language: {
            search: "",
            sZeroRecords: "No data available",
        },
        success: function (data) {
            console.log('success kpi & spend', data.ResponseDetails);
            switch (reportName) {
                case 'KPI':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindKPIRecord();
                    break;
                case 'SPEND':
                    new CurrentVersusPriorReport(data.ResponseDetails).bindSPENDRecord();
                    break;
            }
          
        },
        complete: function () {
            $(".loader").fadeOut("slow");
            document.getElementById('currentVsPriorWrapper').style.display = "block";
            document.getElementById('currentVsPriorLoader').style.display = "none";
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}

function GetCurrentVersusPriorGridData(year, reportName, practiceId, physicianId, category) {
    var gridDetails = {};

    $.ajax({
        type: "POST",
        url: serverRoot + '/Insights/Insights/GetCurrentVersusPriorReportDetails',
        data: JSON.stringify({
            Year: year,
            CurrentVersusPriorName: reportName,
            PracticeId: practiceId,
            PhysicianId: physicianId,
            regionId: RegionId,
            IsAssignable: isAssignable
        }),
        contentType: 'application/json; charset=utf-8',
        dataType: "json",
        language: {
            search: "",
            sZeroRecords: "No data available",
        },
        success: function (data) {
            console.log('success AWV', data.ResponseDetails);

            this.TableFieldDetails = [
                {
                    "data": "PatientLastName", "title": "Patient Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        return data + ', ' + full["PatientFirstName"];
                    }
                },
                {
                    "data": "PhysicianLastName", "title": "Provider Name", sClass: "text-center",
                    "render": function (data, type, full, meta) {
                        if (data != null && data.length > 0) {

                            return data + ', ' + full["PhysicianFirstName"];
                        }
                        else {
                            return 'N/A';
                        }
                    }

                },
                { "data": "RecentAWVCode", "title": "Recent AWV Code", sclass: "text-center" },
                {
                    "data": "RecentAWVDate", "title": "Most Recent AWV Date", sClass: "text-center",
                },
                {
                    "data": "NextAWVDate", "title": "Next AWV Scheduled", sClass: "text-center",
                }
            ];

            switch (category) {
                case 'Current Year':
                    console.log("rname" + reportName);
                    $(".modal .modal-title").html("Current Vs Prior > " + reportName + " > YTD");

                    gridDetails.Data = data.ResponseDetails.CurrentYearDetails;
                    gridDetails.FieldName = this.TableFieldDetails;
                    new BindCurrentversusPriorTable(gridDetails, 'AWV', 'YTD');
                    oTable = gridDetails;

                    break;
                case 'Last Year':
                    $(".modal .modal-title").html("Current Vs Prior > " + reportName + " > LY");
                    gridDetails.Data = data.ResponseDetails.CurrentYearDetails;
                    gridDetails.FieldName = this.TableFieldDetails;
                    new BindCurrentversusPriorTable(gridDetails, 'FLU-Shots', 'LY');
                    Table = gridDetails;

                    break;
            }
            // popuptable();
        },
        complete: function () {
            $(".loader").fadeOut("slow");
            document.getElementById('currentVsPriorWrapper').style.display = "block";
            document.getElementById('currentVsPriorLoader').style.display = "none";
        },
        error: function (xhr) {
            //Show the mmodal popup.
            ValidationMessage("Unable to Process Request. Please Try Again Later.");
        }
    });
}

function BindDatatableKPISpend(reportName, Year) {
    IsCompleted = $("#hdnIsCompleted").val();
    var currentYear = 1;
    if ($("#last_year").is(':checked')) {
        currentYear = currentYear - 1;
    }
    //$("#DivCurrentvsprior").html('');
    if (reportName == 'KPI') {
        //$("#DivCurrentvsprior").append('<table id="Currentvsprior" class="table tblFAR table-striped" style="width:100%"></table>');
        var table = $('#kpi-tables').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            destroy: true,
            cache: false,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            "iDisplayLength": 10,
            pagingType: "simple",
            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
            },
            scrollX: true,
            fixedHeader: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetCurrentVersusPriorReportDetails',
                "data": {
                    Year: Year,
                    CurrentVersusPriorName: reportName,
                    PracticeId: practiceId,
                    PhysicianId: physicianId,
                    regionId: RegionId,
                    IsAssignable: isAssignable
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    oTable = table.fnSettings();
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                }
            },
            initComplete: function () {
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_length select').removeClass('form-control selectbox_entries');
                $('.table-responsive').css('table-layout', 'fixed');
                $('.dataTables_length').css('display', 'none');
            },
            aoColumns: [
                { "data": "PracticeName", "title": "", sClass: "text-center" },
                //{ "data": "NumberOfAssignedBeneficiaries", "title": "Assigned Beneficiaries", sClass: "text-center" },
                { "data": "PYF", "title": "YTD Person Years", sClass: "text-center" },
                { "data": "PMPMString", "title": "PMPM", sClass: "text-center" },
                { "data": "InpatientAdmits", "title": "Inpatient Admits/1000", sClass: "text-center" },
                { "data": "ERAdmits", "title": "ER Visits/1000", sClass: "text-center" },
                { "data": "ERVisitsPMPMString", "title": "ER Visits PMPM", sClass: "currency" },
                { "data": "SNFVisitsPMPMString", "title": "SNF PMPM", sClass: "currency" },
                { "data": "HHAVisitsPMPMString", "title": "HHA PMPM", sClass: "currency" },
                { "data": "PartBPMPMString", "title": "Part-B PMPM", sClass: "currency" },
                //{ "data": "TotalCostYear2String", "title": "Total Cost-Year",  sType: "currency" },
                { "data": "TotalCostYear2", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost-Year", sClass: "text-center", sType: "currency" },
            ],
            buttons: [

                {
                    extend: 'excel',
                    filename: 'Data export-' + reportName,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {

                        ExportToExcel('Currentvsprior', 'kpi-tables', '', '', currentYear, currentYear);

                    }
                },

            ],
        });
    }
    else {
        //$("#DivCurrentvsprior").append('<table id="CurrentvspriorFLU" class="table tblFAR table-striped" style="width:100%"></table>');
        table = $('#spend-tables').dataTable({
            "dom": 'Bfrltip',
            "processing": true,
            "serverSide": true,
            destroy: true,
            cache: false,
            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            "iDisplayLength": 10,
            pagingType: "simple",
            "language": {
                "search": "",
                "sZeroRecords": "No data available",
                paginate: {
                    next: '<i class="glyphicon glyphicon-triangle-right"></i>',
                    previous: '<i class="glyphicon glyphicon-triangle-left"></i>'
                },
            },
            scrollX: true,
            fixedHeader: false,
            "ajax": {
                "type": "POST",
                "url": serverRoot + '/Insights/Insights/GetCurrentVersusPriorReportDetails',
                "data": {
                    Year: currentYear,
                    YearStatus: currentYear,
                    CurrentVersusPriorName: reportName,
                    PracticeId: practiceId,
                    PhysicianId: physicianId,
                    regionId: RegionId,
                    IsAssignable: isAssignable,
                    IsCompleted: IsCompleted
                },
                "complete": function () {
                    $(".loader").fadeOut("slow");
                    oTable = table.fnSettings();
                },
                "error": function () {
                    $(".loader").fadeOut("slow");
                }
            },
            initComplete: function () {
                $('.dataTables_filter input').addClass('form-control search_text_datatable');
                $('.dt-buttons').addClass('pull-right buttons_line');
                $('.dataTables_length select').removeClass('form-control selectbox_entries');
                $('.table-responsive').css('table-layout', 'fixed');
                $('.dataTables_length').css('display', 'none');
            },
            aoColumns: [
                { "data": "PracticeName", "title": "", sClass: "text-center" },
                { "data": "BenchmarkPMPY", "title": "Benchmark PMPY", sClass: "currency" },
                { "data": "ActualPMPY", "render": $.fn.dataTable.render.number(',', '.', 2, ''), "title": "Actual PMPY", sClass: "text-center", sType: "currency" },
                { "data": "InpatientCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Inpatient Cost", sClass: "text-center", sType: "currency" },
                { "data": "OutpatientCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Outpatients Cost", sClass: "text-center", sType: "currency" },
                { "data": "ERCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "ER Cost ", sClass: "currency" },
                { "data": "SNFCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "SNF Cost", sClass: "currency" },
                { "data": "HHACost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "HHA Cost", sClass: "currency" },
                { "data": "Pharmacycost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Part B Cost", sClass: "currency" },
                { "data": "TotalCost", "render": $.fn.dataTable.render.number(',', '.', 2, '$'), "title": "Total Cost", sClass: "text-center" }
            ],
            buttons: [

                {
                    extend: 'excel',
                    title: 'Data export-' + reportName,
                    exportOptions: {
                        columns: ':visible'
                    },
                    className: 'excel-btn',
                    titleAttr: 'Export',
                    action: function (e, dt, node, config) {

                        ExportToExcel('Currentvsprior', 'spend-tables', '', '', currentYear, currentYear);

                    }
                }
            ],
        });
    }

}
